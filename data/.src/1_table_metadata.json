[
    {
      "catalog_name": "SANDBOX_DATALAKE",
      "schemas": [
        {
          "schema_name": "sandbox_datalake",
          "tables": [
            {
              "table_name": "assignment_term_area_changed",
              "column_info": [
                {
                  "column_name": "event_uuid",
                  "dtype": "string",
                  "description": "Unique identifier (UUID) for the event."
                },
                {
                  "column_name": "event_kafka_timestamp",
                  "dtype": "timestamp",
                  "description": "Timestamp when the event message was produced to Kafka."
                },
                {
                  "column_name": "event_timestamp",
                  "dtype": "timestamp",
                  "description": "Timestamp recorded by the event source indicating when the event occurred."
                },
                {
                  "column_name": "product_uuid",
                  "dtype": "string",
                  "description": "UUID of the product related to the assignment term change."
                },
                {
                  "column_name": "vendor_uuid",
                  "dtype": "string",
                  "description": "UUID of the vendor related to the assignment term change."
                },
                {
                  "column_name": "_meta",
                  "dtype": "struct<event_uuid:string,event_time:string,application:string,origin:string,experiments:array<struct<id:string,variant:string>>,client_info:struct<asn:string,country:string,region:string,city:string,postal_code:string,latitude:string,longitude:string,ja4_fingerprint:string,is_desktop_viewer:boolean,is_mobile_viewer:boolean,is_smarttv_viewer:boolean,is_tablet_viewer:boolean,is_android_viewer:boolean,is_ios_viewer:boolean>,user:struct<uuid:string,roles:array<string>>>",
                  "description": "Nested event metadata including client details and user information; may contain personal data such as user UUID and location."
                },
                {
                  "column_name": "assignment_term_id",
                  "dtype": "bigint",
                  "description": "Internal numeric identifier of the assignment term affected by the change."
                }
              ]
            },
            {
              "table_name": "assignment_term_change_request_created",
              "column_info": [
                {
                  "column_name": "_meta",
                  "dtype": "struct<event_uuid:string,event_time:string,application:string,origin:string,experiments:array<struct<id:string,variant:string>>,client_info:struct<asn:string,country:string,region:string,city:string,postal_code:string,latitude:string,longitude:string,ja4_fingerprint:string,is_desktop_viewer:boolean,is_mobile_viewer:boolean,is_smarttv_viewer:boolean,is_tablet_viewer:boolean,is_android_viewer:boolean,is_ios_viewer:boolean>,user:struct<uuid:string,roles:array<string>>>",
                  "description": "Structured event metadata including event UUID, timestamps, client location/device info, experiments, and embedded user info (uuid and roles)."
                },
                {
                  "column_name": "event_timestamp",
                  "dtype": "timestamp",
                  "description": "Timestamp of the event occurrence as recorded in the payload."
                },
                {
                  "column_name": "change_request_id",
                  "dtype": "bigint",
                  "description": "Unique numeric identifier for the change request."
                },
                {
                  "column_name": "requested_by",
                  "dtype": "string",
                  "description": "Identifier or display name of the user who requested the change."
                },
                {
                  "column_name": "event_uuid",
                  "dtype": "string",
                  "description": "Unique UUID identifying the originating event."
                },
                {
                  "column_name": "assignment_term_id",
                  "dtype": "bigint",
                  "description": "Identifier of the assignment term affected by the change request."
                },
                {
                  "column_name": "event_kafka_timestamp",
                  "dtype": "timestamp",
                  "description": "Timestamp when the event was produced to Kafka."
                },
                {
                  "column_name": "reason",
                  "dtype": "string",
                  "description": "Short code or category representing the reason for the change."
                },
                {
                  "column_name": "is_internal",
                  "dtype": "boolean",
                  "description": "Boolean flag indicating whether the change request was initiated by an internal user or system."
                },
                {
                  "column_name": "reason_explanation",
                  "dtype": "string",
                  "description": "Free-text explanation provided for why the change was requested."
                },
                {
                  "column_name": "requested_by_normalized",
                  "dtype": "string",
                  "description": "Normalized form of the requester identifier for standardized matching and analysis."
                },
                {
                  "column_name": "change_request_type",
                  "dtype": "string",
                  "description": "Category or type of the change request (for example, extend or shorten)."
                }
              ]
            },
            {
              "table_name": "assignment_term_status_changed",
              "column_info": [
                {
                  "column_name": "product_uuid",
                  "dtype": "string",
                  "description": "Identifier of the product associated with the assignment term."
                },
                {
                  "column_name": "event_timestamp",
                  "dtype": "timestamp",
                  "description": "Timestamp indicating when the status change event occurred."
                },
                {
                  "column_name": "_meta",
                  "dtype": "struct<event_uuid:string,event_time:string,application:string,origin:string,experiments:array<struct<id:string,variant:string>>,client_info:struct<asn:string,country:string,region:string,city:string,postal_code:string,latitude:string,longitude:string,ja4_fingerprint:string,is_desktop_viewer:boolean,is_mobile_viewer:boolean,is_smarttv_viewer:boolean,is_tablet_viewer:boolean,is_android_viewer:boolean,is_ios_viewer:boolean>,user:struct<uuid:string,roles:array<string>>>",
                  "description": "Nested event metadata containing event identifiers, client information, and user details; may include PII such as user UUID and location."
                },
                {
                  "column_name": "event_uuid",
                  "dtype": "string",
                  "description": "Unique identifier for the status-change event."
                },
                {
                  "column_name": "vendor_uuid",
                  "dtype": "string",
                  "description": "Identifier of the vendor associated with the assignment term."
                },
                {
                  "column_name": "event_kafka_timestamp",
                  "dtype": "timestamp",
                  "description": "Timestamp when the event was produced to Kafka."
                },
                {
                  "column_name": "assignment_term_id",
                  "dtype": "bigint",
                  "description": "Numeric identifier of the assignment term whose status changed."
                },
                {
                  "column_name": "status",
                  "dtype": "string",
                  "description": "New status value for the assignment term (for example: active, inactive)."
                }
              ]
            },
            {
              "table_name": "bingads_performance_ads",
              "column_info": [
                {
                  "column_name": "aggregation_date",
                  "dtype": "string",
                  "description": "Date when metrics were aggregated in YYYY-MM-DD format."
                },
                {
                  "column_name": "return_on_ad_spend",
                  "dtype": "double",
                  "description": "Return on ad spend (ROAS) metric calculated for the ad."
                },
                {
                  "column_name": "account_status",
                  "dtype": "string",
                  "description": "Operational status of the account."
                },
                {
                  "column_name": "tracking_template",
                  "dtype": "string",
                  "description": "Tracking template applied to the ad's URL for parameter insertion."
                },
                {
                  "column_name": "ad_type",
                  "dtype": "string",
                  "description": "Format or type of the ad (e.g., text, responsive)."
                },
                {
                  "column_name": "crt",
                  "dtype": "double",
                  "description": "Click-through rate (clicks divided by impressions)."
                },
                {
                  "column_name": "final_mobile_url",
                  "dtype": "string",
                  "description": "Final landing page URL optimized for mobile devices."
                },
                {
                  "column_name": "cost_per_assist",
                  "dtype": "double",
                  "description": "Average cost incurred per assist action."
                },
                {
                  "column_name": "conversion_rate",
                  "dtype": "double",
                  "description": "Ratio of conversions to clicks for the ad."
                },
                {
                  "column_name": "custom_parameters",
                  "dtype": "string",
                  "description": "Custom tracking parameters associated with the ad."
                },
                {
                  "column_name": "ad_group_status",
                  "dtype": "string",
                  "description": "Operational status of the ad group (e.g., enabled, paused)."
                },
                {
                  "column_name": "top_vs_other",
                  "dtype": "string",
                  "description": "Indicator of ad position (top of page versus other positions)."
                },
                {
                  "column_name": "campaign_status",
                  "dtype": "string",
                  "description": "Operational status of the campaign (e.g., active, paused)."
                },
                {
                  "column_name": "bid_match_type",
                  "dtype": "string",
                  "description": "Bid match type used for matching bids (e.g., exact, phrase)."
                },
                {
                  "column_name": "network",
                  "dtype": "string",
                  "description": "Advertising network where the ad was displayed."
                },
                {
                  "column_name": "spend",
                  "dtype": "double",
                  "description": "Total advertising spend for the ad during the aggregation period."
                },
                {
                  "column_name": "campaign_id",
                  "dtype": "bigint",
                  "description": "Identifier for the campaign containing the ad."
                },
                {
                  "column_name": "revenue_per_assist",
                  "dtype": "double",
                  "description": "Revenue attributed per assist action."
                },
                {
                  "column_name": "revenue_per_conversion",
                  "dtype": "double",
                  "description": "Revenue attributed per conversion."
                },
                {
                  "column_name": "ad_id",
                  "dtype": "bigint",
                  "description": "Unique identifier for the ad."
                },
                {
                  "column_name": "assists",
                  "dtype": "bigint",
                  "description": "Number of assist actions contributing to conversions."
                },
                {
                  "column_name": "average_cpc",
                  "dtype": "double",
                  "description": "Average cost per click for the ad."
                },
                {
                  "column_name": "ad_distribution",
                  "dtype": "string",
                  "description": "Where the ad was shown (for example Search or Content networks)."
                },
                {
                  "column_name": "delivery_match_type",
                  "dtype": "string",
                  "description": "Match type between the delivered ad and the target (e.g., exact, phrase)."
                },
                {
                  "column_name": "conversions",
                  "dtype": "bigint",
                  "description": "Number of conversions attributed to the ad."
                },
                {
                  "column_name": "ad_group_id",
                  "dtype": "bigint",
                  "description": "Identifier for the ad group containing the ad."
                },
                {
                  "column_name": "account_id",
                  "dtype": "bigint",
                  "description": "Identifier for the advertiser account; may identify an individual or business."
                },
                {
                  "column_name": "impressions",
                  "dtype": "bigint",
                  "description": "Number of times the ad was shown."
                },
                {
                  "column_name": "destination_url",
                  "dtype": "string",
                  "description": "Destination URL users land on when clicking the ad."
                },
                {
                  "column_name": "currency_code",
                  "dtype": "string",
                  "description": "ISO currency code used for monetary metrics."
                },
                {
                  "column_name": "clicks",
                  "dtype": "bigint",
                  "description": "Number of clicks the ad received."
                },
                {
                  "column_name": "cost_per_conversion",
                  "dtype": "double",
                  "description": "Average cost paid for each conversion."
                },
                {
                  "column_name": "device_os",
                  "dtype": "string",
                  "description": "Operating system of the device where the ad was served."
                },
                {
                  "column_name": "revenue",
                  "dtype": "double",
                  "description": "Revenue attributed to the ad's conversions."
                },
                {
                  "column_name": "ad_status",
                  "dtype": "string",
                  "description": "Operational status of the ad (e.g., enabled, paused)."
                },
                {
                  "column_name": "language",
                  "dtype": "string",
                  "description": "Language targeting or detected language for the impression."
                },
                {
                  "column_name": "device_type",
                  "dtype": "string",
                  "description": "Type of device (e.g., mobile, desktop, tablet)."
                },
                {
                  "column_name": "final_url",
                  "dtype": "string",
                  "description": "Final landing page URL after any redirects."
                },
                {
                  "column_name": "display_url",
                  "dtype": "string",
                  "description": "URL displayed in the ad creative."
                },
                {
                  "column_name": "final_app_url",
                  "dtype": "string",
                  "description": "Final app deep link URL used after click-through."
                }
              ]
            },
            {
              "table_name": "bingads_performance_campaigns",
              "column_info": [
                {
                  "column_name": "revenue_per_assist",
                  "dtype": "double",
                  "description": "Average revenue attributed to each assist interaction."
                },
                {
                  "column_name": "currency_code",
                  "dtype": "string",
                  "description": "ISO 4217 currency code used for monetary metrics in this row."
                },
                {
                  "column_name": "impressions",
                  "dtype": "bigint",
                  "description": "Total number of times campaign ads were shown."
                },
                {
                  "column_name": "ad_distribution",
                  "dtype": "string",
                  "description": "Channel or placement type where the ad was distributed (e.g., Search, Content)."
                },
                {
                  "column_name": "account_status",
                  "dtype": "string",
                  "description": "Operational status of the advertiser account (e.g., active, paused, suspended)."
                },
                {
                  "column_name": "aggregation_date",
                  "dtype": "string",
                  "description": "Date representing when metrics were aggregated for this row."
                },
                {
                  "column_name": "delivery_match_type",
                  "dtype": "string",
                  "description": "Type of keyword match used for ad delivery (e.g., exact, phrase, broad)."
                },
                {
                  "column_name": "assists",
                  "dtype": "bigint",
                  "description": "Count of assist interactions that contributed to conversions."
                },
                {
                  "column_name": "cost_per_assist",
                  "dtype": "double",
                  "description": "Average cost associated with each assist interaction."
                },
                {
                  "column_name": "tracking_template",
                  "dtype": "string",
                  "description": "Campaign-level tracking URL template used for click tracking; may contain query parameters."
                },
                {
                  "column_name": "device_os",
                  "dtype": "string",
                  "description": "Operating system of the device where the ad was served."
                },
                {
                  "column_name": "return_on_ad_spend",
                  "dtype": "double",
                  "description": "Return on ad spend (ROAS), indicating revenue generated per unit of spend."
                },
                {
                  "column_name": "clicks",
                  "dtype": "bigint",
                  "description": "Total number of clicks recorded for the campaign."
                },
                {
                  "column_name": "network",
                  "dtype": "string",
                  "description": "Advertising network or channel where the ad appeared (e.g., Search, Display)."
                },
                {
                  "column_name": "revenue",
                  "dtype": "double",
                  "description": "Total revenue attributed to the campaign for the reporting period."
                },
                {
                  "column_name": "account_id",
                  "dtype": "bigint",
                  "description": "Identifier for the advertiser account in Bing Ads."
                },
                {
                  "column_name": "campaign_id",
                  "dtype": "bigint",
                  "description": "Unique identifier for the advertising campaign."
                },
                {
                  "column_name": "crt",
                  "dtype": "double",
                  "description": "Click-through rate: clicks divided by impressions."
                },
                {
                  "column_name": "average_cpc",
                  "dtype": "double",
                  "description": "Average cost per click for the campaign."
                },
                {
                  "column_name": "spend",
                  "dtype": "double",
                  "description": "Total advertising spend for the campaign during the reporting period."
                },
                {
                  "column_name": "device_type",
                  "dtype": "string",
                  "description": "Type of device where the ad was displayed (e.g., Desktop, Mobile, Tablet)."
                },
                {
                  "column_name": "conversion_rate",
                  "dtype": "double",
                  "description": "Rate of conversions relative to the chosen denominator (commonly clicks)."
                },
                {
                  "column_name": "conversions",
                  "dtype": "bigint",
                  "description": "Number of conversions attributed to the campaign."
                },
                {
                  "column_name": "revenue_per_conversion",
                  "dtype": "double",
                  "description": "Average revenue attributed to each conversion."
                },
                {
                  "column_name": "bid_match_type",
                  "dtype": "string",
                  "description": "Bid match type applied for campaign bidding."
                },
                {
                  "column_name": "cost_per_conversion",
                  "dtype": "double",
                  "description": "Average cost incurred for each conversion."
                },
                {
                  "column_name": "campaign_status",
                  "dtype": "string",
                  "description": "Operational status of the campaign (e.g., enabled, paused, deleted)."
                },
                {
                  "column_name": "top_vs_other",
                  "dtype": "string",
                  "description": "Placement grouping indicating top-of-page positions versus other placements."
                },
                {
                  "column_name": "custom_parameters",
                  "dtype": "string",
                  "description": "Custom campaign-level parameters used for tracking or reporting."
                }
              ]
            },
            {
              "table_name": "contingent_changed",
              "column_info": [
                {
                  "column_name": "assignment_term_id",
                  "dtype": "bigint",
                  "description": "Identifier for the assignment term related to this contingent change."
                },
                {
                  "column_name": "_meta",
                  "dtype": "struct<event_uuid:string,event_time:string,application:string,origin:string,experiments:array<struct<id:string,variant:string>>,client_info:struct<asn:string,country:string,region:string,city:string,postal_code:string,latitude:string,longitude:string,ja4_fingerprint:string,is_desktop_viewer:boolean,is_mobile_viewer:boolean,is_smarttv_viewer:boolean,is_tablet_viewer:boolean,is_android_viewer:boolean,is_ios_viewer:boolean>,user:struct<uuid:string,roles:array<string>>>",
                  "description": "Nested metadata containing event context, client_info (location, device), experiments, and user details; may include user identifiers and location fields."
                },
                {
                  "column_name": "event_kafka_timestamp",
                  "dtype": "timestamp",
                  "description": "Timestamp when the event was written to Kafka or ingested into the pipeline."
                },
                {
                  "column_name": "event_uuid",
                  "dtype": "string",
                  "description": "Unique identifier for the event instance."
                },
                {
                  "column_name": "affiliated_group_uuid",
                  "dtype": "string",
                  "description": "UUID of the affiliated group or organization associated with the contingent."
                },
                {
                  "column_name": "contingent_id",
                  "dtype": "bigint",
                  "description": "Identifier for the contingent entity affected by the change."
                },
                {
                  "column_name": "event_timestamp",
                  "dtype": "timestamp",
                  "description": "Original timestamp when the event occurred."
                }
              ]
            },
            {
              "table_name": "digital_matching_service_providers_offered",
              "column_info": [
                {
                  "column_name": "device",
                  "dtype": "struct<user_agent:string,screen_width:int,screen_height:int,viewport_width:int,viewport_height:int,is_touch:boolean,connection_type:string,language_code:string>",
                  "description": "Device and browser attributes (user agent, screen and viewport dimensions, touch capability, connection type, language)."
                },
                {
                  "column_name": "cms_data",
                  "dtype": "struct<experiment_id:int,variant_id:int,page_id:int,revision_id:int,targeting_preset_id:int,url_node_id:int,root_node_id:int,form_id:int,experiments:array<struct<id:string,name:string,version_id:string,version_name:string>>,variants:array<struct<id:string,name:string,version_id:string,version_name:string>>>",
                  "description": "Content management system metadata including experiment, variant, page and form identifiers."
                },
                {
                  "column_name": "event_uuid",
                  "dtype": "string",
                  "description": "Unique identifier for the event record."
                },
                {
                  "column_name": "event_kafka_timestamp",
                  "dtype": "timestamp",
                  "description": "Timestamp when the event was produced to Kafka or the ingestion system."
                },
                {
                  "column_name": "page",
                  "dtype": "struct<url:string,referer:string,type:string,language_code:string,country_code:string,product_id:string,ref:string,source:string>",
                  "description": "Page-level details such as URL, referer, content type, language and product identifiers."
                },
                {
                  "column_name": "google_analytics",
                  "dtype": "struct<_ga:string,_gid:string>",
                  "description": "Google Analytics client identifiers (for example _ga and _gid) used for session and client tracking."
                },
                {
                  "column_name": "is_internal",
                  "dtype": "boolean",
                  "description": "Flag indicating whether the event originated from an internal source."
                },
                {
                  "column_name": "visitor_id",
                  "dtype": "string",
                  "description": "Persistent visitor identifier used to link events to the same user across sessions."
                },
                {
                  "column_name": "offered_assignment_term_ids",
                  "dtype": "array<bigint>",
                  "description": "Array of assignment term identifiers associated with the offered service."
                },
                {
                  "column_name": "event_timestamp",
                  "dtype": "timestamp",
                  "description": "Canonical timestamp representing when the event occurred in the system."
                },
                {
                  "column_name": "_meta",
                  "dtype": "struct<event_uuid:string,event_time:string,application:string,origin:string,experiments:array<struct<id:string,variant:string>>,client_info:struct<asn:string,country:string,region:string,city:string,postal_code:string,latitude:string,longitude:string,ja4_fingerprint:string,is_desktop_viewer:boolean,is_mobile_viewer:boolean,is_smarttv_viewer:boolean,is_tablet_viewer:boolean,is_android_viewer:boolean,is_ios_viewer:boolean>,user:struct<uuid:string,roles:array<string>>>",
                  "description": "Nested metadata including event routing, client_info (location, ja4_fingerprint) and user uuid/roles; may contain personal or sensitive identifiers."
                },
                {
                  "column_name": "product_request_uuid",
                  "dtype": "string",
                  "description": "Identifier for the related product request transaction."
                },
                {
                  "column_name": "client_timestamp",
                  "dtype": "timestamp",
                  "description": "Timestamp recorded by the client when the event occurred."
                }
              ]
            },
            {
              "table_name": "digital_matching_service_providers_selected",
              "column_info": [
                {
                  "column_name": "page",
                  "dtype": "struct<url:string,referer:string,type:string,language_code:string,country_code:string,product_id:string,ref:string,source:string>",
                  "description": "Page metadata including URL, referer, content type, language code and product/reference identifiers."
                },
                {
                  "column_name": "event_kafka_timestamp",
                  "dtype": "timestamp",
                  "description": "Timestamp indicating when the event was produced to Kafka."
                },
                {
                  "column_name": "is_internal",
                  "dtype": "boolean",
                  "description": "Boolean flag indicating whether the provider or event is internal to the organization."
                },
                {
                  "column_name": "device",
                  "dtype": "struct<user_agent:string,screen_width:int,screen_height:int,viewport_width:int,viewport_height:int,is_touch:boolean,connection_type:string,language_code:string>",
                  "description": "Device and client details such as user agent, screen and viewport sizes, touch capability and connection type."
                },
                {
                  "column_name": "cms_data",
                  "dtype": "struct<experiment_id:int,variant_id:int,page_id:int,revision_id:int,targeting_preset_id:int,url_node_id:int,root_node_id:int,form_id:int,experiments:array<struct<id:string,name:string,version_id:string,version_name:string>>,variants:array<struct<id:string,name:string,version_id:string,version_name:string>>>",
                  "description": "Content management system metadata about experiments, variants and page identifiers."
                },
                {
                  "column_name": "client_timestamp",
                  "dtype": "timestamp",
                  "description": "Timestamp recorded on the client at event creation."
                },
                {
                  "column_name": "offered_assignment_term_ids",
                  "dtype": "array<bigint>",
                  "description": "Array of assignment term IDs that were offered to the user."
                },
                {
                  "column_name": "visitor_id",
                  "dtype": "string",
                  "description": "Persistent or anonymous visitor identifier for the session; may be linkable to a person."
                },
                {
                  "column_name": "product_request_uuid",
                  "dtype": "string",
                  "description": "Identifier for the product request associated with the event."
                },
                {
                  "column_name": "_meta",
                  "dtype": "struct<event_uuid:string,event_time:string,application:string,origin:string,experiments:array<struct<id:string,variant:string>>,client_info:struct<asn:string,country:string,region:string,city:string,postal_code:string,latitude:string,longitude:string,ja4_fingerprint:string,is_desktop_viewer:boolean,is_mobile_viewer:boolean,is_smarttv_viewer:boolean,is_tablet_viewer:boolean,is_android_viewer:boolean,is_ios_viewer:boolean>,user:struct<uuid:string,roles:array<string>>>",
                  "description": "Envelope with enriched event metadata including client info (location, fingerprint) and user sub-structure which may contain user UUIDs."
                },
                {
                  "column_name": "event_uuid",
                  "dtype": "string",
                  "description": "Unique identifier for this specific event record."
                },
                {
                  "column_name": "event_timestamp",
                  "dtype": "timestamp",
                  "description": "Timestamp when the event occurred."
                },
                {
                  "column_name": "selected_assignment_term_ids",
                  "dtype": "array<bigint>",
                  "description": "Array of assignment term IDs that were selected by the user."
                },
                {
                  "column_name": "google_analytics",
                  "dtype": "struct<_ga:string,_gid:string>",
                  "description": "Google Analytics identifiers (_ga, _gid) associated with the session; can be used to identify users."
                }
              ]
            },
            {
              "table_name": "dim_bingads_accounts",
              "column_info": [
                {
                  "column_name": "sold_to_payment_instrument_id",
                  "dtype": "bigint",
                  "description": "Identifier of the payment instrument used for purchases for this account."
                },
                {
                  "column_name": "parent_customer_id",
                  "dtype": "bigint",
                  "description": "Identifier for the parent customer account, if applicable."
                },
                {
                  "column_name": "currency_code",
                  "dtype": "string",
                  "description": "ISO currency code used by the account (e.g., USD)."
                },
                {
                  "column_name": "payment_method_id",
                  "dtype": "bigint",
                  "description": "Identifier for the payment method linked to the account."
                },
                {
                  "column_name": "number",
                  "dtype": "string",
                  "description": "Account number assigned by Bing Ads."
                },
                {
                  "column_name": "bill_to_customer_id",
                  "dtype": "bigint",
                  "description": "Identifier of the customer billed for this account."
                },
                {
                  "column_name": "account_financial_status",
                  "dtype": "string",
                  "description": "Financial status of the account (e.g., billed, delinquent)."
                },
                {
                  "column_name": "language",
                  "dtype": "string",
                  "description": "Default language setting for the account (e.g., en)."
                },
                {
                  "column_name": "last_modified_by_user_id",
                  "dtype": "bigint",
                  "description": "Identifier of the user who last modified the account record."
                },
                {
                  "column_name": "last_modified_time",
                  "dtype": "string",
                  "description": "Timestamp of the last modification to the account (ISO formatted string)."
                },
                {
                  "column_name": "is_archived",
                  "dtype": "boolean",
                  "description": "Boolean flag indicating whether the account is archived."
                },
                {
                  "column_name": "primary_user_id",
                  "dtype": "bigint",
                  "description": "Primary user identifier associated with the account."
                },
                {
                  "column_name": "id",
                  "dtype": "bigint",
                  "description": "Primary account identifier."
                },
                {
                  "column_name": "auto_tag_type",
                  "dtype": "string",
                  "description": "Auto-tagging configuration applied to the account."
                },
                {
                  "column_name": "snapshot_timestamp",
                  "dtype": "timestamp",
                  "description": "ETL snapshot timestamp when this record was captured."
                },
                {
                  "column_name": "name",
                  "dtype": "string",
                  "description": "Display name of the account used in reporting and UIs."
                },
                {
                  "column_name": "account_life_cycle_status",
                  "dtype": "string",
                  "description": "Lifecycle status of the account (e.g., active, suspended)."
                },
                {
                  "column_name": "time_zone",
                  "dtype": "string",
                  "description": "Account time zone identifier used for reporting and scheduling."
                },
                {
                  "column_name": "pause_reason",
                  "dtype": "int",
                  "description": "Numeric code indicating the reason the account is paused."
                }
              ]
            },
            {
              "table_name": "dim_bingads_adgroups",
              "column_info": [
                {
                  "column_name": "tracking_url_template",
                  "dtype": "string",
                  "description": "Template used to construct tracking URLs for clicks."
                },
                {
                  "column_name": "bidding_scheme",
                  "dtype": "string",
                  "description": "Bidding scheme or strategy applied to the ad group."
                },
                {
                  "column_name": "network",
                  "dtype": "string",
                  "description": "Advertising network where the ad group is served (e.g., Search, Content)."
                },
                {
                  "column_name": "ad_schedule_use_searcher_time_zone",
                  "dtype": "boolean",
                  "description": "Flag indicating whether ad schedule uses the searcher's time zone."
                },
                {
                  "column_name": "settings",
                  "dtype": "array<string>",
                  "description": "Array of additional ad group settings, flags, or options."
                },
                {
                  "column_name": "language",
                  "dtype": "string",
                  "description": "Language targeting code for the ad group (e.g., en, fr)."
                },
                {
                  "column_name": "account_id",
                  "dtype": "bigint",
                  "description": "Identifier of the account that owns the ad group; may identify the account holder."
                },
                {
                  "column_name": "status",
                  "dtype": "string",
                  "description": "Current lifecycle status of the ad group (e.g., Active, Paused)."
                },
                {
                  "column_name": "start_date",
                  "dtype": "string",
                  "description": "Start date when the ad group becomes active (ISO or YYYY-MM-DD)."
                },
                {
                  "column_name": "end_date",
                  "dtype": "string",
                  "description": "End date when the ad group stops being active (ISO or YYYY-MM-DD)."
                },
                {
                  "column_name": "privacy_status",
                  "dtype": "string",
                  "description": "Privacy or visibility setting for the ad group."
                },
                {
                  "column_name": "customer_id",
                  "dtype": "bigint",
                  "description": "Identifier for the customer associated with the ad group; may identify a person or organization."
                },
                {
                  "column_name": "cpc_bid",
                  "dtype": "double",
                  "description": "Default cost-per-click bid configured for the ad group."
                },
                {
                  "column_name": "url_custom_parameters",
                  "dtype": "array<struct<_1:string,_2:string>>",
                  "description": "Custom URL parameter key/value pairs used for click tracking."
                },
                {
                  "column_name": "final_url_suffix",
                  "dtype": "string",
                  "description": "Suffix appended to final landing page URLs for tracking purposes."
                },
                {
                  "column_name": "name",
                  "dtype": "string",
                  "description": "Display name of the ad group."
                },
                {
                  "column_name": "id",
                  "dtype": "bigint",
                  "description": "Unique identifier for the ad group record."
                },
                {
                  "column_name": "audience_ads_bid_adjustment",
                  "dtype": "int",
                  "description": "Bid adjustment value applied for audience-targeted bids."
                },
                {
                  "column_name": "campaign_id",
                  "dtype": "bigint",
                  "description": "Identifier of the parent campaign that contains this ad group."
                },
                {
                  "column_name": "snapshot_timestamp",
                  "dtype": "timestamp",
                  "description": "Timestamp indicating when this snapshot of the record was created."
                }
              ]
            },
            {
              "table_name": "dim_bingads_ads",
              "column_info": [
                {
                  "column_name": "ad_format_preference",
                  "dtype": "string",
                  "description": "Preferred ad format setting for this ad."
                },
                {
                  "column_name": "id",
                  "dtype": "bigint",
                  "description": "Unique identifier for the ad record."
                },
                {
                  "column_name": "url_custom_parameters",
                  "dtype": "array<struct<_1:string,_2:string>>",
                  "description": "Array of key-value pairs defining custom URL parameter substitutions for tracking."
                },
                {
                  "column_name": "editorial_status",
                  "dtype": "string",
                  "description": "Editorial review status indicating compliance with platform policies."
                },
                {
                  "column_name": "final_urls",
                  "dtype": "array<string>",
                  "description": "Array of final landing page URLs for the ad."
                },
                {
                  "column_name": "account_id",
                  "dtype": "bigint",
                  "description": "Identifier for the account that owns the ad."
                },
                {
                  "column_name": "device_preference",
                  "dtype": "bigint",
                  "description": "Numeric code indicating device targeting preference (for example, mobile or desktop)."
                },
                {
                  "column_name": "final_url_suffix",
                  "dtype": "string",
                  "description": "Suffix appended to final URLs for tracking parameters or URL templates."
                },
                {
                  "column_name": "tracking_url_template",
                  "dtype": "string",
                  "description": "Template used to generate tracking URLs for clicks on the ad."
                },
                {
                  "column_name": "type",
                  "dtype": "string",
                  "description": "Classification or subtype of the ad (e.g., expanded text, responsive)."
                },
                {
                  "column_name": "final_app_urls",
                  "dtype": "array<string>",
                  "description": "Array of final app store URLs used for app install creatives."
                },
                {
                  "column_name": "status",
                  "dtype": "string",
                  "description": "Operational status of the ad (e.g., enabled, paused, removed)."
                },
                {
                  "column_name": "ad_group_id",
                  "dtype": "bigint",
                  "description": "Identifier of the ad group that contains the ad."
                },
                {
                  "column_name": "final_mobile_urls",
                  "dtype": "array<string>",
                  "description": "Array of mobile-specific landing page URLs associated with the ad."
                },
                {
                  "column_name": "campaign_id",
                  "dtype": "bigint",
                  "description": "Identifier for the campaign that contains the ad."
                },
                {
                  "column_name": "snapshot_timestamp",
                  "dtype": "timestamp",
                  "description": "Timestamp when this ad record was captured or last synchronized."
                },
                {
                  "column_name": "customer_id",
                  "dtype": "bigint",
                  "description": "Identifier for the customer or advertiser associated with the ad."
                }
              ]
            },
            {
              "table_name": "dim_bingads_campaigns",
              "column_info": [
                {
                  "column_name": "name",
                  "dtype": "string",
                  "description": "Display name of the campaign."
                },
                {
                  "column_name": "settings",
                  "dtype": "array<string>",
                  "description": "Array of campaign-level settings stored as strings (key/value or option names)."
                },
                {
                  "column_name": "campaign_type",
                  "dtype": "array<string>",
                  "description": "Array of campaign type tags or categories (e.g., Search, Shopping)."
                },
                {
                  "column_name": "status",
                  "dtype": "string",
                  "description": "Current status of the campaign (e.g., Active, Paused, Deleted)."
                },
                {
                  "column_name": "snapshot_timestamp",
                  "dtype": "timestamp",
                  "description": "Timestamp when this campaign snapshot was captured."
                },
                {
                  "column_name": "budget_type",
                  "dtype": "string",
                  "description": "Type of budget allocation for the campaign (e.g., Daily, Monthly, Shared)."
                },
                {
                  "column_name": "time_zone",
                  "dtype": "string",
                  "description": "Time zone configured for the campaign (e.g., 'UTC', 'Pacific Standard Time')."
                },
                {
                  "column_name": "daily_budget",
                  "dtype": "double",
                  "description": "Daily budget allocated to the campaign in account currency."
                },
                {
                  "column_name": "budget_id",
                  "dtype": "bigint",
                  "description": "Identifier for the budget object associated with the campaign."
                },
                {
                  "column_name": "id",
                  "dtype": "bigint",
                  "description": "Unique numeric identifier for the campaign."
                },
                {
                  "column_name": "audience_ads_bid_adjustment",
                  "dtype": "int",
                  "description": "Bid adjustment integer applied for audience targeting (e.g., percent or flag)."
                },
                {
                  "column_name": "account_id",
                  "dtype": "bigint",
                  "description": "Numeric identifier for the associated advertising account."
                },
                {
                  "column_name": "tracking_url_template",
                  "dtype": "string",
                  "description": "Template URL used for tracking clicks and campaign performance."
                },
                {
                  "column_name": "bidding_scheme",
                  "dtype": "string",
                  "description": "Bidding strategy or scheme applied to the campaign."
                },
                {
                  "column_name": "languages",
                  "dtype": "array<string>",
                  "description": "Array of language codes targeted by the campaign."
                },
                {
                  "column_name": "customer_id",
                  "dtype": "bigint",
                  "description": "Numeric identifier for the customer or advertiser account."
                }
              ]
            },
            {
              "table_name": "dim_crm_financial_targets",
              "column_info": [
                {
                  "column_name": "crm_service_requests",
                  "dtype": "double",
                  "description": "Count of CRM service requests recorded for the period."
                },
                {
                  "column_name": "email_openings",
                  "dtype": "double",
                  "description": "Number of email open events recorded for the campaign."
                },
                {
                  "column_name": "date",
                  "dtype": "date",
                  "description": "Date for which the metrics and targets apply."
                },
                {
                  "column_name": "theme_world",
                  "dtype": "string",
                  "description": "Marketing or campaign theme classification used for grouping metrics."
                },
                {
                  "column_name": "crm_sold_leads",
                  "dtype": "double",
                  "description": "Number of leads converted to sales by CRM in the period."
                },
                {
                  "column_name": "crm_net_revenue_target",
                  "dtype": "double",
                  "description": "Targeted net revenue for CRM for the specified date and segment."
                },
                {
                  "column_name": "snapshot_timestamp",
                  "dtype": "timestamp",
                  "description": "Timestamp indicating when this snapshot of the record was captured."
                },
                {
                  "column_name": "case",
                  "dtype": "string",
                  "description": "CRM case category or identifier associated with the record."
                },
                {
                  "column_name": "top_product",
                  "dtype": "string",
                  "description": "Top product name or product category driving the reported metrics."
                },
                {
                  "column_name": "business_area",
                  "dtype": "string",
                  "description": "Business area or segment associated with the metrics."
                },
                {
                  "column_name": "crm_matches",
                  "dtype": "double",
                  "description": "Number of CRM matches (e.g., matched leads or opportunities) during the period."
                },
                {
                  "column_name": "email_recipients",
                  "dtype": "double",
                  "description": "Number of recipients targeted by CRM email campaigns."
                },
                {
                  "column_name": "email_clicks",
                  "dtype": "double",
                  "description": "Number of email click events recorded for the campaign."
                }
              ]
            },
            {
              "table_name": "dim_emarsys_automation_center_programs",
              "column_info": [
                {
                  "column_name": "name",
                  "dtype": "string",
                  "description": "Program name or title as recorded in Emarsys."
                },
                {
                  "column_name": "parent_id",
                  "dtype": "string",
                  "description": "Identifier of the parent program or folder if nested; null for top-level entries."
                },
                {
                  "column_name": "status",
                  "dtype": "string",
                  "description": "Current operational status of the program (e.g., active, paused, archived)."
                },
                {
                  "column_name": "snapshot_timestamp",
                  "dtype": "date",
                  "description": "Date when the program metadata snapshot was captured."
                },
                {
                  "column_name": "id",
                  "dtype": "string",
                  "description": "Unique identifier for the Emarsys automation program."
                },
                {
                  "column_name": "is_archived",
                  "dtype": "boolean",
                  "description": "Boolean flag indicating whether the program has been archived."
                }
              ]
            },
            {
              "table_name": "dim_emarsys_campaign_launches",
              "column_info": [
                {
                  "column_name": "launch_date",
                  "dtype": "timestamp",
                  "description": "Timestamp when the campaign was launched."
                },
                {
                  "column_name": "email_id",
                  "dtype": "string",
                  "description": "Identifier for the Emarsys email template or message associated with this launch."
                },
                {
                  "column_name": "id",
                  "dtype": "string",
                  "description": "Unique identifier for the campaign launch record."
                },
                {
                  "column_name": "done",
                  "dtype": "boolean",
                  "description": "Boolean flag indicating whether the campaign launch completed successfully."
                },
                {
                  "column_name": "snapshot_timestamp",
                  "dtype": "timestamp",
                  "description": "Timestamp when this record was captured into the data pipeline."
                }
              ]
            },
            {
              "table_name": "dim_emarsys_campaigns",
              "column_info": [
                {
                  "column_name": "is_delayed",
                  "dtype": "bigint",
                  "description": "Flag indicating whether the campaign delivery is scheduled for a later time."
                },
                {
                  "column_name": "html_source",
                  "dtype": "string",
                  "description": "HTML content body or reference used in the campaign email."
                },
                {
                  "column_name": "source",
                  "dtype": "string",
                  "description": "Origin system or source name where the campaign record originated."
                },
                {
                  "column_name": "template",
                  "dtype": "string",
                  "description": "Template identifier or name used to render the campaign content."
                },
                {
                  "column_name": "exclude_contactlist",
                  "dtype": "bigint",
                  "description": "Identifier or name of contact lists excluded from the campaign."
                },
                {
                  "column_name": "exclude_filter",
                  "dtype": "bigint",
                  "description": "Identifier of the filter used to exclude recipients from the campaign."
                },
                {
                  "column_name": "version_name",
                  "dtype": "string",
                  "description": "Version label or name of the campaign configuration."
                },
                {
                  "column_name": "administrator_id",
                  "dtype": "string",
                  "description": "Identifier of the administrator or user who created or manages the campaign; may reference internal user IDs."
                },
                {
                  "column_name": "browse",
                  "dtype": "boolean",
                  "description": "Flag indicating whether the campaign supports browse-related features."
                },
                {
                  "column_name": "contactlist",
                  "dtype": "string",
                  "description": "Identifier or name of the contact list targeted by the campaign."
                },
                {
                  "column_name": "is_rti",
                  "dtype": "boolean",
                  "description": "Flag indicating whether the campaign is a real-time interaction (RTI) campaign."
                },
                {
                  "column_name": "status_code",
                  "dtype": "string",
                  "description": "Numeric or string code representing the campaign status."
                },
                {
                  "column_name": "language",
                  "dtype": "string",
                  "description": "Language code used for the campaign content."
                },
                {
                  "column_name": "fromemail_host",
                  "dtype": "string",
                  "description": "Hostname or domain portion of the sender email address."
                },
                {
                  "column_name": "event_id",
                  "dtype": "string",
                  "description": "Unique identifier for the event associated with the campaign."
                },
                {
                  "column_name": "fromname",
                  "dtype": "string",
                  "description": "Display name shown as the sender for the campaign."
                },
                {
                  "column_name": "text_source",
                  "dtype": "string",
                  "description": "Plain text content body or reference used in the campaign email."
                },
                {
                  "column_name": "status",
                  "dtype": "string",
                  "description": "Current lifecycle status of the campaign (e.g., draft, active, sent)."
                },
                {
                  "column_name": "campaign_type",
                  "dtype": "string",
                  "description": "Type of campaign (e.g., transactional, promotional)."
                },
                {
                  "column_name": "content_type",
                  "dtype": "string",
                  "description": "Content type of the campaign message (e.g., HTML, text)."
                },
                {
                  "column_name": "id",
                  "dtype": "string",
                  "description": "Primary campaign identifier assigned by Emarsys."
                },
                {
                  "column_name": "features",
                  "dtype": "array<string>",
                  "description": "Array of feature flags or attributes enabled for the campaign."
                },
                {
                  "column_name": "api_error",
                  "dtype": "string",
                  "description": "Error message or code returned by the Emarsys API when processing the campaign."
                },
                {
                  "column_name": "force_attachment",
                  "dtype": "boolean",
                  "description": "Boolean flag indicating whether attachments are forced for recipients."
                },
                {
                  "column_name": "email_category",
                  "dtype": "string",
                  "description": "Category or classification of the campaign email."
                },
                {
                  "column_name": "unsubscribe",
                  "dtype": "boolean",
                  "description": "Boolean indicating whether unsubscribe functionality is enabled for the campaign."
                },
                {
                  "column_name": "api_status",
                  "dtype": "string",
                  "description": "Status returned by the Emarsys API for the campaign operation."
                },
                {
                  "column_name": "fromemail",
                  "dtype": "string",
                  "description": "Sender email address used for the campaign; may contain personal or contact information."
                },
                {
                  "column_name": "subject",
                  "dtype": "string",
                  "description": "Email subject line used for the campaign."
                },
                {
                  "column_name": "name",
                  "dtype": "string",
                  "description": "Human-readable campaign name."
                },
                {
                  "column_name": "snapshot_timestamp",
                  "dtype": "timestamp",
                  "description": "Timestamp when this snapshot of the campaign record was taken."
                },
                {
                  "column_name": "created",
                  "dtype": "timestamp",
                  "description": "Timestamp when the campaign was created."
                },
                {
                  "column_name": "filter",
                  "dtype": "string",
                  "description": "Filter definition or identifier used to select recipients for the campaign."
                }
              ]
            },
            {
              "table_name": "dim_emarsys_contact_details",
              "column_info": [
                {
                  "column_name": "user_uid",
                  "dtype": "string",
                  "description": "Unique user UUID used internally to link contact records across systems."
                },
                {
                  "column_name": "date_last_transition_to_inactive",
                  "dtype": "string",
                  "description": "Date when the contact last transitioned to an inactive status."
                },
                {
                  "column_name": "snapshot_timestamp",
                  "dtype": "date",
                  "description": "Snapshot date indicating when this record was captured."
                },
                {
                  "column_name": "user_id",
                  "dtype": "string",
                  "description": "Emarsys contact identifier used to reference the contact in the source system."
                },
                {
                  "column_name": "email_normalized",
                  "dtype": "string",
                  "description": "Normalized (lowercased and trimmed) email used for matching and deduplication."
                },
                {
                  "column_name": "date_last_reactivation",
                  "dtype": "date",
                  "description": "Date when the contact was last reactivated in Emarsys."
                },
                {
                  "column_name": "email",
                  "dtype": "string",
                  "description": "Contact's email address."
                }
              ]
            },
            {
              "table_name": "dim_emarsys_program_links",
              "column_info": [
                {
                  "column_name": "program_id",
                  "dtype": "string",
                  "description": "Unique identifier for the Emarsys program."
                },
                {
                  "column_name": "email_id",
                  "dtype": "string",
                  "description": "Email address or identifier associated with a contact in Emarsys."
                },
                {
                  "column_name": "is_archived",
                  "dtype": "boolean",
                  "description": "Flag indicating whether the program link is archived (true) or active (false)."
                },
                {
                  "column_name": "program_name",
                  "dtype": "string",
                  "description": "Human-readable name of the Emarsys program."
                },
                {
                  "column_name": "snapshot_timestamp",
                  "dtype": "date",
                  "description": "Date when this snapshot of the record was taken."
                }
              ]
            },
            {
              "table_name": "dim_fb_accounts",
              "column_info": [
                {
                  "column_name": "currency",
                  "dtype": "string",
                  "description": "Default currency code used by the account (ISO 4217)."
                },
                {
                  "column_name": "account_status",
                  "dtype": "bigint",
                  "description": "Numeric status code indicating the account state (for example active or disabled)."
                },
                {
                  "column_name": "is_archived",
                  "dtype": "boolean",
                  "description": "Boolean flag indicating whether the account is archived."
                },
                {
                  "column_name": "name",
                  "dtype": "string",
                  "description": "Display name of the Facebook account or page; may include personal names."
                },
                {
                  "column_name": "partner",
                  "dtype": "string",
                  "description": "Partner or owner organization associated with the account."
                },
                {
                  "column_name": "account_id",
                  "dtype": "bigint",
                  "description": "Numeric unique identifier for the Facebook account."
                },
                {
                  "column_name": "timezone_name",
                  "dtype": "string",
                  "description": "Timezone name associated with the account (e.g., America/Los_Angeles)."
                },
                {
                  "column_name": "snapshot_timestamp",
                  "dtype": "timestamp",
                  "description": "Timestamp when this snapshot of account metadata was recorded."
                }
              ]
            },
            {
              "table_name": "dim_fb_adsets",
              "column_info": [
                {
                  "column_name": "is_dynamic_creative",
                  "dtype": "boolean",
                  "description": "Boolean flag indicating if dynamic creative is enabled for the ad set."
                },
                {
                  "column_name": "lifetime_budget_eur",
                  "dtype": "double",
                  "description": "Total lifetime budget for the ad set expressed in euros."
                },
                {
                  "column_name": "effective_status",
                  "dtype": "string",
                  "description": "Operational status determined by Facebook after evaluation of the ad set."
                },
                {
                  "column_name": "daily_budget",
                  "dtype": "double",
                  "description": "Daily budget for the ad set in the account's currency."
                },
                {
                  "column_name": "lifetime_budget",
                  "dtype": "double",
                  "description": "Lifetime budget for the ad set in the account's currency."
                },
                {
                  "column_name": "bid_amount",
                  "dtype": "bigint",
                  "description": "Manual bid amount set for the ad set in the account's currency unit."
                },
                {
                  "column_name": "updated_time",
                  "dtype": "timestamp",
                  "description": "Timestamp of the most recent update to the ad set record."
                },
                {
                  "column_name": "budget_remaining_eur",
                  "dtype": "double",
                  "description": "Remaining budget for the ad set expressed in euros."
                },
                {
                  "column_name": "snapshot_timestamp",
                  "dtype": "timestamp",
                  "description": "Timestamp when this snapshot of ad set metadata was recorded."
                },
                {
                  "column_name": "optimization_goal",
                  "dtype": "string",
                  "description": "Objective used to optimize ad delivery, such as conversions or reach."
                },
                {
                  "column_name": "name",
                  "dtype": "string",
                  "description": "Human-readable name assigned to the ad set."
                },
                {
                  "column_name": "pacing_type",
                  "dtype": "string",
                  "description": "Type of pacing applied to ad delivery (e.g., standard)."
                },
                {
                  "column_name": "promoted_object",
                  "dtype": "struct<pixel_id:string,custom_event_type:string>",
                  "description": "Structured details about the promoted object, including pixel_id and custom_event_type."
                },
                {
                  "column_name": "account_id",
                  "dtype": "bigint",
                  "description": "Identifier of the advertiser account that owns the ad set."
                },
                {
                  "column_name": "created_time",
                  "dtype": "timestamp",
                  "description": "Creation timestamp for the ad set record."
                },
                {
                  "column_name": "budget_remaining",
                  "dtype": "double",
                  "description": "Remaining budget for the ad set in the account's currency."
                },
                {
                  "column_name": "start_time",
                  "dtype": "timestamp",
                  "description": "Scheduled start timestamp for the ad set."
                },
                {
                  "column_name": "bid_strategy",
                  "dtype": "string",
                  "description": "Bidding strategy applied to the ad set (for example, lowest_cost)."
                },
                {
                  "column_name": "custom_event_type",
                  "dtype": "string",
                  "description": "Custom event type configured for pixel-based tracking."
                },
                {
                  "column_name": "adset_id",
                  "dtype": "bigint",
                  "description": "Unique identifier for the ad set."
                },
                {
                  "column_name": "pixel_id",
                  "dtype": "bigint",
                  "description": "Identifier of the Facebook pixel associated with this ad set."
                },
                {
                  "column_name": "status",
                  "dtype": "string",
                  "description": "Current lifecycle status of the ad set (e.g., ACTIVE, PAUSED)."
                },
                {
                  "column_name": "campaign_id",
                  "dtype": "bigint",
                  "description": "Identifier of the campaign that contains this ad set."
                },
                {
                  "column_name": "configured_status",
                  "dtype": "string",
                  "description": "Advertiser-configured status value for the ad set."
                },
                {
                  "column_name": "end_time",
                  "dtype": "timestamp",
                  "description": "Scheduled end timestamp for the ad set."
                },
                {
                  "column_name": "daily_budget_eur",
                  "dtype": "double",
                  "description": "Daily budget for the ad set expressed in euros."
                },
                {
                  "column_name": "source_adset_id",
                  "dtype": "bigint",
                  "description": "Original ad set identifier if this ad set was cloned or promoted from another."
                }
              ]
            },
            {
              "table_name": "dim_fb_campaigns",
              "column_info": [
                {
                  "column_name": "daily_budget",
                  "dtype": "double",
                  "description": "Daily budget amount in the campaign's currency."
                },
                {
                  "column_name": "lifetime_budget_eur",
                  "dtype": "double",
                  "description": "Lifetime budget normalized to EUR."
                },
                {
                  "column_name": "boosted_object_id",
                  "dtype": "bigint",
                  "description": "ID of the boosted object (post or content) associated with the campaign, when applicable."
                },
                {
                  "column_name": "campaign_id",
                  "dtype": "bigint",
                  "description": "Unique identifier for the Facebook campaign."
                },
                {
                  "column_name": "special_ad_category",
                  "dtype": "string",
                  "description": "Special ad category applied to the campaign, if any."
                },
                {
                  "column_name": "snapshot_timestamp",
                  "dtype": "timestamp",
                  "description": "Timestamp when this snapshot of the campaign record was taken into the data lake."
                },
                {
                  "column_name": "budget_rebalance_flag",
                  "dtype": "boolean",
                  "description": "Indicates if automated budget rebalancing is enabled for the campaign."
                },
                {
                  "column_name": "buying_type",
                  "dtype": "string",
                  "description": "Buying type for the campaign (e.g., AUCTION or RESERVATION)."
                },
                {
                  "column_name": "created_time",
                  "dtype": "timestamp",
                  "description": "Timestamp when the campaign was originally created in Facebook."
                },
                {
                  "column_name": "daily_budget_eur",
                  "dtype": "double",
                  "description": "Daily budget normalized to EUR."
                },
                {
                  "column_name": "adlabels",
                  "dtype": "array<struct<id:string,name:string>>",
                  "description": "Array of label objects assigned to the campaign, each containing id and name."
                },
                {
                  "column_name": "configured_status",
                  "dtype": "string",
                  "description": "Status explicitly configured on the campaign (e.g., ACTIVE, PAUSED)."
                },
                {
                  "column_name": "updated_time",
                  "dtype": "timestamp",
                  "description": "Timestamp of the most recent update received from Facebook for the campaign."
                },
                {
                  "column_name": "can_use_spend_cap",
                  "dtype": "boolean",
                  "description": "Flag indicating whether a spend cap can be applied to the campaign."
                },
                {
                  "column_name": "budget_remaining_eur",
                  "dtype": "double",
                  "description": "Remaining campaign budget normalized to EUR."
                },
                {
                  "column_name": "account_id",
                  "dtype": "bigint",
                  "description": "Identifier of the Facebook ad account that owns the campaign."
                },
                {
                  "column_name": "lifetime_budget",
                  "dtype": "double",
                  "description": "Lifetime budget amount in the campaign's currency."
                },
                {
                  "column_name": "pacing_type",
                  "dtype": "string",
                  "description": "Pacing strategy for delivery (e.g., standard or accelerated)."
                },
                {
                  "column_name": "source_campaign_id",
                  "dtype": "bigint",
                  "description": "ID of a source campaign if this campaign was copied or derived from another."
                },
                {
                  "column_name": "name",
                  "dtype": "string",
                  "description": "Campaign name as defined in the Facebook Ads account."
                },
                {
                  "column_name": "start_time",
                  "dtype": "timestamp",
                  "description": "Scheduled or actual start timestamp of the campaign."
                },
                {
                  "column_name": "budget_remaining",
                  "dtype": "double",
                  "description": "Remaining campaign budget in the campaign's original currency."
                },
                {
                  "column_name": "end_time",
                  "dtype": "timestamp",
                  "description": "Scheduled or actual end timestamp of the campaign."
                },
                {
                  "column_name": "effective_status",
                  "dtype": "string",
                  "description": "Computed effective status of the campaign considering various settings."
                },
                {
                  "column_name": "bid_strategy",
                  "dtype": "string",
                  "description": "Bidding strategy used for the campaign (e.g., lowest_cost, bid_cap)."
                },
                {
                  "column_name": "objective",
                  "dtype": "string",
                  "description": "Primary campaign objective (e.g., TRAFFIC, CONVERSIONS)."
                },
                {
                  "column_name": "can_create_brand_lift_study",
                  "dtype": "boolean",
                  "description": "Flag indicating whether a brand lift study can be created for this campaign."
                },
                {
                  "column_name": "status",
                  "dtype": "string",
                  "description": "General status value from the source reflecting campaign state."
                }
              ]
            },
            {
              "table_name": "dim_fb_creatives",
              "column_info": [
                {
                  "column_name": "creative_id",
                  "dtype": "bigint",
                  "description": "Unique numeric identifier for the creative."
                },
                {
                  "column_name": "title",
                  "dtype": "string",
                  "description": "Headline or title text of the creative."
                },
                {
                  "column_name": "video_data",
                  "dtype": "struct<image_hash:string,link_description:string,message:string,title:string,video_id:string,call_to_action:struct<type:string,value:struct<link:string,link_caption:string>>>",
                  "description": "Structured video payload including video_id, title, message and call-to-action fields."
                },
                {
                  "column_name": "link_data",
                  "dtype": "struct<link:string,message:string,name:string,caption:string,attachment_style:string,description:string,image_hash:string,multi_share_end_card:string,multi_share_optimized:string,call_to_action:struct<type:string>>",
                  "description": "Structured link payload including link, message, name, caption, description and call-to-action fields."
                },
                {
                  "column_name": "page_id",
                  "dtype": "string",
                  "description": "Identifier of the Facebook Page associated with the creative."
                },
                {
                  "column_name": "object_type",
                  "dtype": "string",
                  "description": "Type of creative object (for example: photo, video, link)."
                },
                {
                  "column_name": "account_id",
                  "dtype": "bigint",
                  "description": "Identifier of the Facebook ad account associated with the creative."
                },
                {
                  "column_name": "name",
                  "dtype": "string",
                  "description": "Name label for the creative, often used for identification or grouping."
                },
                {
                  "column_name": "body",
                  "dtype": "string",
                  "description": "Main text body of the creative (ad copy)."
                },
                {
                  "column_name": "linked_domain",
                  "dtype": "string",
                  "description": "Domain URL linked in the creative."
                },
                {
                  "column_name": "instagram_actor_id",
                  "dtype": "string",
                  "description": "Identifier of the Instagram actor or account related to the creative."
                },
                {
                  "column_name": "snapshot_timestamp",
                  "dtype": "timestamp",
                  "description": "Timestamp when this snapshot of the creative was captured."
                }
              ]
            },
            {
              "table_name": "dim_googleads_adgroups",
              "column_info": [
                {
                  "column_name": "url_customer_parameters",
                  "dtype": "string",
                  "description": "Customer-specific URL parameters included in ad group URLs for custom tracking."
                },
                {
                  "column_name": "customer_id",
                  "dtype": "bigint",
                  "description": "Numeric identifier of the Google Ads customer (account) that owns the ad group."
                },
                {
                  "column_name": "ad_group_type",
                  "dtype": "string",
                  "description": "Type or subtype of the ad group (for example: standard, dynamic, shopping)."
                },
                {
                  "column_name": "labels",
                  "dtype": "string",
                  "description": "Comma-separated labels or tags applied to the ad group for organization and filtering."
                },
                {
                  "column_name": "campaign_id",
                  "dtype": "bigint",
                  "description": "Numeric identifier of the Google Ads campaign that contains the ad group."
                },
                {
                  "column_name": "name",
                  "dtype": "string",
                  "description": "Display name of the ad group as defined in Google Ads."
                },
                {
                  "column_name": "snapshot_timestamp",
                  "dtype": "timestamp",
                  "description": "Timestamp indicating when this row was captured or last updated in the snapshot."
                },
                {
                  "column_name": "tracking_url_template",
                  "dtype": "string",
                  "description": "Template used to construct tracking URLs for the ad group's creatives."
                },
                {
                  "column_name": "adgroup_id",
                  "dtype": "bigint",
                  "description": "Unique numeric identifier for the ad group."
                },
                {
                  "column_name": "bidding_strategy_id",
                  "dtype": "bigint",
                  "description": "Identifier for the bidding strategy applied to the ad group."
                },
                {
                  "column_name": "final_url_suffix",
                  "dtype": "string",
                  "description": "Final URL suffix appended to landing page URLs used for tracking parameters."
                },
                {
                  "column_name": "settings",
                  "dtype": "string",
                  "description": "Serialized ad group settings or configuration such as bidding and targeting options."
                }
              ]
            },
            {
              "table_name": "dim_googleads_ads",
              "column_info": [
                {
                  "column_name": "creative_tracking_url_template",
                  "dtype": "string",
                  "description": "Template used to build tracking URLs for the creative's clicks."
                },
                {
                  "column_name": "status",
                  "dtype": "string",
                  "description": "Operational state of the ad (for example ENABLED, PAUSED, or REMOVED)."
                },
                {
                  "column_name": "adgroup_id",
                  "dtype": "bigint",
                  "description": "Identifier of the ad group that contains this ad."
                },
                {
                  "column_name": "url",
                  "dtype": "string",
                  "description": "Destination URL for the ad click; may include tracking parameters."
                },
                {
                  "column_name": "campaign_id",
                  "dtype": "bigint",
                  "description": "Identifier of the Google Ads campaign containing this ad."
                },
                {
                  "column_name": "labels",
                  "dtype": "string",
                  "description": "Labels or tags assigned to the ad for organization or reporting."
                },
                {
                  "column_name": "ad_id",
                  "dtype": "bigint",
                  "description": "Unique identifier for the ad creative."
                },
                {
                  "column_name": "snapshot_timestamp",
                  "dtype": "timestamp",
                  "description": "Timestamp when the ad record snapshot was taken."
                },
                {
                  "column_name": "type",
                  "dtype": "string",
                  "description": "Ad format or type, such as text, image, or video."
                },
                {
                  "column_name": "display_url",
                  "dtype": "string",
                  "description": "The display URL shown in the ad creative."
                },
                {
                  "column_name": "customer_id",
                  "dtype": "bigint",
                  "description": "Numeric Google Ads customer (account) identifier."
                }
              ]
            },
            {
              "table_name": "dim_googleads_budgets",
              "column_info": [
                {
                  "column_name": "amount",
                  "dtype": "bigint",
                  "description": "Budget amount in base currency units."
                },
                {
                  "column_name": "snapshot_timestamp",
                  "dtype": "timestamp",
                  "description": "Timestamp when this budget snapshot was recorded."
                },
                {
                  "column_name": "id",
                  "dtype": "bigint",
                  "description": "Unique numeric identifier for the Google Ads budget."
                },
                {
                  "column_name": "reference_count",
                  "dtype": "int",
                  "description": "Count of references or links associated with this budget."
                },
                {
                  "column_name": "status",
                  "dtype": "string",
                  "description": "Current lifecycle status of the budget (e.g., ENABLED, PAUSED, REMOVED)."
                },
                {
                  "column_name": "name",
                  "dtype": "string",
                  "description": "Human-readable name of the budget as defined in Google Ads."
                },
                {
                  "column_name": "delivery_method",
                  "dtype": "string",
                  "description": "Method used to deliver the budget (e.g., STANDARD, ACCELERATED)."
                },
                {
                  "column_name": "micro_amount",
                  "dtype": "bigint",
                  "description": "Budget amount in micros (micro-units of the currency) as reported by Google Ads."
                },
                {
                  "column_name": "is_explicitly_shared",
                  "dtype": "boolean",
                  "description": "Indicates if the budget is explicitly shared across accounts."
                }
              ]
            },
            {
              "table_name": "dim_googleads_campaigns",
              "column_info": [
                {
                  "column_name": "end_date",
                  "dtype": "string",
                  "description": "Campaign end date in YYYY-MM-DD format, if set."
                },
                {
                  "column_name": "status",
                  "dtype": "string",
                  "description": "Operational status of the campaign, e.g., ENABLED, PAUSED, or REMOVED."
                },
                {
                  "column_name": "labels",
                  "dtype": "string",
                  "description": "Comma-separated labels or tags applied to the campaign."
                },
                {
                  "column_name": "final_url_suffix",
                  "dtype": "string",
                  "description": "Suffix appended to final landing page URLs for tracking query parameters."
                },
                {
                  "column_name": "start_date",
                  "dtype": "string",
                  "description": "Campaign start date in YYYY-MM-DD format."
                },
                {
                  "column_name": "budget_name",
                  "dtype": "string",
                  "description": "Name of the budget resource linked to the campaign."
                },
                {
                  "column_name": "advertising_channel_sub_type",
                  "dtype": "string",
                  "description": "More specific advertising channel subtype, e.g., SEARCH_MOBILE_APP."
                },
                {
                  "column_name": "snapshot_timestamp",
                  "dtype": "timestamp",
                  "description": "Timestamp indicating when this campaign snapshot was recorded."
                },
                {
                  "column_name": "ad_service_optimization_status",
                  "dtype": "string",
                  "description": "Optimization status reported by the ad service indicating optimization settings or eligibility."
                },
                {
                  "column_name": "customer_id",
                  "dtype": "bigint",
                  "description": "Google Ads customer account identifier that owns the campaign."
                },
                {
                  "column_name": "budget_id",
                  "dtype": "bigint",
                  "description": "Identifier for the budget resource linked to the campaign."
                },
                {
                  "column_name": "campaign_id",
                  "dtype": "bigint",
                  "description": "Unique identifier for the campaign within the Google Ads account."
                },
                {
                  "column_name": "name",
                  "dtype": "string",
                  "description": "Human-readable name of the campaign as configured in Google Ads."
                },
                {
                  "column_name": "advertising_channel_type",
                  "dtype": "string",
                  "description": "Primary advertising channel for the campaign, e.g., SEARCH or DISPLAY."
                },
                {
                  "column_name": "tracking_url_template",
                  "dtype": "string",
                  "description": "Template used to build campaign tracking URLs with placeholders for parameters."
                },
                {
                  "column_name": "serving_status",
                  "dtype": "string",
                  "description": "Current serving status of the campaign, such as SERVING or NONE."
                },
                {
                  "column_name": "bidding_strategy_id",
                  "dtype": "bigint",
                  "description": "Identifier of the bidding strategy assigned to the campaign."
                }
              ]
            },
            {
              "table_name": "dim_googleads_managed_customers",
              "column_info": [
                {
                  "column_name": "snapshot_timestamp",
                  "dtype": "timestamp",
                  "description": "Timestamp recording when this row was captured or refreshed in the datalake snapshot."
                },
                {
                  "column_name": "customer_id",
                  "dtype": "bigint",
                  "description": "Numeric Google Ads customer identifier for the managed account; used to link to other Google Ads data."
                },
                {
                  "column_name": "labels",
                  "dtype": "string",
                  "description": "Tags or labels assigned to the managed customer, usually stored as a comma-separated string or JSON array."
                },
                {
                  "column_name": "is_archived",
                  "dtype": "boolean",
                  "description": "Boolean indicating whether the managed customer account has been archived."
                },
                {
                  "column_name": "name",
                  "dtype": "string",
                  "description": "Display name of the managed customer account as shown in Google Ads."
                },
                {
                  "column_name": "can_manage_clients",
                  "dtype": "boolean",
                  "description": "Boolean flag indicating whether this manager account has permission to manage client accounts."
                }
              ]
            },
            {
              "table_name": "dim_post_mortem",
              "column_info": [
                {
                  "column_name": "severity_level",
                  "dtype": "string",
                  "description": "Severity classification of the incident (e.g., low, medium, high)."
                },
                {
                  "column_name": "status",
                  "dtype": "string",
                  "description": "Current status of the post-mortem (e.g., open, resolved, monitoring)."
                },
                {
                  "column_name": "snapshot_timestamp",
                  "dtype": "date",
                  "description": "Timestamp when this snapshot of the record was taken."
                },
                {
                  "column_name": "date",
                  "dtype": "date",
                  "description": "Date of the incident or post-mortem record."
                },
                {
                  "column_name": "root_cause_category",
                  "dtype": "string",
                  "description": "Categorized root cause of the incident (e.g., network, code, configuration)."
                },
                {
                  "column_name": "title",
                  "dtype": "string",
                  "description": "Short title or summary of the post-mortem."
                },
                {
                  "column_name": "affected_systems",
                  "dtype": "string",
                  "description": "List or description of systems impacted by the incident."
                }
              ]
            },
            {
              "table_name": "dim_triple_a_partner_connection",
              "column_info": [
                {
                  "column_name": "connection_status",
                  "dtype": "string",
                  "description": "Current status of the partner connection (for example: active, inactive)."
                },
                {
                  "column_name": "campaign_cookietime_clickaction",
                  "dtype": "string",
                  "description": "Click action configured for campaign-level cookietime."
                },
                {
                  "column_name": "optional_cookietime_clickaction_mode",
                  "dtype": "string",
                  "description": "Mode for click action when optional cookietime is configured."
                },
                {
                  "column_name": "project_url",
                  "dtype": "string",
                  "description": "URL associated with the project or its landing page."
                },
                {
                  "column_name": "commission_group_title",
                  "dtype": "string",
                  "description": "Display title of the commission group."
                },
                {
                  "column_name": "channel_id",
                  "dtype": "bigint",
                  "description": "Numeric identifier representing the channel."
                },
                {
                  "column_name": "campaign_cookietime_clickaction_mode",
                  "dtype": "string",
                  "description": "Click action mode for campaign-level cookietime settings."
                },
                {
                  "column_name": "campaign_cookietime_postviewaction",
                  "dtype": "string",
                  "description": "Campaign-level setting indicating the post-view action behavior."
                },
                {
                  "column_name": "optional_cookietime_clickaction",
                  "dtype": "string",
                  "description": "Click action configured under optional cookietime settings."
                },
                {
                  "column_name": "project_title",
                  "dtype": "string",
                  "description": "Display title or name of the project."
                },
                {
                  "column_name": "trackingcode",
                  "dtype": "string",
                  "description": "Tracking code associated with the partner connection for attribution."
                },
                {
                  "column_name": "connection_last_change_time",
                  "dtype": "timestamp",
                  "description": "Timestamp when the connection record was last modified."
                },
                {
                  "column_name": "publisher_surname",
                  "dtype": "string",
                  "description": "Publisher's family name or surname."
                },
                {
                  "column_name": "snapshot_timestamp",
                  "dtype": "date",
                  "description": "Date when this snapshot of the record was captured."
                },
                {
                  "column_name": "campaign_cookietime_postviewaction_mode",
                  "dtype": "string",
                  "description": "Post-view action mode for campaign-level cookietime settings."
                },
                {
                  "column_name": "campaign_id",
                  "dtype": "bigint",
                  "description": "Numeric identifier for the campaign."
                },
                {
                  "column_name": "optional_cookietime_postviewaction",
                  "dtype": "string",
                  "description": "Post-view action configured under optional cookietime settings."
                },
                {
                  "column_name": "postview",
                  "dtype": "string",
                  "description": "Indicator or configuration value for post-view handling."
                },
                {
                  "column_name": "channel_title",
                  "dtype": "string",
                  "description": "Display title or name of the channel."
                },
                {
                  "column_name": "commission_group_id",
                  "dtype": "bigint",
                  "description": "Numeric identifier for the commission group."
                },
                {
                  "column_name": "connection_last_insert_time",
                  "dtype": "timestamp",
                  "description": "Timestamp when the connection record was last inserted into the system."
                },
                {
                  "column_name": "optional_cookietime_postviewaction_mode",
                  "dtype": "string",
                  "description": "Mode for post-view action when optional cookietime is configured."
                },
                {
                  "column_name": "project_id",
                  "dtype": "bigint",
                  "description": "Numeric identifier for the project."
                },
                {
                  "column_name": "campaign_title",
                  "dtype": "string",
                  "description": "Display title or name of the campaign."
                },
                {
                  "column_name": "publisher_prename",
                  "dtype": "string",
                  "description": "Publisher's given name or first name."
                },
                {
                  "column_name": "publisher_id",
                  "dtype": "bigint",
                  "description": "Unique identifier for the publisher."
                }
              ]
            },
            {
              "table_name": "dim_vendor_payment_status",
              "column_info": [
                {
                  "column_name": "unpaid_sum",
                  "dtype": "double",
                  "description": "Total unpaid amount outstanding for the vendor at the time of the snapshot."
                },
                {
                  "column_name": "vendor_uuid",
                  "dtype": "string",
                  "description": "Unique UUID that identifies the vendor."
                },
                {
                  "column_name": "uuids",
                  "dtype": "array<string>",
                  "description": "Array of related UUIDs (e.g., invoice or payment record identifiers) linked to the vendor."
                },
                {
                  "column_name": "snapshot_timestamp",
                  "dtype": "date",
                  "description": "Date representing the snapshot day for the payment status."
                },
                {
                  "column_name": "fetched_at",
                  "dtype": "timestamp",
                  "description": "Timestamp when this record was fetched from the source system."
                },
                {
                  "column_name": "debitor_number",
                  "dtype": "string",
                  "description": "Vendor debtor/account number used for billing and collections; may identify an account holder."
                }
              ]
            },
            {
              "table_name": "draft_service_request_created",
              "column_info": [
                {
                  "column_name": "product_request_uuid",
                  "dtype": "string",
                  "description": "UUID for the product request associated with the draft service request."
                },
                {
                  "column_name": "product_id",
                  "dtype": "string",
                  "description": "Application product identifier; may be numeric or string."
                },
                {
                  "column_name": "cms_data",
                  "dtype": "struct<experiment_id:int,variant_id:int,page_id:int,revision_id:int,targeting_preset_id:int,url_node_id:int,root_node_id:int,form_id:int,experiments:array<struct<id:string,name:string,version_id:string,version_name:string>>,variants:array<struct<id:string,name:string,version_id:string,version_name:string>>>",
                  "description": "CMS-related metadata such as experiment, variant, page and form identifiers."
                },
                {
                  "column_name": "client_timestamp",
                  "dtype": "timestamp",
                  "description": "Timestamp recorded by the client when the event occurred."
                },
                {
                  "column_name": "event_uuid",
                  "dtype": "string",
                  "description": "Unique identifier for this analytics/event record."
                },
                {
                  "column_name": "given_answers",
                  "dtype": "array<struct<type:string,form_service_answer_uuid:string,form_service_answer_text:boolean,form_service_question_uuid:string,label:string,value:string,slug:string>>",
                  "description": "Answers submitted in forms; may include personal responses or values that identify individuals."
                },
                {
                  "column_name": "event_kafka_timestamp",
                  "dtype": "timestamp",
                  "description": "Timestamp when the event was produced to Kafka or ingested into the pipeline."
                },
                {
                  "column_name": "google_analytics",
                  "dtype": "struct<_ga:string,_gid:string>",
                  "description": "Google Analytics identifiers (_ga, _gid) associated with the event."
                },
                {
                  "column_name": "contacts",
                  "dtype": "struct<international_area_code:string,company:string,email:string,city:string,zip_code:string,gender:string,hidden_spam_detection_field:string,callback_time:string,comment:string,language_code:string,country_code:string,email_normalized:string>",
                  "description": "Contact details captured on the form (email, city, zip, company, comment) and related fields."
                },
                {
                  "column_name": "_meta",
                  "dtype": "struct<event_uuid:string,event_time:string,application:string,origin:string,experiments:array<struct<id:string,variant:string>>,client_info:struct<asn:string,country:string,region:string,city:string,postal_code:string,latitude:string,longitude:string,ja4_fingerprint:string,is_desktop_viewer:boolean,is_mobile_viewer:boolean,is_smarttv_viewer:boolean,is_tablet_viewer:boolean,is_android_viewer:boolean,is_ios_viewer:boolean>,user:struct<uuid:string,roles:array<string>>>",
                  "description": "Event metadata including client_info (geo/device), event identifiers and user uuid; contains device or user identifiers."
                },
                {
                  "column_name": "notes",
                  "dtype": "array<string>",
                  "description": "Array of free-text notes attached to the request; may contain arbitrary content."
                },
                {
                  "column_name": "product_uuid",
                  "dtype": "string",
                  "description": "UUID identifying the product related to the draft request."
                },
                {
                  "column_name": "experiment_feature_flags",
                  "dtype": "array<string>",
                  "description": "List of experiment or feature flags active for the event."
                },
                {
                  "column_name": "page",
                  "dtype": "struct<url:string,referer:string,type:string,language_code:string,country_code:string,product_id:string,ref:string,source:string>",
                  "description": "Page-level information including URL, referer, type, language and product reference."
                },
                {
                  "column_name": "event_timestamp",
                  "dtype": "timestamp",
                  "description": "Canonical timestamp for when the event occurred in the system."
                },
                {
                  "column_name": "is_internal",
                  "dtype": "boolean",
                  "description": "Boolean flag indicating if the request was created by internal staff or process."
                },
                {
                  "column_name": "trackings",
                  "dtype": "struct<referer:string,gclid:string,ag:string,ag_url:string,experiment_id:int,entrance_url:string,variant_id:int,subid:string,vertical:string,uid:string,partner:string,partner_clean:string,conversion_group:string,form_url:string,form_referer:string,aaaid:string,vendor_id:string,ad_id:string,campaign_id:string,adgroup_id:string,account_id:string,lead_id:string>",
                  "description": "Marketing and tracking metadata (uids, campaign/ad identifiers, partner IDs) that can include user or lead identifiers."
                },
                {
                  "column_name": "visitor_id",
                  "dtype": "string",
                  "description": "Identifier for the visitor or session used to link user activity."
                },
                {
                  "column_name": "device",
                  "dtype": "struct<user_agent:string,screen_width:int,screen_height:int,viewport_width:int,viewport_height:int,is_touch:boolean,connection_type:string,language_code:string>",
                  "description": "Client device information such as user agent, screen dimensions and connection type."
                }
              ]
            },
            {
              "table_name": "email_subscription_changed",
              "column_info": [
                {
                  "column_name": "event_timestamp",
                  "dtype": "timestamp",
                  "description": "Recorded timestamp of when the subscription change event occurred."
                },
                {
                  "column_name": "registration_triggers",
                  "dtype": "array<string>",
                  "description": "List of triggers or sources that initiated the registration or change."
                },
                {
                  "column_name": "user_data",
                  "dtype": "struct<uuid:string,roles:array<string>>",
                  "description": "Structured user information including uuid and roles; contains user identifier data."
                },
                {
                  "column_name": "consent_revoked_at",
                  "dtype": "timestamp",
                  "description": "Timestamp indicating when consent was revoked, if applicable."
                },
                {
                  "column_name": "campaign_id",
                  "dtype": "string",
                  "description": "Identifier of the related campaign, if present."
                },
                {
                  "column_name": "products",
                  "dtype": "array<struct<uuid:string,kind:string,not_qualified_reason:string>>",
                  "description": "Array of related products with fields uuid, kind, and not_qualified_reason."
                },
                {
                  "column_name": "_meta",
                  "dtype": "struct<event_uuid:string,event_time:string,application:string,origin:string,experiments:array<struct<id:string,variant:string>>,client_info:struct<asn:string,country:string,region:string,city:string,postal_code:string,latitude:string,longitude:string,ja4_fingerprint:string,is_desktop_viewer:boolean,is_mobile_viewer:boolean,is_smarttv_viewer:boolean,is_tablet_viewer:boolean,is_android_viewer:boolean,is_ios_viewer:boolean>,user:struct<uuid:string,roles:array<string>>>",
                  "description": "Event metadata containing origin, client info and user data; may include identifiers and location information."
                },
                {
                  "column_name": "target_groups",
                  "dtype": "array<string>",
                  "description": "Array of target group identifiers affected by the subscription change."
                },
                {
                  "column_name": "change_type",
                  "dtype": "string",
                  "description": "Type of subscription change (e.g., subscribed, unsubscribed, updated)."
                },
                {
                  "column_name": "current_consent",
                  "dtype": "struct<start_time:string,consent_type:string>",
                  "description": "Current consent details including start time and consent type."
                },
                {
                  "column_name": "email",
                  "dtype": "string",
                  "description": "Subscriber's email address."
                },
                {
                  "column_name": "event_kafka_timestamp",
                  "dtype": "timestamp",
                  "description": "Timestamp when the event was produced to Kafka."
                },
                {
                  "column_name": "event_uuid",
                  "dtype": "string",
                  "description": "Unique identifier for the subscription change event."
                }
              ]
            },
            {
              "table_name": "emarsys_customer_data",
              "column_info": [
                {
                  "column_name": "email_id",
                  "dtype": "string",
                  "description": "Customer email address or Emarsys identifier used for contact."
                },
                {
                  "column_name": "hr",
                  "dtype": "string",
                  "description": "Hour of the event stored as a string for aggregation or partitioning."
                },
                {
                  "column_name": "event_timestamp",
                  "dtype": "date",
                  "description": "Date when the event occurred."
                },
                {
                  "column_name": "reg_source",
                  "dtype": "string",
                  "description": "Source or channel where the user registered (e.g., campaign, form)."
                },
                {
                  "column_name": "link_title",
                  "dtype": "string",
                  "description": "Title or label of the link associated with the event (e.g., email link text)."
                },
                {
                  "column_name": "time",
                  "dtype": "string",
                  "description": "Event time component as a string, typically representing time of day."
                },
                {
                  "column_name": "email_sha256",
                  "dtype": "string",
                  "description": "SHA-256 hash of the customer's email used for pseudonymized matching."
                },
                {
                  "column_name": "source",
                  "dtype": "string",
                  "description": "Origin system or channel that generated the event record."
                },
                {
                  "column_name": "user_id",
                  "dtype": "string",
                  "description": "Identifier for the user associated with the record (internal or external ID)."
                }
              ]
            },
            {
              "table_name": "emarsys_customer_data_triggers",
              "column_info": [
                {
                  "column_name": "requested_at",
                  "dtype": "timestamp",
                  "description": "Timestamp when the export trigger was requested."
                },
                {
                  "column_name": "email_id",
                  "dtype": "string",
                  "description": "Customer email address used for Emarsys communications and identification."
                },
                {
                  "column_name": "run_id",
                  "dtype": "int",
                  "description": "Identifier for the specific execution run of the export process."
                },
                {
                  "column_name": "export_id",
                  "dtype": "bigint",
                  "description": "Numeric identifier of the export job or dataset associated with the trigger."
                }
              ]
            },
            {
              "table_name": "emarsys_performance_launches",
              "column_info": [
                {
                  "column_name": "complained",
                  "dtype": "bigint",
                  "description": "Number of complaint or spam reports generated by recipients for the launch."
                },
                {
                  "column_name": "total_clicks",
                  "dtype": "bigint",
                  "description": "Total number of clicks recorded across all recipients for the launch."
                },
                {
                  "column_name": "sent",
                  "dtype": "bigint",
                  "description": "Number of emails successfully handed off for delivery for the launch."
                },
                {
                  "column_name": "launch_id",
                  "dtype": "string",
                  "description": "Unique identifier for the specific email launch or campaign."
                },
                {
                  "column_name": "email_id",
                  "dtype": "string",
                  "description": "Recipient email address or identifier associated with the record."
                },
                {
                  "column_name": "soft_bounces",
                  "dtype": "bigint",
                  "description": "Count of emails that temporarily bounced (soft bounces) for the launch."
                },
                {
                  "column_name": "planned",
                  "dtype": "bigint",
                  "description": "Number of emails planned or scheduled to be sent for the launch."
                },
                {
                  "column_name": "unsubscribe",
                  "dtype": "bigint",
                  "description": "Number of recipients who unsubscribed as a result of the launch."
                },
                {
                  "column_name": "hard_bounces",
                  "dtype": "bigint",
                  "description": "Count of emails that permanently bounced (hard bounces) for the launch."
                },
                {
                  "column_name": "unique_clicks",
                  "dtype": "bigint",
                  "description": "Number of distinct recipients who clicked at least once during the launch."
                },
                {
                  "column_name": "opened",
                  "dtype": "bigint",
                  "description": "Total number of opens recorded for the launch."
                },
                {
                  "column_name": "launches",
                  "dtype": "bigint",
                  "description": "Count of launch events or iterations associated with the email (for example retries or segmented sends)."
                },
                {
                  "column_name": "block_bounces",
                  "dtype": "bigint",
                  "description": "Count of emails blocked by recipient domains or carriers."
                }
              ]
            },
            {
              "table_name": "emarsys_performance_launches_batch",
              "column_info": [
                {
                  "column_name": "totalclicked",
                  "dtype": "bigint",
                  "description": "Total number of clicks across all links in the messages."
                },
                {
                  "column_name": "sent",
                  "dtype": "bigint",
                  "description": "Number of messages successfully sent to recipients."
                },
                {
                  "column_name": "campaignid",
                  "dtype": "bigint",
                  "description": "Emarsys campaign identifier associated with the launch."
                },
                {
                  "column_name": "blockbounced",
                  "dtype": "bigint",
                  "description": "Count of messages blocked from delivery by recipient domains or providers."
                },
                {
                  "column_name": "privacyopened",
                  "dtype": "bigint",
                  "description": "Number of opens recorded using privacy-compliant/open-tracking methods."
                },
                {
                  "column_name": "planned",
                  "dtype": "bigint",
                  "description": "Number of recipients planned for the launch."
                },
                {
                  "column_name": "uniqueclicked",
                  "dtype": "bigint",
                  "description": "Number of unique recipients who clicked at least one link."
                },
                {
                  "column_name": "softbounced",
                  "dtype": "bigint",
                  "description": "Count of temporary delivery failures (soft bounces)."
                },
                {
                  "column_name": "complained",
                  "dtype": "bigint",
                  "description": "Number of recipients who marked the message as spam or filed a complaint."
                },
                {
                  "column_name": "opened",
                  "dtype": "bigint",
                  "description": "Total number of recorded email opens."
                },
                {
                  "column_name": "launchid",
                  "dtype": "bigint",
                  "description": "Identifier for the specific launch or send instance."
                },
                {
                  "column_name": "hardbounced",
                  "dtype": "bigint",
                  "description": "Count of permanent delivery failures (hard bounces)."
                },
                {
                  "column_name": "unsubscribed",
                  "dtype": "bigint",
                  "description": "Number of recipients who unsubscribed from the mailing list."
                }
              ]
            },
            {
              "table_name": "gitlab_merge_requests",
              "column_info": [
                {
                  "column_name": "id",
                  "dtype": "bigint",
                  "description": "Global unique numeric identifier for the merge request record."
                },
                {
                  "column_name": "sha",
                  "dtype": "string",
                  "description": "Commit SHA of the source branch head for the merge request."
                },
                {
                  "column_name": "project_id",
                  "dtype": "bigint",
                  "description": "Numeric identifier of the GitLab project that contains the merge request."
                },
                {
                  "column_name": "state",
                  "dtype": "string",
                  "description": "Current state of the merge request (e.g., opened, closed, merged)."
                },
                {
                  "column_name": "squash",
                  "dtype": "boolean",
                  "description": "Boolean flag indicating whether commits were squashed on merge."
                },
                {
                  "column_name": "merge_commit_sha",
                  "dtype": "string",
                  "description": "SHA of the merge commit created when the merge request was merged."
                },
                {
                  "column_name": "merged_at",
                  "dtype": "timestamp",
                  "description": "Timestamp when the merge request was merged; null if not merged."
                },
                {
                  "column_name": "created_at",
                  "dtype": "timestamp",
                  "description": "Timestamp when the merge request was created."
                },
                {
                  "column_name": "title",
                  "dtype": "string",
                  "description": "Title of the merge request as provided by the author."
                },
                {
                  "column_name": "updated_at",
                  "dtype": "timestamp",
                  "description": "Timestamp of the last update to the merge request record."
                },
                {
                  "column_name": "source_branch",
                  "dtype": "string",
                  "description": "Name of the source branch for the merge request."
                },
                {
                  "column_name": "iid",
                  "dtype": "bigint",
                  "description": "Internal, project-scoped identifier (IID) for the merge request."
                },
                {
                  "column_name": "target_branch",
                  "dtype": "string",
                  "description": "Name of the target branch into which the merge request will be merged."
                },
                {
                  "column_name": "squash_commit_sha",
                  "dtype": "string",
                  "description": "SHA of the commit produced when the merge request was squashed, if applicable."
                }
              ]
            },
            {
              "table_name": "historized_bingads_accounts",
              "column_info": [
                {
                  "column_name": "id",
                  "dtype": "bigint",
                  "description": "Unique numeric identifier for the Bing Ads account."
                },
                {
                  "column_name": "parent_customer_id",
                  "dtype": "bigint",
                  "description": "Identifier of the parent customer account if the account belongs to a hierarchy."
                },
                {
                  "column_name": "bill_to_customer_id",
                  "dtype": "bigint",
                  "description": "Identifier for the customer responsible for billing."
                },
                {
                  "column_name": "language",
                  "dtype": "string",
                  "description": "Primary language or locale code for the account."
                },
                {
                  "column_name": "name",
                  "dtype": "string",
                  "description": "Display name of the Bing Ads account."
                },
                {
                  "column_name": "auto_tag_type",
                  "dtype": "string",
                  "description": "Type of automatic tagging applied to the account, if any."
                },
                {
                  "column_name": "time_zone",
                  "dtype": "string",
                  "description": "Account time zone identifier (e.g., 'Pacific Standard Time')."
                },
                {
                  "column_name": "number",
                  "dtype": "string",
                  "description": "Account-related number (could represent an account or contact number)."
                },
                {
                  "column_name": "pause_reason",
                  "dtype": "int",
                  "description": "Numeric code indicating why the account was paused."
                },
                {
                  "column_name": "currency_code",
                  "dtype": "string",
                  "description": "Three-letter currency code used for billing and reporting (e.g., USD)."
                },
                {
                  "column_name": "primary_user_id",
                  "dtype": "bigint",
                  "description": "Identifier of the primary user associated with the account."
                },
                {
                  "column_name": "last_modified_time",
                  "dtype": "string",
                  "description": "Timestamp string of the most recent modification to the account record."
                },
                {
                  "column_name": "account_life_cycle_status",
                  "dtype": "string",
                  "description": "Lifecycle status of the account such as active, suspended, or closed."
                },
                {
                  "column_name": "sold_to_payment_instrument_id",
                  "dtype": "bigint",
                  "description": "Identifier for the payment instrument associated with the sold-to party."
                },
                {
                  "column_name": "payment_method_id",
                  "dtype": "bigint",
                  "description": "Identifier of the payment method linked to the account (for example a tokenized payment id)."
                },
                {
                  "column_name": "account_financial_status",
                  "dtype": "string",
                  "description": "Financial status of the account (e.g., active, delinquent, suspended)."
                },
                {
                  "column_name": "is_archived",
                  "dtype": "boolean",
                  "description": "Boolean flag indicating whether the account is archived."
                },
                {
                  "column_name": "last_modified_by_user_id",
                  "dtype": "bigint",
                  "description": "Identifier of the user who last modified the account record."
                }
              ]
            },
            {
              "table_name": "historized_bingads_adgroups",
              "column_info": [
                {
                  "column_name": "network",
                  "dtype": "string",
                  "description": "Advertising network(s) where the ad group is eligible to serve (e.g., Search, Audience)."
                },
                {
                  "column_name": "end_date",
                  "dtype": "string",
                  "description": "End date for the ad group (YYYY-MM-DD)."
                },
                {
                  "column_name": "tracking_url_template",
                  "dtype": "string",
                  "description": "Template used to build tracking URLs for clicks on ads in this group."
                },
                {
                  "column_name": "customer_id",
                  "dtype": "bigint",
                  "description": "Identifier of the customer (advertiser) owning the ad group; may identify an account owner."
                },
                {
                  "column_name": "id",
                  "dtype": "bigint",
                  "description": "Unique identifier for the ad group record."
                },
                {
                  "column_name": "status",
                  "dtype": "string",
                  "description": "Current operational status of the ad group (e.g., Active, Paused)."
                },
                {
                  "column_name": "cpc_bid",
                  "dtype": "double",
                  "description": "Default cost-per-click bid amount for the ad group."
                },
                {
                  "column_name": "final_url_suffix",
                  "dtype": "string",
                  "description": "Suffix appended to final landing page URLs for tracking."
                },
                {
                  "column_name": "start_date",
                  "dtype": "string",
                  "description": "Start date for the ad group (YYYY-MM-DD)."
                },
                {
                  "column_name": "ad_schedule_use_searcher_time_zone",
                  "dtype": "boolean",
                  "description": "Flag indicating if ad schedule uses the searcher’s time zone."
                },
                {
                  "column_name": "privacy_status",
                  "dtype": "string",
                  "description": "Privacy or consent status related to this ad group."
                },
                {
                  "column_name": "account_id",
                  "dtype": "bigint",
                  "description": "Identifier for the account associated with the ad group; can link to account-level data."
                },
                {
                  "column_name": "name",
                  "dtype": "string",
                  "description": "Human-readable name of the ad group."
                },
                {
                  "column_name": "settings",
                  "dtype": "array<string>",
                  "description": "Array of additional configuration settings for the ad group."
                },
                {
                  "column_name": "audience_ads_bid_adjustment",
                  "dtype": "int",
                  "description": "Bid adjustment value applied for audience-targeted ads."
                },
                {
                  "column_name": "language",
                  "dtype": "string",
                  "description": "Primary language targeting for the ad group."
                },
                {
                  "column_name": "bidding_scheme",
                  "dtype": "string",
                  "description": "Configuration or JSON describing the bidding strategy for the ad group."
                },
                {
                  "column_name": "url_custom_parameters",
                  "dtype": "array<struct<_1:string,_2:string>>",
                  "description": "Array of custom key-value parameters appended to URLs for tracking or personalization."
                },
                {
                  "column_name": "campaign_id",
                  "dtype": "bigint",
                  "description": "Identifier of the campaign that contains this ad group."
                }
              ]
            },
            {
              "table_name": "historized_bingads_ads",
              "column_info": [
                {
                  "column_name": "final_mobile_urls",
                  "dtype": "array<string>",
                  "description": "List of final landing page URLs optimized for mobile devices."
                },
                {
                  "column_name": "final_app_urls",
                  "dtype": "array<string>",
                  "description": "Array of app deep links used as final destinations for the ad."
                },
                {
                  "column_name": "device_preference",
                  "dtype": "bigint",
                  "description": "Numeric code indicating device targeting preference for the ad."
                },
                {
                  "column_name": "customer_id",
                  "dtype": "bigint",
                  "description": "Identifier of the customer or advertiser, which may represent an organization or person."
                },
                {
                  "column_name": "final_url_suffix",
                  "dtype": "string",
                  "description": "Suffix appended to the final URL for tracking parameters."
                },
                {
                  "column_name": "ad_group_id",
                  "dtype": "bigint",
                  "description": "Identifier of the ad group that contains the ad."
                },
                {
                  "column_name": "ad_format_preference",
                  "dtype": "string",
                  "description": "Preferred ad format for the record (e.g., text, image, responsive)."
                },
                {
                  "column_name": "url_custom_parameters",
                  "dtype": "array<struct<_1:string,_2:string>>",
                  "description": "Array of key/value custom parameters used within ad URLs for tracking or templating."
                },
                {
                  "column_name": "tracking_url_template",
                  "dtype": "string",
                  "description": "Template used to construct tracking URLs for clicks or impressions."
                },
                {
                  "column_name": "campaign_id",
                  "dtype": "bigint",
                  "description": "Identifier for the campaign associated with the ad."
                },
                {
                  "column_name": "status",
                  "dtype": "string",
                  "description": "Operational status of the ad (e.g., enabled, paused, removed)."
                },
                {
                  "column_name": "id",
                  "dtype": "bigint",
                  "description": "Unique identifier for the ad record."
                },
                {
                  "column_name": "final_urls",
                  "dtype": "array<string>",
                  "description": "List of final landing page URLs for desktop or general use."
                },
                {
                  "column_name": "account_id",
                  "dtype": "bigint",
                  "description": "Identifier for the account that owns the ad; links to account-level records."
                },
                {
                  "column_name": "type",
                  "dtype": "string",
                  "description": "Classification or format type of the ad (e.g., expanded text, responsive)."
                },
                {
                  "column_name": "editorial_status",
                  "dtype": "string",
                  "description": "Result of editorial review or policy evaluation for the ad content."
                }
              ]
            },
            {
              "table_name": "historized_bingads_campaigns",
              "column_info": [
                {
                  "column_name": "tracking_url_template",
                  "dtype": "string",
                  "description": "Template URL used for click tracking and analytics, may include parameter placeholders."
                },
                {
                  "column_name": "audience_ads_bid_adjustment",
                  "dtype": "int",
                  "description": "Numeric adjustment applied to bids for audience-targeted ads (e.g., percentage or multiplier)."
                },
                {
                  "column_name": "daily_budget",
                  "dtype": "double",
                  "description": "Configured daily budget amount for the campaign expressed in account currency."
                },
                {
                  "column_name": "name",
                  "dtype": "string",
                  "description": "Human-readable campaign name provided by the advertiser or account manager."
                },
                {
                  "column_name": "campaign_type",
                  "dtype": "array<string>",
                  "description": "Array of campaign type labels or categories assigned to the campaign."
                },
                {
                  "column_name": "status",
                  "dtype": "string",
                  "description": "Current operational status of the campaign (for example: Active, Paused, or Deleted)."
                },
                {
                  "column_name": "bidding_scheme",
                  "dtype": "string",
                  "description": "Campaign bidding configuration or strategy details (e.g., manual, automated, bid strategy parameters)."
                },
                {
                  "column_name": "id",
                  "dtype": "bigint",
                  "description": "Unique numeric identifier for the campaign record."
                },
                {
                  "column_name": "budget_id",
                  "dtype": "bigint",
                  "description": "Identifier of the budget entity linked to the campaign."
                },
                {
                  "column_name": "budget_type",
                  "dtype": "string",
                  "description": "Type of budget applied to the campaign (such as Daily, Lifetime, or Shared)."
                },
                {
                  "column_name": "account_id",
                  "dtype": "bigint",
                  "description": "Identifier of the account that owns the campaign."
                },
                {
                  "column_name": "settings",
                  "dtype": "array<string>",
                  "description": "Array of additional campaign settings and options represented as key/value entries."
                },
                {
                  "column_name": "customer_id",
                  "dtype": "bigint",
                  "description": "Identifier of the customer associated with the campaign account; maps to the advertiser or client entity."
                },
                {
                  "column_name": "languages",
                  "dtype": "array<string>",
                  "description": "Array of language codes targeted by the campaign (e.g., ['en','fr'])."
                },
                {
                  "column_name": "time_zone",
                  "dtype": "string",
                  "description": "Timezone used for the campaign's scheduling and reporting (e.g., 'UTC', 'Europe/Paris')."
                }
              ]
            },
            {
              "table_name": "historized_crm_financial_targets",
              "column_info": [
                {
                  "column_name": "crm_service_requests",
                  "dtype": "double",
                  "description": "Number of service requests registered in CRM during the period."
                },
                {
                  "column_name": "date",
                  "dtype": "date",
                  "description": "Date for which the financial targets and metrics apply."
                },
                {
                  "column_name": "case",
                  "dtype": "string",
                  "description": "CRM case category or identifier describing the context of customer interactions."
                },
                {
                  "column_name": "business_area",
                  "dtype": "string",
                  "description": "Business unit or operational area associated with the CRM metrics."
                },
                {
                  "column_name": "email_recipients",
                  "dtype": "double",
                  "description": "Total number of email recipients targeted during the period (aggregate count)."
                },
                {
                  "column_name": "theme_world",
                  "dtype": "string",
                  "description": "High-level thematic category or market world used for grouping metrics."
                },
                {
                  "column_name": "crm_matches",
                  "dtype": "double",
                  "description": "Count of CRM matches or successful lead-to-customer matches recorded for the period."
                },
                {
                  "column_name": "email_clicks",
                  "dtype": "double",
                  "description": "Aggregate count of email clicks recorded for the period."
                },
                {
                  "column_name": "crm_net_revenue_target",
                  "dtype": "double",
                  "description": "Targeted net revenue amount for CRM for the specified date and business area."
                },
                {
                  "column_name": "email_openings",
                  "dtype": "double",
                  "description": "Aggregate count of email opens recorded for the period."
                },
                {
                  "column_name": "crm_sold_leads",
                  "dtype": "double",
                  "description": "Number of leads converted to sales within the CRM for the given period."
                },
                {
                  "column_name": "top_product",
                  "dtype": "string",
                  "description": "Top-performing product or offering for the given business area and period."
                }
              ]
            },
            {
              "table_name": "historized_emarsys_automation_center_programs",
              "column_info": [
                {
                  "column_name": "name",
                  "dtype": "string",
                  "description": "Display name of the automation program."
                },
                {
                  "column_name": "parent_id",
                  "dtype": "string",
                  "description": "Identifier of the parent program if this program belongs to a hierarchy."
                },
                {
                  "column_name": "status",
                  "dtype": "string",
                  "description": "Current status of the program (e.g., active, paused, stopped)."
                },
                {
                  "column_name": "id",
                  "dtype": "string",
                  "description": "Unique identifier of the Emarsys automation program."
                },
                {
                  "column_name": "is_archived",
                  "dtype": "boolean",
                  "description": "Boolean flag indicating whether the program has been archived."
                }
              ]
            },
            {
              "table_name": "historized_emarsys_campaign_launches",
              "column_info": [
                {
                  "column_name": "done",
                  "dtype": "boolean",
                  "description": "Boolean flag indicating whether the campaign launch completed successfully."
                },
                {
                  "column_name": "launch_date",
                  "dtype": "timestamp",
                  "description": "Timestamp when the campaign launch occurred."
                },
                {
                  "column_name": "id",
                  "dtype": "string",
                  "description": "Unique identifier for the Emarsys campaign launch record."
                },
                {
                  "column_name": "email_id",
                  "dtype": "string",
                  "description": "Recipient email address associated with the campaign launch."
                }
              ]
            },
            {
              "table_name": "historized_emarsys_campaigns",
              "column_info": [
                {
                  "column_name": "exclude_contactlist",
                  "dtype": "bigint",
                  "description": "Identifier or flag for contact lists that are excluded from the campaign."
                },
                {
                  "column_name": "event_id",
                  "dtype": "string",
                  "description": "Unique identifier for this event or change in the historized feed."
                },
                {
                  "column_name": "fromname",
                  "dtype": "string",
                  "description": "Sender display name shown to recipients for the campaign."
                },
                {
                  "column_name": "browse",
                  "dtype": "boolean",
                  "description": "Flag indicating whether the campaign was triggered by browse behavior."
                },
                {
                  "column_name": "administrator_id",
                  "dtype": "string",
                  "description": "Identifier of the administrator or user who created or updated the campaign."
                },
                {
                  "column_name": "unsubscribe",
                  "dtype": "boolean",
                  "description": "Indicates whether unsubscribe handling is enabled for the campaign."
                },
                {
                  "column_name": "api_status",
                  "dtype": "string",
                  "description": "Status returned by the Emarsys API for the campaign operation."
                },
                {
                  "column_name": "contactlist",
                  "dtype": "string",
                  "description": "Name or identifier for the contact list targeted by the campaign."
                },
                {
                  "column_name": "version_name",
                  "dtype": "string",
                  "description": "Label or name for the specific campaign version."
                },
                {
                  "column_name": "email_category",
                  "dtype": "string",
                  "description": "Categorization of the email content (e.g., newsletter, alert)."
                },
                {
                  "column_name": "status_code",
                  "dtype": "string",
                  "description": "Short code representing the campaign status or API response."
                },
                {
                  "column_name": "filter",
                  "dtype": "string",
                  "description": "Filter criteria or identifier used to select the campaign audience."
                },
                {
                  "column_name": "id",
                  "dtype": "string",
                  "description": "Unique campaign identifier assigned by Emarsys."
                },
                {
                  "column_name": "subject",
                  "dtype": "string",
                  "description": "Subject line of the campaign email."
                },
                {
                  "column_name": "campaign_type",
                  "dtype": "string",
                  "description": "Category of the campaign such as promotional or transactional."
                },
                {
                  "column_name": "force_attachment",
                  "dtype": "boolean",
                  "description": "Flag indicating whether attachments are forced on the campaign message."
                },
                {
                  "column_name": "name",
                  "dtype": "string",
                  "description": "Campaign name or title used for identification."
                },
                {
                  "column_name": "template",
                  "dtype": "string",
                  "description": "Template identifier or name used to render the campaign content."
                },
                {
                  "column_name": "exclude_filter",
                  "dtype": "bigint",
                  "description": "Identifier or flag for exclusion filters applied to the audience."
                },
                {
                  "column_name": "text_source",
                  "dtype": "string",
                  "description": "Plain-text source content or reference for the campaign message."
                },
                {
                  "column_name": "status",
                  "dtype": "string",
                  "description": "Human-readable status of the campaign within Emarsys or the sync process."
                },
                {
                  "column_name": "content_type",
                  "dtype": "string",
                  "description": "Content type or format of the campaign payload."
                },
                {
                  "column_name": "source",
                  "dtype": "string",
                  "description": "Origin system or channel that provided the campaign record."
                },
                {
                  "column_name": "api_error",
                  "dtype": "string",
                  "description": "Error message or code from the Emarsys API when an operation fails."
                },
                {
                  "column_name": "features",
                  "dtype": "array<string>",
                  "description": "Array of feature flags or attributes enabled for this campaign."
                },
                {
                  "column_name": "html_source",
                  "dtype": "string",
                  "description": "HTML source content or reference used for the campaign message."
                },
                {
                  "column_name": "is_rti",
                  "dtype": "boolean",
                  "description": "Flag indicating if the campaign is configured for real-time interaction (RTI)."
                },
                {
                  "column_name": "language",
                  "dtype": "string",
                  "description": "Language code used for the campaign content."
                },
                {
                  "column_name": "is_delayed",
                  "dtype": "bigint",
                  "description": "Numeric flag indicating if campaign delivery is scheduled with delay."
                },
                {
                  "column_name": "created",
                  "dtype": "timestamp",
                  "description": "Timestamp when this campaign record or version was created."
                },
                {
                  "column_name": "fromemail",
                  "dtype": "string",
                  "description": "Sender email address used for the campaign message."
                },
                {
                  "column_name": "fromemail_host",
                  "dtype": "string",
                  "description": "Domain portion of the sender email address used for the campaign."
                }
              ]
            },
            {
              "table_name": "historized_emarsys_contact_details",
              "column_info": [
                {
                  "column_name": "email_normalized",
                  "dtype": "string",
                  "description": "Normalized form of the email (e.g., lowercased and trimmed) used for matching and deduplication."
                },
                {
                  "column_name": "user_id",
                  "dtype": "string",
                  "description": "Identifier for the contact in Emarsys or the source system used to link contact records."
                },
                {
                  "column_name": "date_last_transition_to_inactive",
                  "dtype": "string",
                  "description": "Date (stored as string) when the contact last transitioned to inactive status."
                },
                {
                  "column_name": "user_uid",
                  "dtype": "string",
                  "description": "Unique UUID assigned to the user in the source system for deduplication and joins."
                },
                {
                  "column_name": "date_last_reactivation",
                  "dtype": "date",
                  "description": "Date when the contact was last reactivated in Emarsys."
                },
                {
                  "column_name": "email",
                  "dtype": "string",
                  "description": "Contact's email address used for communication and identification."
                }
              ]
            },
            {
              "table_name": "historized_emarsys_program_links",
              "column_info": [
                {
                  "column_name": "program_name",
                  "dtype": "string",
                  "description": "Human-readable name of the Emarsys program."
                },
                {
                  "column_name": "is_archived",
                  "dtype": "boolean",
                  "description": "Flag indicating whether the program link is archived (true) or active (false)."
                },
                {
                  "column_name": "program_id",
                  "dtype": "string",
                  "description": "Unique identifier for the Emarsys program."
                },
                {
                  "column_name": "email_id",
                  "dtype": "string",
                  "description": "Email address or Emarsys recipient identifier associated with the program link."
                }
              ]
            },
            {
              "table_name": "historized_fb_accounts",
              "column_info": [
                {
                  "column_name": "partner",
                  "dtype": "string",
                  "description": "Partner or owner associated with the account (for example, an agency or internal partner)."
                },
                {
                  "column_name": "account_id",
                  "dtype": "bigint",
                  "description": "External numeric identifier for the Facebook account."
                },
                {
                  "column_name": "timezone_name",
                  "dtype": "string",
                  "description": "Timezone identifier configured for the account (for example, 'America/Los_Angeles')."
                },
                {
                  "column_name": "name",
                  "dtype": "string",
                  "description": "Display name of the Facebook account or page."
                },
                {
                  "column_name": "currency",
                  "dtype": "string",
                  "description": "Default currency code for the account using ISO 4217 (for example, 'USD')."
                },
                {
                  "column_name": "account_status",
                  "dtype": "bigint",
                  "description": "Numeric code indicating the account's status (e.g., active, disabled, pending)."
                },
                {
                  "column_name": "is_archived",
                  "dtype": "boolean",
                  "description": "Boolean flag indicating whether the account is archived."
                }
              ]
            },
            {
              "table_name": "historized_fb_adsets",
              "column_info": [
                {
                  "column_name": "pacing_type",
                  "dtype": "string",
                  "description": "Method used to pace budget delivery over time."
                },
                {
                  "column_name": "account_id",
                  "dtype": "bigint",
                  "description": "Numeric identifier of the Facebook account that owns the ad set."
                },
                {
                  "column_name": "bid_strategy",
                  "dtype": "string",
                  "description": "Bidding strategy employed by the ad set (e.g., lowest cost)."
                },
                {
                  "column_name": "campaign_id",
                  "dtype": "bigint",
                  "description": "Numeric identifier of the Facebook campaign containing the ad set."
                },
                {
                  "column_name": "daily_budget_eur",
                  "dtype": "double",
                  "description": "Daily budget for the ad set converted to euros."
                },
                {
                  "column_name": "optimization_goal",
                  "dtype": "string",
                  "description": "Optimization objective used for the ad set (e.g., conversions)."
                },
                {
                  "column_name": "adset_id",
                  "dtype": "bigint",
                  "description": "Unique numeric identifier for the Facebook ad set."
                },
                {
                  "column_name": "configured_status",
                  "dtype": "string",
                  "description": "Status as configured by the user in the ad platform."
                },
                {
                  "column_name": "daily_budget",
                  "dtype": "double",
                  "description": "Daily budget for the ad set in the account's currency."
                },
                {
                  "column_name": "status",
                  "dtype": "string",
                  "description": "Ad set status field from the ad platform indicating current state."
                },
                {
                  "column_name": "source_adset_id",
                  "dtype": "bigint",
                  "description": "Original ad set identifier if this record was derived from another ad set."
                },
                {
                  "column_name": "lifetime_budget_eur",
                  "dtype": "double",
                  "description": "Total lifetime budget for the ad set converted to euros."
                },
                {
                  "column_name": "pixel_id",
                  "dtype": "bigint",
                  "description": "Identifier of the tracking pixel associated with the ad set, if any."
                },
                {
                  "column_name": "promoted_object",
                  "dtype": "struct<pixel_id:string,custom_event_type:string>",
                  "description": "Struct with promoted object details; contains pixel_id and custom_event_type when applicable."
                },
                {
                  "column_name": "custom_event_type",
                  "dtype": "string",
                  "description": "Custom event type associated with the promoted object, if defined."
                },
                {
                  "column_name": "is_dynamic_creative",
                  "dtype": "boolean",
                  "description": "Boolean flag indicating whether dynamic creative is enabled."
                },
                {
                  "column_name": "budget_remaining",
                  "dtype": "double",
                  "description": "Remaining budget for the ad set in account currency."
                },
                {
                  "column_name": "lifetime_budget",
                  "dtype": "double",
                  "description": "Total lifetime budget for the ad set in account currency."
                },
                {
                  "column_name": "bid_amount",
                  "dtype": "bigint",
                  "description": "Manual bid amount for the ad set in platform currency units."
                },
                {
                  "column_name": "name",
                  "dtype": "string",
                  "description": "Human-readable name assigned to the ad set."
                },
                {
                  "column_name": "start_time",
                  "dtype": "timestamp",
                  "description": "Timestamp when the ad set schedule starts."
                },
                {
                  "column_name": "budget_remaining_eur",
                  "dtype": "double",
                  "description": "Remaining budget for the ad set converted to euros."
                },
                {
                  "column_name": "end_time",
                  "dtype": "timestamp",
                  "description": "Timestamp when the ad set schedule ends."
                },
                {
                  "column_name": "created_time",
                  "dtype": "timestamp",
                  "description": "Timestamp when the ad set was created in the ad platform."
                },
                {
                  "column_name": "effective_status",
                  "dtype": "string",
                  "description": "Platform-evaluated effective status of the ad set reflecting actual delivery state."
                },
                {
                  "column_name": "updated_time",
                  "dtype": "timestamp",
                  "description": "Timestamp of the most recent update to the ad set in the platform."
                }
              ]
            },
            {
              "table_name": "historized_fb_campaigns",
              "column_info": [
                {
                  "column_name": "account_id",
                  "dtype": "bigint",
                  "description": "Identifier of the advertiser account that owns the campaign."
                },
                {
                  "column_name": "lifetime_budget_eur",
                  "dtype": "double",
                  "description": "Campaign lifetime budget converted to EUR."
                },
                {
                  "column_name": "source_campaign_id",
                  "dtype": "bigint",
                  "description": "Identifier of the source campaign if this campaign was cloned or derived from another."
                },
                {
                  "column_name": "boosted_object_id",
                  "dtype": "bigint",
                  "description": "Identifier of the boosted object (e.g., post or creative) linked to the campaign."
                },
                {
                  "column_name": "lifetime_budget",
                  "dtype": "double",
                  "description": "Campaign lifetime budget in the campaign's currency."
                },
                {
                  "column_name": "start_time",
                  "dtype": "timestamp",
                  "description": "Scheduled start timestamp for the campaign."
                },
                {
                  "column_name": "buying_type",
                  "dtype": "string",
                  "description": "Method of buying used for the campaign (e.g., auction)."
                },
                {
                  "column_name": "special_ad_category",
                  "dtype": "string",
                  "description": "Special ad category classification, if applicable (e.g., housing, employment)."
                },
                {
                  "column_name": "budget_remaining_eur",
                  "dtype": "double",
                  "description": "Remaining campaign budget converted to EUR."
                },
                {
                  "column_name": "created_time",
                  "dtype": "timestamp",
                  "description": "Timestamp when the campaign record was created."
                },
                {
                  "column_name": "name",
                  "dtype": "string",
                  "description": "Human-readable campaign name provided by the advertiser."
                },
                {
                  "column_name": "updated_time",
                  "dtype": "timestamp",
                  "description": "Timestamp when the campaign record was last updated."
                },
                {
                  "column_name": "campaign_id",
                  "dtype": "bigint",
                  "description": "Unique identifier for the Facebook campaign."
                },
                {
                  "column_name": "pacing_type",
                  "dtype": "string",
                  "description": "Pacing strategy used to distribute the campaign spend over time."
                },
                {
                  "column_name": "configured_status",
                  "dtype": "string",
                  "description": "Advertiser-configured status for the campaign (e.g., active, paused)."
                },
                {
                  "column_name": "can_use_spend_cap",
                  "dtype": "boolean",
                  "description": "Boolean indicating whether a spend cap can be applied to the campaign."
                },
                {
                  "column_name": "daily_budget",
                  "dtype": "double",
                  "description": "Daily budget for the campaign in the campaign's currency."
                },
                {
                  "column_name": "status",
                  "dtype": "string",
                  "description": "Current status string for the campaign."
                },
                {
                  "column_name": "daily_budget_eur",
                  "dtype": "double",
                  "description": "Daily budget converted to EUR."
                },
                {
                  "column_name": "adlabels",
                  "dtype": "array<struct<id:string,name:string>>",
                  "description": "Array of ad label structs (id and name) associated with the campaign."
                },
                {
                  "column_name": "can_create_brand_lift_study",
                  "dtype": "boolean",
                  "description": "Boolean indicating eligibility to create a brand lift study for this campaign."
                },
                {
                  "column_name": "end_time",
                  "dtype": "timestamp",
                  "description": "Scheduled end timestamp for the campaign."
                },
                {
                  "column_name": "objective",
                  "dtype": "string",
                  "description": "Advertising objective of the campaign (e.g., conversions, traffic)."
                },
                {
                  "column_name": "budget_remaining",
                  "dtype": "double",
                  "description": "Remaining campaign budget in the campaign's currency."
                },
                {
                  "column_name": "effective_status",
                  "dtype": "string",
                  "description": "Facebook's computed effective status for the campaign."
                },
                {
                  "column_name": "bid_strategy",
                  "dtype": "string",
                  "description": "Bidding strategy configured for the campaign."
                },
                {
                  "column_name": "budget_rebalance_flag",
                  "dtype": "boolean",
                  "description": "Boolean flag indicating whether budget rebalancing is enabled for the campaign."
                }
              ]
            },
            {
              "table_name": "historized_fb_creatives",
              "column_info": [
                {
                  "column_name": "video_data",
                  "dtype": "struct<image_hash:string,link_description:string,message:string,title:string,video_id:string,call_to_action:struct<type:string,value:struct<link:string,link_caption:string>>>",
                  "description": "Structured video metadata including video_id, title, message and call-to-action details."
                },
                {
                  "column_name": "link_data",
                  "dtype": "struct<link:string,message:string,name:string,caption:string,attachment_style:string,description:string,image_hash:string,multi_share_end_card:string,multi_share_optimized:string,call_to_action:struct<type:string>>",
                  "description": "Structured link metadata including link, message, name, caption, description and call-to-action."
                },
                {
                  "column_name": "title",
                  "dtype": "string",
                  "description": "Title of the creative, when provided."
                },
                {
                  "column_name": "creative_id",
                  "dtype": "bigint",
                  "description": "Unique identifier for the creative (Facebook/Instagram)."
                },
                {
                  "column_name": "account_id",
                  "dtype": "bigint",
                  "description": "Advertiser account identifier associated with the creative."
                },
                {
                  "column_name": "body",
                  "dtype": "string",
                  "description": "Main text or message content of the creative."
                },
                {
                  "column_name": "linked_domain",
                  "dtype": "string",
                  "description": "Domain extracted from the creative's destination link."
                },
                {
                  "column_name": "object_type",
                  "dtype": "string",
                  "description": "Type of the creative object (for example: link, photo, video)."
                },
                {
                  "column_name": "instagram_actor_id",
                  "dtype": "string",
                  "description": "Instagram actor (user) identifier linked to the creative; may identify an individual."
                },
                {
                  "column_name": "name",
                  "dtype": "string",
                  "description": "Display name of the creative or associated asset."
                },
                {
                  "column_name": "page_id",
                  "dtype": "string",
                  "description": "Identifier of the Facebook Page associated with the creative."
                }
              ]
            },
            {
              "table_name": "historized_googleads_adgroups",
              "column_info": [
                {
                  "column_name": "bidding_strategy_id",
                  "dtype": "bigint",
                  "description": "Identifier of the bidding strategy applied to the ad group."
                },
                {
                  "column_name": "url_customer_parameters",
                  "dtype": "string",
                  "description": "Customer-level URL parameters appended to final URLs for this ad group."
                },
                {
                  "column_name": "tracking_url_template",
                  "dtype": "string",
                  "description": "Template URL used for click tracking with dynamic parameters."
                },
                {
                  "column_name": "adgroup_id",
                  "dtype": "bigint",
                  "description": "Unique identifier for the Google Ads ad group."
                },
                {
                  "column_name": "settings",
                  "dtype": "string",
                  "description": "Serialized settings or configuration for the ad group (e.g., targeting, bidding)."
                },
                {
                  "column_name": "ad_group_type",
                  "dtype": "string",
                  "description": "Type or subtype of the ad group (e.g., search, display, or custom)."
                },
                {
                  "column_name": "customer_id",
                  "dtype": "bigint",
                  "description": "Identifier of the Google Ads customer (account) owning the ad group."
                },
                {
                  "column_name": "name",
                  "dtype": "string",
                  "description": "Display name of the ad group."
                },
                {
                  "column_name": "final_url_suffix",
                  "dtype": "string",
                  "description": "Suffix appended to landing page URLs for tracking parameters."
                },
                {
                  "column_name": "labels",
                  "dtype": "string",
                  "description": "Labels or tags assigned to the ad group, typically stored as a comma-separated string."
                },
                {
                  "column_name": "campaign_id",
                  "dtype": "bigint",
                  "description": "Identifier of the campaign that contains the ad group."
                }
              ]
            },
            {
              "table_name": "historized_googleads_ads",
              "column_info": [
                {
                  "column_name": "ad_id",
                  "dtype": "bigint",
                  "description": "Unique numeric identifier for the ad creative."
                },
                {
                  "column_name": "customer_id",
                  "dtype": "bigint",
                  "description": "Numeric identifier of the Google Ads customer (account) associated with the ad; treated as PII for account-level identification."
                },
                {
                  "column_name": "creative_tracking_url_template",
                  "dtype": "string",
                  "description": "Template used to generate tracking URLs for ad clicks and redirects."
                },
                {
                  "column_name": "type",
                  "dtype": "string",
                  "description": "Ad format or subtype (for example, responsive or expanded text)."
                },
                {
                  "column_name": "adgroup_id",
                  "dtype": "bigint",
                  "description": "Identifier of the ad group that contains the ad."
                },
                {
                  "column_name": "status",
                  "dtype": "string",
                  "description": "Serving status of the ad (e.g., ENABLED, PAUSED, REMOVED)."
                },
                {
                  "column_name": "display_url",
                  "dtype": "string",
                  "description": "Advertiser display URL shown in the ad creative."
                },
                {
                  "column_name": "labels",
                  "dtype": "string",
                  "description": "Comma-separated labels or tags applied to the ad for organization or filtering."
                },
                {
                  "column_name": "campaign_id",
                  "dtype": "bigint",
                  "description": "Numeric identifier of the Google Ads campaign that contains the ad."
                },
                {
                  "column_name": "url",
                  "dtype": "string",
                  "description": "Final landing page URL associated with the ad."
                }
              ]
            },
            {
              "table_name": "historized_googleads_budgets",
              "column_info": [
                {
                  "column_name": "micro_amount",
                  "dtype": "bigint",
                  "description": "Budget value expressed in micro-units of the account currency (typically micros)."
                },
                {
                  "column_name": "status",
                  "dtype": "string",
                  "description": "Current status of the budget (e.g., ENABLED, PAUSED, REMOVED)."
                },
                {
                  "column_name": "is_explicitly_shared",
                  "dtype": "boolean",
                  "description": "Boolean indicating whether this budget is explicitly shared across accounts or entities."
                },
                {
                  "column_name": "amount",
                  "dtype": "bigint",
                  "description": "Budget amount in major currency units or a normalized integer representation."
                },
                {
                  "column_name": "id",
                  "dtype": "bigint",
                  "description": "Unique identifier for the Google Ads budget record."
                },
                {
                  "column_name": "name",
                  "dtype": "string",
                  "description": "Display name of the budget as defined in Google Ads."
                },
                {
                  "column_name": "reference_count",
                  "dtype": "int",
                  "description": "Number of entities (for example campaigns) referencing this budget."
                },
                {
                  "column_name": "delivery_method",
                  "dtype": "string",
                  "description": "Method used to deliver or pace the budget (e.g., STANDARD or ACCELERATED)."
                }
              ]
            },
            {
              "table_name": "historized_googleads_campaigns",
              "column_info": [
                {
                  "column_name": "ad_service_optimization_status",
                  "dtype": "string",
                  "description": "Optimization status used by ad services to adjust campaign delivery."
                },
                {
                  "column_name": "customer_id",
                  "dtype": "bigint",
                  "description": "Google Ads customer account ID associated with the campaign."
                },
                {
                  "column_name": "end_date",
                  "dtype": "string",
                  "description": "Campaign end date in YYYY-MM-DD format or empty if the campaign is ongoing."
                },
                {
                  "column_name": "tracking_url_template",
                  "dtype": "string",
                  "description": "Template URL for tracking parameters appended to ad landing pages."
                },
                {
                  "column_name": "final_url_suffix",
                  "dtype": "string",
                  "description": "Suffix appended to final URLs for tracking purposes."
                },
                {
                  "column_name": "advertising_channel_sub_type",
                  "dtype": "string",
                  "description": "More specific sub-type of the advertising channel."
                },
                {
                  "column_name": "campaign_id",
                  "dtype": "bigint",
                  "description": "Numeric identifier of the campaign within the Google Ads account."
                },
                {
                  "column_name": "name",
                  "dtype": "string",
                  "description": "Campaign name as configured in Google Ads."
                },
                {
                  "column_name": "budget_name",
                  "dtype": "string",
                  "description": "Name of the budget resource associated with the campaign."
                },
                {
                  "column_name": "status",
                  "dtype": "string",
                  "description": "Entity status of the campaign (e.g., ENABLED, PAUSED, REMOVED)."
                },
                {
                  "column_name": "labels",
                  "dtype": "string",
                  "description": "Labels or tags assigned to the campaign, typically comma-separated."
                },
                {
                  "column_name": "serving_status",
                  "dtype": "string",
                  "description": "Current serving status indicating whether ads from the campaign are being served."
                },
                {
                  "column_name": "budget_id",
                  "dtype": "bigint",
                  "description": "Numeric identifier of the budget linked to the campaign."
                },
                {
                  "column_name": "bidding_strategy_id",
                  "dtype": "bigint",
                  "description": "Identifier of the bidding strategy applied to the campaign."
                },
                {
                  "column_name": "advertising_channel_type",
                  "dtype": "string",
                  "description": "Primary advertising channel for the campaign (e.g., SEARCH, DISPLAY)."
                },
                {
                  "column_name": "start_date",
                  "dtype": "string",
                  "description": "Campaign start date in YYYY-MM-DD format."
                }
              ]
            },
            {
              "table_name": "historized_googleads_managed_customers",
              "column_info": [
                {
                  "column_name": "is_archived",
                  "dtype": "boolean",
                  "description": "Boolean flag indicating if the managed customer account is archived."
                },
                {
                  "column_name": "customer_id",
                  "dtype": "bigint",
                  "description": "Numeric Google Ads customer account identifier."
                },
                {
                  "column_name": "can_manage_clients",
                  "dtype": "boolean",
                  "description": "Flag indicating whether this manager account can manage client accounts."
                },
                {
                  "column_name": "name",
                  "dtype": "string",
                  "description": "Display name of the managed customer account."
                },
                {
                  "column_name": "labels",
                  "dtype": "string",
                  "description": "Delimited labels or tags applied to the account."
                }
              ]
            },
            {
              "table_name": "historized_post_mortem",
              "column_info": [
                {
                  "column_name": "title",
                  "dtype": "string",
                  "description": "Short title or summary of the post-mortem."
                },
                {
                  "column_name": "severity_level",
                  "dtype": "string",
                  "description": "Severity level assigned to the incident (e.g., low, medium, high)."
                },
                {
                  "column_name": "root_cause_category",
                  "dtype": "string",
                  "description": "Categorized root cause of the incident."
                },
                {
                  "column_name": "date",
                  "dtype": "date",
                  "description": "Date when the post-mortem was recorded."
                },
                {
                  "column_name": "status",
                  "dtype": "string",
                  "description": "Current status of the post-mortem record (e.g., open, closed, resolved)."
                },
                {
                  "column_name": "affected_systems",
                  "dtype": "string",
                  "description": "Systems or services impacted by the incident."
                }
              ]
            },
            {
              "table_name": "historized_triple_a_partner_connection",
              "column_info": [
                {
                  "column_name": "publisher_id",
                  "dtype": "bigint",
                  "description": "Unique identifier for the publisher (person or entity)."
                },
                {
                  "column_name": "optional_cookietime_clickaction_mode",
                  "dtype": "string",
                  "description": "Optional mode for click action cookie time when provided."
                },
                {
                  "column_name": "publisher_prename",
                  "dtype": "string",
                  "description": "Publisher's given or first name."
                },
                {
                  "column_name": "project_url",
                  "dtype": "string",
                  "description": "URL for the project or campaign landing page."
                },
                {
                  "column_name": "connection_last_change_time",
                  "dtype": "timestamp",
                  "description": "Timestamp of the most recent update to the connection record."
                },
                {
                  "column_name": "connection_status",
                  "dtype": "string",
                  "description": "Current status of the partner connection (e.g., active, paused, inactive)."
                },
                {
                  "column_name": "optional_cookietime_postviewaction",
                  "dtype": "string",
                  "description": "Optional cookie time value used for post-view actions when specified."
                },
                {
                  "column_name": "campaign_cookietime_clickaction_mode",
                  "dtype": "string",
                  "description": "Mode or classification for campaign click cookie time behavior."
                },
                {
                  "column_name": "channel_title",
                  "dtype": "string",
                  "description": "Human-readable name of the channel associated with the publisher."
                },
                {
                  "column_name": "campaign_cookietime_postviewaction",
                  "dtype": "string",
                  "description": "Cookie time configuration for campaign post-view actions."
                },
                {
                  "column_name": "campaign_cookietime_clickaction",
                  "dtype": "string",
                  "description": "Cookie time configuration for campaign click actions."
                },
                {
                  "column_name": "optional_cookietime_postviewaction_mode",
                  "dtype": "string",
                  "description": "Optional mode for post-view cookie time behavior when provided."
                },
                {
                  "column_name": "channel_id",
                  "dtype": "bigint",
                  "description": "Identifier for the channel associated with the publisher."
                },
                {
                  "column_name": "commission_group_id",
                  "dtype": "bigint",
                  "description": "Identifier for the commission group associated with the connection."
                },
                {
                  "column_name": "postview",
                  "dtype": "string",
                  "description": "Indicator or setting related to post-view attribution behavior."
                },
                {
                  "column_name": "commission_group_title",
                  "dtype": "string",
                  "description": "Human-readable name of the commission group."
                },
                {
                  "column_name": "trackingcode",
                  "dtype": "string",
                  "description": "Tracking code used for attribution and analytics."
                },
                {
                  "column_name": "campaign_cookietime_postviewaction_mode",
                  "dtype": "string",
                  "description": "Mode or classification for campaign post-view cookie time behavior."
                },
                {
                  "column_name": "campaign_title",
                  "dtype": "string",
                  "description": "Title or name of the campaign."
                },
                {
                  "column_name": "project_title",
                  "dtype": "string",
                  "description": "Display title of the project."
                },
                {
                  "column_name": "campaign_id",
                  "dtype": "bigint",
                  "description": "Unique identifier for the campaign."
                },
                {
                  "column_name": "project_id",
                  "dtype": "bigint",
                  "description": "Unique identifier of the project or campaign grouping."
                },
                {
                  "column_name": "connection_last_insert_time",
                  "dtype": "timestamp",
                  "description": "Timestamp when the connection record was last inserted into the table."
                },
                {
                  "column_name": "optional_cookietime_clickaction",
                  "dtype": "string",
                  "description": "Optional cookie time value for click actions when provided."
                },
                {
                  "column_name": "publisher_surname",
                  "dtype": "string",
                  "description": "Publisher's family or last name."
                }
              ]
            },
            {
              "table_name": "historized_vendor_payment_status",
              "column_info": [
                {
                  "column_name": "debitor_number",
                  "dtype": "string",
                  "description": "Debtor identifier associated with the vendor, such as a customer or account number."
                },
                {
                  "column_name": "uuids",
                  "dtype": "array<string>",
                  "description": "Array of related UUIDs (for example invoice or payment identifiers) associated with this record."
                },
                {
                  "column_name": "vendor_uuid",
                  "dtype": "string",
                  "description": "Unique vendor identifier (UUID) used to link vendor records across systems."
                },
                {
                  "column_name": "fetched_at",
                  "dtype": "timestamp",
                  "description": "Timestamp when this snapshot of the vendor payment status was fetched or recorded."
                },
                {
                  "column_name": "unpaid_sum",
                  "dtype": "double",
                  "description": "Total unpaid amount recorded for the vendor at the snapshot time, expressed in the system currency."
                }
              ]
            },
            {
              "table_name": "lead_bought",
              "column_info": [
                {
                  "column_name": "affiliated_group_uuid",
                  "dtype": "string",
                  "description": "UUID of the affiliated group associated with the lead."
                },
                {
                  "column_name": "installation_contact",
                  "dtype": "struct<salutation:string,company_name:string,postal_code:string,city:string,country_code:string,email:string,email_normalized:string>",
                  "description": "Structured installation contact details including postal info and emails; contains personal contact data."
                },
                {
                  "column_name": "event_kafka_timestamp",
                  "dtype": "timestamp",
                  "description": "Timestamp when the event was ingested into Kafka."
                },
                {
                  "column_name": "offer_contact",
                  "dtype": "struct<salutation:string,company_name:string,postal_code:string,city:string,country_code:string>",
                  "description": "Structured offer contact details (salutation, company name, postal code, city, country); may contain contact-related personal or company data."
                },
                {
                  "column_name": "vendor_uuid",
                  "dtype": "string",
                  "description": "UUID of the vendor that provided the lead."
                },
                {
                  "column_name": "assignment_term_id",
                  "dtype": "int",
                  "description": "Identifier for the assignment term applied to the lead."
                },
                {
                  "column_name": "fake",
                  "dtype": "boolean",
                  "description": "Boolean flag indicating whether the record is synthetic or a test."
                },
                {
                  "column_name": "_meta",
                  "dtype": "struct<event_uuid:string,event_time:string,application:string,origin:string,experiments:array<struct<id:string,variant:string>>,client_info:struct<asn:string,country:string,region:string,city:string,postal_code:string,latitude:string,longitude:string,ja4_fingerprint:string,is_desktop_viewer:boolean,is_mobile_viewer:boolean,is_smarttv_viewer:boolean,is_tablet_viewer:boolean,is_android_viewer:boolean,is_ios_viewer:boolean>,user:struct<uuid:string,roles:array<string>>>",
                  "description": "Event metadata containing event identifiers, client location info and user identifiers; may include PII-like location and user UUIDs."
                },
                {
                  "column_name": "event_timestamp",
                  "dtype": "timestamp",
                  "description": "Timestamp representing when the event occurred."
                },
                {
                  "column_name": "product_request_uuid",
                  "dtype": "string",
                  "description": "UUID for the product request tied to this lead."
                },
                {
                  "column_name": "product_request_group_number",
                  "dtype": "int",
                  "description": "Group number used to organize related product requests."
                },
                {
                  "column_name": "product_request_id",
                  "dtype": "int",
                  "description": "Numeric identifier for the related product request."
                },
                {
                  "column_name": "event_uuid",
                  "dtype": "string",
                  "description": "Unique identifier for the event instance."
                },
                {
                  "column_name": "lead_id",
                  "dtype": "int",
                  "description": "Internal numeric identifier for the lead record."
                },
                {
                  "column_name": "product_uuid",
                  "dtype": "string",
                  "description": "UUID identifying the product associated with the lead."
                },
                {
                  "column_name": "matching_method",
                  "dtype": "string",
                  "description": "Method used to match this lead with buyers or offers."
                },
                {
                  "column_name": "price",
                  "dtype": "struct<amount:string,currency:string,euro_equivalent:string>",
                  "description": "Structured price information containing amount, currency and euro equivalent."
                }
              ]
            },
            {
              "table_name": "lead_vendor_status_changed",
              "column_info": [
                {
                  "column_name": "lead_id",
                  "dtype": "bigint",
                  "description": "Identifier of the lead affected by the status change; typically maps to a lead record in CRM."
                },
                {
                  "column_name": "event_kafka_timestamp",
                  "dtype": "timestamp",
                  "description": "Timestamp when the event was produced to Kafka."
                },
                {
                  "column_name": "event_uuid",
                  "dtype": "string",
                  "description": "Unique identifier for the status-change event."
                },
                {
                  "column_name": "comment",
                  "dtype": "string",
                  "description": "Optional free-text comment about the status change; may contain personal or sensitive information."
                },
                {
                  "column_name": "_meta",
                  "dtype": "struct<event_uuid:string,event_time:string,application:string,origin:string,experiments:array<struct<id:string,variant:string>>,client_info:struct<asn:string,country:string,region:string,city:string,postal_code:string,latitude:string,longitude:string,ja4_fingerprint:string,is_desktop_viewer:boolean,is_mobile_viewer:boolean,is_smarttv_viewer:boolean,is_tablet_viewer:boolean,is_android_viewer:boolean,is_ios_viewer:boolean>,user:struct<uuid:string,roles:array<string>>>",
                  "description": "Structured event metadata (application, origin, client_info, experiments, user) that may include user identifiers and location or device data."
                },
                {
                  "column_name": "vendor_ids",
                  "dtype": "array<bigint>",
                  "description": "Array of vendor identifiers associated with the lead after the change."
                },
                {
                  "column_name": "extra_note_time",
                  "dtype": "timestamp",
                  "description": "Timestamp for any additional note attached to the vendor status change."
                },
                {
                  "column_name": "status",
                  "dtype": "string",
                  "description": "New vendor status for the lead (e.g., assigned, unassigned, active, inactive)."
                },
                {
                  "column_name": "event_timestamp",
                  "dtype": "timestamp",
                  "description": "Canonical timestamp indicating when the status change event occurred."
                }
              ]
            },
            {
              "table_name": "marketing_double_opt_in_confirmed",
              "column_info": [
                {
                  "column_name": "email",
                  "dtype": "string",
                  "description": "Subscriber email address confirmed via double opt-in."
                },
                {
                  "column_name": "event_timestamp",
                  "dtype": "timestamp",
                  "description": "Original client-side timestamp when the event/action occurred."
                },
                {
                  "column_name": "visitor_id",
                  "dtype": "string",
                  "description": "Identifier for the visitor or session used for tracking; may be pseudonymous but can be linked to an individual."
                },
                {
                  "column_name": "event_uuid",
                  "dtype": "string",
                  "description": "Unique identifier for this event record."
                },
                {
                  "column_name": "registration_trigger",
                  "dtype": "string",
                  "description": "Source or trigger that initiated the registration or double-opt-in flow (e.g., signup button, campaign)."
                },
                {
                  "column_name": "landing_page_url",
                  "dtype": "string",
                  "description": "URL of the landing page associated with the opt-in event."
                },
                {
                  "column_name": "target_group",
                  "dtype": "string",
                  "description": "Marketing segmentation or audience label associated with the event."
                },
                {
                  "column_name": "after_doi_url",
                  "dtype": "string",
                  "description": "URL visited immediately after the user completed the double opt-in confirmation."
                },
                {
                  "column_name": "product_uuid",
                  "dtype": "string",
                  "description": "Identifier for the product related to the opt-in event."
                },
                {
                  "column_name": "event_kafka_timestamp",
                  "dtype": "timestamp",
                  "description": "Timestamp when the event was ingested/published to Kafka."
                },
                {
                  "column_name": "consent_type",
                  "dtype": "string",
                  "description": "Channel or type of consent provided (e.g., email, sms)."
                },
                {
                  "column_name": "_meta",
                  "dtype": "struct<event_uuid:string,event_time:string,application:string,origin:string,experiments:array<struct<id:string,variant:string>>,client_info:struct<asn:string,country:string,region:string,city:string,postal_code:string,latitude:string,longitude:string,ja4_fingerprint:string,is_desktop_viewer:boolean,is_mobile_viewer:boolean,is_smarttv_viewer:boolean,is_tablet_viewer:boolean,is_android_viewer:boolean,is_ios_viewer:boolean>,user:struct<uuid:string,roles:array<string>>>",
                  "description": "Nested event metadata containing event identifiers, client_info (location, device flags), experiments, and user details; contains PII in user.uuid and location fields."
                }
              ]
            },
            {
              "table_name": "member_phone_number_changed",
              "column_info": [
                {
                  "column_name": "event_timestamp",
                  "dtype": "timestamp",
                  "description": "Timestamp when the phone-change event occurred in the source system."
                },
                {
                  "column_name": "action",
                  "dtype": "string",
                  "description": "Type of action performed or event name (e.g., 'phone_number_changed')."
                },
                {
                  "column_name": "event_kafka_timestamp",
                  "dtype": "timestamp",
                  "description": "Timestamp when the event message was produced to Kafka."
                },
                {
                  "column_name": "id",
                  "dtype": "string",
                  "description": "Identifier for the member or the phone-change record; may represent a user ID or phone-related identifier."
                },
                {
                  "column_name": "user_data",
                  "dtype": "struct<uuid:string,roles:array<string>>",
                  "description": "Structured user information including UUID and roles; contains personally identifiable user identifier(s)."
                },
                {
                  "column_name": "event_uuid",
                  "dtype": "string",
                  "description": "Unique identifier for this event record."
                },
                {
                  "column_name": "_meta",
                  "dtype": "struct<event_uuid:string,event_time:string,application:string,origin:string,experiments:array<struct<id:string,variant:string>>,client_info:struct<asn:string,country:string,region:string,city:string,postal_code:string,latitude:string,longitude:string,ja4_fingerprint:string,is_desktop_viewer:boolean,is_mobile_viewer:boolean,is_smarttv_viewer:boolean,is_tablet_viewer:boolean,is_android_viewer:boolean,is_ios_viewer:boolean>,user:struct<uuid:string,roles:array<string>>>",
                  "description": "Nested event metadata including event id, client_info (location, device flags) and nested user identifiers; may contain PII like location and user UUIDs."
                }
              ]
            },
            {
              "table_name": "member_service_request_connected",
              "column_info": [
                {
                  "column_name": "event_kafka_timestamp",
                  "dtype": "timestamp",
                  "description": "Timestamp when the event was produced to Kafka."
                },
                {
                  "column_name": "event_timestamp",
                  "dtype": "timestamp",
                  "description": "Timestamp when the event occurred."
                },
                {
                  "column_name": "service_request_uuid",
                  "dtype": "string",
                  "description": "Unique identifier for the service request."
                },
                {
                  "column_name": "event_uuid",
                  "dtype": "string",
                  "description": "Unique identifier for the event instance."
                },
                {
                  "column_name": "service_request_group_number",
                  "dtype": "bigint",
                  "description": "Numeric identifier that groups related service requests."
                },
                {
                  "column_name": "_meta",
                  "dtype": "struct<event_uuid:string,event_time:string,application:string,origin:string,experiments:array<struct<id:string,variant:string>>,client_info:struct<asn:string,country:string,region:string,city:string,postal_code:string,latitude:string,longitude:string,ja4_fingerprint:string,is_desktop_viewer:boolean,is_mobile_viewer:boolean,is_smarttv_viewer:boolean,is_tablet_viewer:boolean,is_android_viewer:boolean,is_ios_viewer:boolean>,user:struct<uuid:string,roles:array<string>>>",
                  "description": "Nested event metadata containing event IDs, application origin, client_info (geo and device details), experiments and embedded user details; may include PII such as location and user id."
                },
                {
                  "column_name": "user_data",
                  "dtype": "struct<uuid:string,roles:array<string>>",
                  "description": "Nested user information containing uuid and roles; the uuid can identify a user and is considered PII."
                }
              ]
            },
            {
              "table_name": "nested_nulls",
              "column_info": [
                {
                  "column_name": "name",
                  "dtype": "varchar(13)",
                  "description": "Customer or record name; may contain full or partial personal names used to identify an individual."
                },
                {
                  "column_name": "_meta",
                  "dtype": "struct<customer_info:struct<email:string,address:struct<city:string,zip_code:string>>>",
                  "description": "Nested metadata object containing customer_info such as email and address (city and zip_code), which include contact and location details."
                }
              ]
            },
            {
              "table_name": "newsletter_registration_submitted",
              "column_info": [
                {
                  "column_name": "_meta",
                  "dtype": "struct<event_uuid:string,event_time:string,application:string,origin:string,experiments:array<struct<id:string,variant:string>>,client_info:struct<asn:string,country:string,region:string,city:string,postal_code:string,latitude:string,longitude:string,ja4_fingerprint:string,is_desktop_viewer:boolean,is_mobile_viewer:boolean,is_smarttv_viewer:boolean,is_tablet_viewer:boolean,is_android_viewer:boolean,is_ios_viewer:boolean>,user:struct<uuid:string,roles:array<string>>>",
                  "description": "Event metadata including event UUID, time, client_info (location, ASN) and user UUID; may include identifiable location and user identifiers."
                },
                {
                  "column_name": "page",
                  "dtype": "struct<url:string,referer:string,type:string,language_code:string,country_code:string,product_id:string,ref:string,source:string>",
                  "description": "Page metadata including URL, referer, language, country and product context."
                },
                {
                  "column_name": "device",
                  "dtype": "struct<user_agent:string,screen_width:int,screen_height:int,viewport_width:int,viewport_height:int,is_touch:boolean,connection_type:string,language_code:string>",
                  "description": "Device information such as user agent, screen and viewport dimensions, touch capability and connection type."
                },
                {
                  "column_name": "visitor_id",
                  "dtype": "string",
                  "description": "Visitor identifier used to track the user across sessions (e.g., cookie or fingerprint)."
                },
                {
                  "column_name": "registration_trigger",
                  "dtype": "string",
                  "description": "How the newsletter registration was triggered (e.g., form submission, CTA click)."
                },
                {
                  "column_name": "event_kafka_timestamp",
                  "dtype": "timestamp",
                  "description": "Kafka ingestion timestamp indicating when the event entered the streaming system."
                },
                {
                  "column_name": "is_internal",
                  "dtype": "boolean",
                  "description": "Flag indicating whether the event originated from an internal user or test environment."
                },
                {
                  "column_name": "event_timestamp",
                  "dtype": "timestamp",
                  "description": "Timestamp when the event was recorded by the processing system."
                },
                {
                  "column_name": "client_timestamp",
                  "dtype": "timestamp",
                  "description": "Timestamp from the client device when the event occurred."
                },
                {
                  "column_name": "google_analytics",
                  "dtype": "struct<_ga:string,_gid:string>",
                  "description": "Google Analytics identifiers (_ga, _gid) associated with the visitor session."
                },
                {
                  "column_name": "event_uuid",
                  "dtype": "string",
                  "description": "Unique identifier for the event."
                },
                {
                  "column_name": "cms_data",
                  "dtype": "struct<experiment_id:int,variant_id:int,page_id:int,revision_id:int,targeting_preset_id:int,url_node_id:int,root_node_id:int,form_id:int,experiments:array<struct<id:string,name:string,version_id:string,version_name:string>>,variants:array<struct<id:string,name:string,version_id:string,version_name:string>>>",
                  "description": "CMS metadata for experiments, variants and related page/form identifiers tied to the registration."
                }
              ]
            },
            {
              "table_name": "page_view",
              "column_info": [
                {
                  "column_name": "page_session_identifier",
                  "dtype": "string",
                  "description": "Identifier for the user's page session used to group related events."
                },
                {
                  "column_name": "cockpit_data",
                  "dtype": "struct<vendor_uuid:string,modified_user_role:string>",
                  "description": "Vendor-related metadata such as vendor UUID and modified user role."
                },
                {
                  "column_name": "user_data",
                  "dtype": "struct<uuid:string,roles:array<string>>",
                  "description": "Structured user information (e.g., uuid and roles); contains user identifiers."
                },
                {
                  "column_name": "event_uuid",
                  "dtype": "string",
                  "description": "Unique identifier for the event record."
                },
                {
                  "column_name": "facebook_meta",
                  "dtype": "struct<_fbp:string>",
                  "description": "Facebook tracking identifier data (e.g., _fbp) used for analytics and user tracking."
                },
                {
                  "column_name": "visitor_id",
                  "dtype": "string",
                  "description": "Identifier for the visitor used to correlate behavior across sessions and events."
                },
                {
                  "column_name": "device",
                  "dtype": "struct<user_agent:string,screen_width:int,screen_height:int,viewport_width:int,viewport_height:int,is_touch:boolean,connection_type:string,language_code:string>",
                  "description": "Device and browser information including user agent, screen and viewport dimensions, touch capability and language code."
                },
                {
                  "column_name": "is_internal",
                  "dtype": "boolean",
                  "description": "Boolean flag indicating whether the page view originated from internal traffic."
                },
                {
                  "column_name": "_meta",
                  "dtype": "struct<event_uuid:string,event_time:string,application:string,origin:string,experiments:array<struct<id:string,variant:string>>,client_info:struct<asn:string,country:string,region:string,city:string,postal_code:string,latitude:string,longitude:string,ja4_fingerprint:string,is_desktop_viewer:boolean,is_mobile_viewer:boolean,is_smarttv_viewer:boolean,is_tablet_viewer:boolean,is_android_viewer:boolean,is_ios_viewer:boolean>,user:struct<uuid:string,roles:array<string>>>",
                  "description": "Event metadata (UUID, time, origin), client geo/fingerprint, experiments and user struct; may contain identifying fields."
                },
                {
                  "column_name": "page",
                  "dtype": "struct<url:string,referer:string,type:string,language_code:string,country_code:string,product_id:string,ref:string,source:string>",
                  "description": "Structured page metadata including URL, referrer, page type, language and country codes, and product/source identifiers."
                },
                {
                  "column_name": "event_kafka_timestamp",
                  "dtype": "timestamp",
                  "description": "Ingestion timestamp when the event entered the Kafka or streaming pipeline."
                },
                {
                  "column_name": "google_analytics",
                  "dtype": "struct<_ga:string,_gid:string>",
                  "description": "Google Analytics cookie identifiers (e.g., _ga, _gid) associated with the visitor."
                },
                {
                  "column_name": "visibility",
                  "dtype": "string",
                  "description": "Visibility state of the page (for example: visible or hidden)."
                },
                {
                  "column_name": "cms_data",
                  "dtype": "struct<experiment_id:int,variant_id:int,page_id:int,revision_id:int,targeting_preset_id:int,url_node_id:int,root_node_id:int,form_id:int,experiments:array<struct<id:string,name:string,version_id:string,version_name:string>>,variants:array<struct<id:string,name:string,version_id:string,version_name:string>>>",
                  "description": "Content management and experimentation metadata such as experiment and variant IDs, page and revision identifiers."
                },
                {
                  "column_name": "client_timestamp",
                  "dtype": "timestamp",
                  "description": "Timestamp provided by the client when the event was recorded."
                },
                {
                  "column_name": "event_timestamp",
                  "dtype": "timestamp",
                  "description": "Timestamp indicating when the event occurred on the client device."
                },
                {
                  "column_name": "expected_duration",
                  "dtype": "bigint",
                  "description": "Estimated duration (milliseconds) for the page view or interaction."
                }
              ]
            },
            {
              "table_name": "partner_registration_submitted",
              "column_info": [
                {
                  "column_name": "device",
                  "dtype": "struct<user_agent:string,screen_width:int,screen_height:int,viewport_width:int,viewport_height:int,is_touch:boolean,connection_type:string,language_code:string>",
                  "description": "Struct with device details and user agent information which may be used for device fingerprinting."
                },
                {
                  "column_name": "_meta",
                  "dtype": "struct<event_uuid:string,event_time:string,application:string,origin:string,experiments:array<struct<id:string,variant:string>>,client_info:struct<asn:string,country:string,region:string,city:string,postal_code:string,latitude:string,longitude:string,ja4_fingerprint:string,is_desktop_viewer:boolean,is_mobile_viewer:boolean,is_smarttv_viewer:boolean,is_tablet_viewer:boolean,is_android_viewer:boolean,is_ios_viewer:boolean>,user:struct<uuid:string,roles:array<string>>>",
                  "description": "Event metadata including client geolocation, fingerprint and user uuid/roles; may contain personal or device-identifying information."
                },
                {
                  "column_name": "salesforce_reference_uuid",
                  "dtype": "string",
                  "description": "UUID linking this record to a Salesforce object or workflow for reconciliation."
                },
                {
                  "column_name": "visitor_id",
                  "dtype": "string",
                  "description": "Identifier for the visitor or browser session (e.g., cookie or tracking ID)."
                },
                {
                  "column_name": "event_timestamp",
                  "dtype": "timestamp",
                  "description": "Canonical timestamp indicating when the event occurred in the system."
                },
                {
                  "column_name": "is_internal",
                  "dtype": "boolean",
                  "description": "Boolean flag indicating whether the event originated from an internal user or system."
                },
                {
                  "column_name": "client_timestamp",
                  "dtype": "timestamp",
                  "description": "Timestamp recorded by the client at the time the event was generated."
                },
                {
                  "column_name": "google_analytics",
                  "dtype": "struct<_ga:string,_gid:string>",
                  "description": "Struct containing Google Analytics identifiers (e.g., _ga, _gid) used for tracking."
                },
                {
                  "column_name": "event_kafka_timestamp",
                  "dtype": "timestamp",
                  "description": "Timestamp when the event was published to or processed by Kafka."
                },
                {
                  "column_name": "radius",
                  "dtype": "string",
                  "description": "Selected radius value (for search or filtering) provided by the user."
                },
                {
                  "column_name": "page",
                  "dtype": "struct<url:string,referer:string,type:string,language_code:string,country_code:string,product_id:string,ref:string,source:string>",
                  "description": "Struct with page-level metadata such as URL, referrer, language and country codes."
                },
                {
                  "column_name": "is_eligible_for_self_contract",
                  "dtype": "boolean",
                  "description": "Boolean flag indicating if the partner is eligible for a self-service contract."
                },
                {
                  "column_name": "product_ids",
                  "dtype": "array<string>",
                  "description": "Array of product identifier strings selected during registration."
                },
                {
                  "column_name": "event_uuid",
                  "dtype": "string",
                  "description": "Unique identifier for the captured event."
                },
                {
                  "column_name": "contacts",
                  "dtype": "struct<international_area_code:string,company:string,email:string,city:string,zip_code:string,gender:string,hidden_spam_detection_field:string,callback_time:string,comment:string,language_code:string,country_code:string,email_normalized:string>",
                  "description": "Struct containing submitted contact information such as email, company, city, zip code and comments."
                },
                {
                  "column_name": "free_text_products",
                  "dtype": "array<string>",
                  "description": "Array of free-text product descriptions entered by the user during registration."
                },
                {
                  "column_name": "cms_data",
                  "dtype": "struct<experiment_id:int,variant_id:int,page_id:int,revision_id:int,targeting_preset_id:int,url_node_id:int,root_node_id:int,form_id:int,experiments:array<struct<id:string,name:string,version_id:string,version_name:string>>,variants:array<struct<id:string,name:string,version_id:string,version_name:string>>>",
                  "description": "CMS and experiment metadata related to page variants, experiments and form identifiers."
                }
              ]
            },
            {
              "table_name": "partner_self_contract_form_fields_answered",
              "column_info": [
                {
                  "column_name": "is_internal",
                  "dtype": "boolean",
                  "description": "Boolean flag indicating whether the submission originated from an internal user or system."
                },
                {
                  "column_name": "event_kafka_timestamp",
                  "dtype": "timestamp",
                  "description": "Timestamp when the event was produced to Kafka (ingestion time)."
                },
                {
                  "column_name": "event_timestamp",
                  "dtype": "timestamp",
                  "description": "Event timestamp as recorded by the event system."
                },
                {
                  "column_name": "form_page_id",
                  "dtype": "string",
                  "description": "Identifier of the page within the form where fields were answered."
                },
                {
                  "column_name": "salesforce_reference_uuid",
                  "dtype": "string",
                  "description": "Reference UUID linking this submission to a Salesforce record or CRM entity."
                },
                {
                  "column_name": "client_timestamp",
                  "dtype": "timestamp",
                  "description": "Timestamp recorded on the client at the moment of submission."
                },
                {
                  "column_name": "event_uuid",
                  "dtype": "string",
                  "description": "Unique identifier for the event record."
                },
                {
                  "column_name": "visitor_id",
                  "dtype": "string",
                  "description": "Identifier for the visitor or session used to correlate events to a user or device."
                },
                {
                  "column_name": "page",
                  "dtype": "struct<url:string,referer:string,type:string,language_code:string,country_code:string,product_id:string,ref:string,source:string>",
                  "description": "Page-level metadata including URL, referrer, language and product context."
                },
                {
                  "column_name": "cms_data",
                  "dtype": "struct<experiment_id:int,variant_id:int,page_id:int,revision_id:int,targeting_preset_id:int,url_node_id:int,root_node_id:int,form_id:int,experiments:array<struct<id:string,name:string,version_id:string,version_name:string>>,variants:array<struct<id:string,name:string,version_id:string,version_name:string>>>",
                  "description": "CMS metadata about the form and experiments, including form, page and variant identifiers."
                },
                {
                  "column_name": "form_id",
                  "dtype": "string",
                  "description": "Identifier of the submitted form."
                },
                {
                  "column_name": "field_answers",
                  "dtype": "array<struct<name:string,value:string>>",
                  "description": "Array of name/value pairs of submitted form field answers; may contain personal or sensitive user-provided data."
                },
                {
                  "column_name": "device",
                  "dtype": "struct<user_agent:string,screen_width:int,screen_height:int,viewport_width:int,viewport_height:int,is_touch:boolean,connection_type:string,language_code:string>",
                  "description": "Device and client details such as user agent, screen dimensions, touch capability, connection type and language code."
                },
                {
                  "column_name": "_meta",
                  "dtype": "struct<event_uuid:string,event_time:string,application:string,origin:string,experiments:array<struct<id:string,variant:string>>,client_info:struct<asn:string,country:string,region:string,city:string,postal_code:string,latitude:string,longitude:string,ja4_fingerprint:string,is_desktop_viewer:boolean,is_mobile_viewer:boolean,is_smarttv_viewer:boolean,is_tablet_viewer:boolean,is_android_viewer:boolean,is_ios_viewer:boolean>,user:struct<uuid:string,roles:array<string>>>",
                  "description": "Internal metadata envelope containing event identifiers, client_info (location and device flags) and user info; may include user UUID and location data."
                },
                {
                  "column_name": "product_uuid",
                  "dtype": "string",
                  "description": "UUID of the product associated with this submission."
                },
                {
                  "column_name": "google_analytics",
                  "dtype": "struct<_ga:string,_gid:string>",
                  "description": "Google Analytics identifiers (_ga and _gid) associated with the visitor."
                }
              ]
            },
            {
              "table_name": "partner_self_contract_form_fields_seen",
              "column_info": [
                {
                  "column_name": "event_timestamp",
                  "dtype": "timestamp",
                  "description": "Server-side timestamp when the event was processed or recorded."
                },
                {
                  "column_name": "google_analytics",
                  "dtype": "struct<_ga:string,_gid:string>",
                  "description": "Google Analytics identifiers (e.g., _ga, _gid) used to track the visitor across sessions; considered PII-like tracking identifiers."
                },
                {
                  "column_name": "cms_data",
                  "dtype": "struct<experiment_id:int,variant_id:int,page_id:int,revision_id:int,targeting_preset_id:int,url_node_id:int,root_node_id:int,form_id:int,experiments:array<struct<id:string,name:string,version_id:string,version_name:string>>,variants:array<struct<id:string,name:string,version_id:string,version_name:string>>>",
                  "description": "CMS-related context (experiment ids, page and form identifiers, experiments and variant metadata)."
                },
                {
                  "column_name": "form_id",
                  "dtype": "string",
                  "description": "Identifier of the form shown to the user (application-level form identifier)."
                },
                {
                  "column_name": "device",
                  "dtype": "struct<user_agent:string,screen_width:int,screen_height:int,viewport_width:int,viewport_height:int,is_touch:boolean,connection_type:string,language_code:string>",
                  "description": "Device information captured from the client (user agent, screen and viewport dimensions, touch capability, connection type and language)."
                },
                {
                  "column_name": "_meta",
                  "dtype": "struct<event_uuid:string,event_time:string,application:string,origin:string,experiments:array<struct<id:string,variant:string>>,client_info:struct<asn:string,country:string,region:string,city:string,postal_code:string,latitude:string,longitude:string,ja4_fingerprint:string,is_desktop_viewer:boolean,is_mobile_viewer:boolean,is_smarttv_viewer:boolean,is_tablet_viewer:boolean,is_android_viewer:boolean,is_ios_viewer:boolean>,user:struct<uuid:string,roles:array<string>>>",
                  "description": "Event metadata including event UUID, client info (location, ASN, fingerprint) and user UUID/roles; contains potential PII such as user identifiers and location."
                },
                {
                  "column_name": "event_kafka_timestamp",
                  "dtype": "timestamp",
                  "description": "Timestamp assigned by Kafka when the event was enqueued."
                },
                {
                  "column_name": "is_internal",
                  "dtype": "boolean",
                  "description": "Boolean flag indicating whether the event originated from an internal user or system."
                },
                {
                  "column_name": "information_seen",
                  "dtype": "struct<price:struct<price_type:string,price_shown:string>>",
                  "description": "Structured details about displayed information (e.g., price type and whether a price was shown)."
                },
                {
                  "column_name": "salesforce_reference_uuid",
                  "dtype": "string",
                  "description": "UUID referencing a Salesforce record associated with the event; may identify a contact or lead."
                },
                {
                  "column_name": "fields_seen",
                  "dtype": "array<string>",
                  "description": "Array of field names that were displayed to the user on the form."
                },
                {
                  "column_name": "page",
                  "dtype": "struct<url:string,referer:string,type:string,language_code:string,country_code:string,product_id:string,ref:string,source:string>",
                  "description": "Context about the page where the form appeared, including URL, referrer, type, language and source."
                },
                {
                  "column_name": "event_uuid",
                  "dtype": "string",
                  "description": "Unique identifier for the event record."
                },
                {
                  "column_name": "form_page_id",
                  "dtype": "string",
                  "description": "Identifier for the specific page or step of the form where fields were shown."
                },
                {
                  "column_name": "client_timestamp",
                  "dtype": "timestamp",
                  "description": "Timestamp recorded on the client when the event occurred."
                },
                {
                  "column_name": "product_uuid",
                  "dtype": "string",
                  "description": "UUID of the product associated with the event, when applicable."
                },
                {
                  "column_name": "visitor_id",
                  "dtype": "string",
                  "description": "Persistent identifier for the visitor or session; can be used to link events to a specific individual or device."
                }
              ]
            },
            {
              "table_name": "partner_self_contract_submitted",
              "column_info": [
                {
                  "column_name": "page",
                  "dtype": "struct<url:string,referer:string,type:string,language_code:string,country_code:string,product_id:string,ref:string,source:string>",
                  "description": "Page-level metadata such as URL, referer, content type, language and source of the submission."
                },
                {
                  "column_name": "contract_data",
                  "dtype": "struct<service_area_postal_code:string,area_radius:double,leads_per_week:double,company:string,street:string,postal_code:string,city:string,vat_id:string,website:string,email:string,billing_city:string,confirmed_power_of_attorney:boolean,confirmed_terms_of_service:boolean>",
                  "description": "Submitted contract details including company name, contact email and postal address; contains personal contact information and business identifiers."
                },
                {
                  "column_name": "visitor_id",
                  "dtype": "string",
                  "description": "Identifier for the visitor or session; may be tied to an individual or session and considered personal data."
                },
                {
                  "column_name": "cms_data",
                  "dtype": "struct<experiment_id:int,variant_id:int,page_id:int,revision_id:int,targeting_preset_id:int,url_node_id:int,root_node_id:int,form_id:int,experiments:array<struct<id:string,name:string,version_id:string,version_name:string>>,variants:array<struct<id:string,name:string,version_id:string,version_name:string>>>",
                  "description": "CMS experiment and variant metadata describing A/B tests and page/form configuration shown to the user."
                },
                {
                  "column_name": "google_analytics",
                  "dtype": "struct<_ga:string,_gid:string>",
                  "description": "Google Analytics identifiers (e.g., _ga, _gid) associated with the visitor; may be pseudonymous personal identifiers."
                },
                {
                  "column_name": "product_uuid",
                  "dtype": "string",
                  "description": "UUID of the product associated with the contract submission."
                },
                {
                  "column_name": "device",
                  "dtype": "struct<user_agent:string,screen_width:int,screen_height:int,viewport_width:int,viewport_height:int,is_touch:boolean,connection_type:string,language_code:string>",
                  "description": "Visitor device information and viewport details (user agent, screen dimensions, connection type, language)."
                },
                {
                  "column_name": "client_timestamp",
                  "dtype": "timestamp",
                  "description": "Timestamp reported by the client when the submission occurred."
                },
                {
                  "column_name": "_meta",
                  "dtype": "struct<event_uuid:string,event_time:string,application:string,origin:string,experiments:array<struct<id:string,variant:string>>,client_info:struct<asn:string,country:string,region:string,city:string,postal_code:string,latitude:string,longitude:string,ja4_fingerprint:string,is_desktop_viewer:boolean,is_mobile_viewer:boolean,is_smarttv_viewer:boolean,is_tablet_viewer:boolean,is_android_viewer:boolean,is_ios_viewer:boolean>,user:struct<uuid:string,roles:array<string>>>",
                  "description": "Event metadata including client geolocation and user uuid; may contain personal identifiers and location data."
                },
                {
                  "column_name": "event_timestamp",
                  "dtype": "timestamp",
                  "description": "Ingested event timestamp for the record."
                },
                {
                  "column_name": "is_internal",
                  "dtype": "boolean",
                  "description": "Boolean flag indicating whether the submission originated from an internal system or user."
                },
                {
                  "column_name": "event_kafka_timestamp",
                  "dtype": "timestamp",
                  "description": "Timestamp when the event was persisted to Kafka or the ingestion pipeline."
                },
                {
                  "column_name": "salesforce_reference_uuid",
                  "dtype": "string",
                  "description": "UUID referencing the related Salesforce record for this submission."
                },
                {
                  "column_name": "event_uuid",
                  "dtype": "string",
                  "description": "Unique identifier for the event record."
                }
              ]
            },
            {
              "table_name": "possible_matching_methods_changed",
              "column_info": [
                {
                  "column_name": "event_kafka_timestamp",
                  "dtype": "timestamp",
                  "description": "Timestamp when the event was produced to Kafka."
                },
                {
                  "column_name": "event_timestamp",
                  "dtype": "timestamp",
                  "description": "Timestamp when the recorded event occurred."
                },
                {
                  "column_name": "_meta",
                  "dtype": "struct<event_uuid:string,event_time:string,application:string,origin:string,experiments:array<struct<id:string,variant:string>>,client_info:struct<asn:string,country:string,region:string,city:string,postal_code:string,latitude:string,longitude:string,ja4_fingerprint:string,is_desktop_viewer:boolean,is_mobile_viewer:boolean,is_smarttv_viewer:boolean,is_tablet_viewer:boolean,is_android_viewer:boolean,is_ios_viewer:boolean>,user:struct<uuid:string,roles:array<string>>>",
                  "description": "Event metadata including client_info (location, device) and user info; may include PII such as location and user uuid."
                },
                {
                  "column_name": "current_possible_matching_methods",
                  "dtype": "array<string>",
                  "description": "Array of matching method names active after the change."
                },
                {
                  "column_name": "event_uuid",
                  "dtype": "string",
                  "description": "Unique identifier for this event record."
                },
                {
                  "column_name": "changed_by",
                  "dtype": "struct<uuid:string,email:string,automated_process_name:string>",
                  "description": "Struct identifying who made the change (uuid, email) or the automated process name; may contain personal identifiers."
                },
                {
                  "column_name": "reason",
                  "dtype": "string",
                  "description": "Optional text explaining the reason for the change."
                },
                {
                  "column_name": "group_number",
                  "dtype": "bigint",
                  "description": "Numeric identifier for grouping related changes."
                },
                {
                  "column_name": "added_possible_matching_methods",
                  "dtype": "array<string>",
                  "description": "Array of matching method names that were added by this change."
                },
                {
                  "column_name": "removed_possible_matching_methods",
                  "dtype": "array<string>",
                  "description": "Array of matching method names that were removed by this change."
                },
                {
                  "column_name": "product_request_uuid",
                  "dtype": "string",
                  "description": "UUID identifying the product request associated with this change."
                }
              ]
            },
            {
              "table_name": "potential_vendors_submitted",
              "column_info": [
                {
                  "column_name": "_meta",
                  "dtype": "struct<event_uuid:string,event_time:string,application:string,origin:string,experiments:array<struct<id:string,variant:string>>,client_info:struct<asn:string,country:string,region:string,city:string,postal_code:string,latitude:string,longitude:string,ja4_fingerprint:string,is_desktop_viewer:boolean,is_mobile_viewer:boolean,is_smarttv_viewer:boolean,is_tablet_viewer:boolean,is_android_viewer:boolean,is_ios_viewer:boolean>,user:struct<uuid:string,roles:array<string>>>",
                  "description": "Nested event metadata including client_info (location/IP-related fields), user info and application context; may contain personal or location data."
                },
                {
                  "column_name": "lead_vendor_district_ids",
                  "dtype": "array<bigint>",
                  "description": "Array of district identifiers associated with lead vendors."
                },
                {
                  "column_name": "event_kafka_timestamp",
                  "dtype": "timestamp",
                  "description": "Timestamp when the event was written to Kafka."
                },
                {
                  "column_name": "event_uuid",
                  "dtype": "string",
                  "description": "Globally unique identifier for this event record."
                },
                {
                  "column_name": "lead_vendor_ids",
                  "dtype": "array<bigint>",
                  "description": "Array of lead vendor identifiers referenced in the submission."
                },
                {
                  "column_name": "product_request_id",
                  "dtype": "bigint",
                  "description": "Numeric identifier for the product request tied to this event."
                },
                {
                  "column_name": "event_type",
                  "dtype": "string",
                  "description": "Category of the event (e.g., submit, update)."
                },
                {
                  "column_name": "date_vendor_ids",
                  "dtype": "array<bigint>",
                  "description": "Array of vendor identifiers relevant for the event date."
                },
                {
                  "column_name": "event_timestamp",
                  "dtype": "timestamp",
                  "description": "Timestamp when the event occurred."
                },
                {
                  "column_name": "agent_id",
                  "dtype": "bigint",
                  "description": "Identifier for the agent (user/account) who submitted or handled the request; may identify an individual."
                },
                {
                  "column_name": "date_vendor_district_ids",
                  "dtype": "array<bigint>",
                  "description": "Array of district identifiers linked to date-specific vendor data."
                },
                {
                  "column_name": "product_request_uuid",
                  "dtype": "string",
                  "description": "UUID identifying the product request associated with the event."
                }
              ]
            },
            {
              "table_name": "product_request_created",
              "column_info": [
                {
                  "column_name": "_meta",
                  "dtype": "struct<event_uuid:string,event_time:string,application:string,origin:string,experiments:array<struct<id:string,variant:string>>,client_info:struct<asn:string,country:string,region:string,city:string,postal_code:string,latitude:string,longitude:string,ja4_fingerprint:string,is_desktop_viewer:boolean,is_mobile_viewer:boolean,is_smarttv_viewer:boolean,is_tablet_viewer:boolean,is_android_viewer:boolean,is_ios_viewer:boolean>,user:struct<uuid:string,roles:array<string>>>",
                  "description": "Structured event metadata including event UUID, application, client_info (location, ASN), experiments and user UUID; may contain user identifiers and location data."
                },
                {
                  "column_name": "product_id",
                  "dtype": "string",
                  "description": "Identifier of the product referenced in the request."
                },
                {
                  "column_name": "is_internal",
                  "dtype": "boolean",
                  "description": "Boolean flag indicating if the request was generated by an internal user or system."
                },
                {
                  "column_name": "event_kafka_timestamp",
                  "dtype": "timestamp",
                  "description": "Timestamp when the event was ingested into Kafka."
                },
                {
                  "column_name": "page",
                  "dtype": "struct<url:string,referer:string,type:string,language_code:string,country_code:string,product_id:string,ref:string,source:string>",
                  "description": "Page-level details such as URL, referer, language and source where the request originated."
                },
                {
                  "column_name": "product_request_uuid",
                  "dtype": "string",
                  "description": "UUID uniquely identifying the product request."
                },
                {
                  "column_name": "device",
                  "dtype": "struct<user_agent:string,screen_width:int,screen_height:int,viewport_width:int,viewport_height:int,is_touch:boolean,connection_type:string,language_code:string>",
                  "description": "Device information such as user agent, screen and viewport dimensions, touch capability and connection type."
                },
                {
                  "column_name": "visitor_id",
                  "dtype": "string",
                  "description": "Identifier for the visitor or device session (e.g., cookie or device id); can be used to track an individual."
                },
                {
                  "column_name": "event_timestamp",
                  "dtype": "timestamp",
                  "description": "Timestamp when the event actually occurred."
                },
                {
                  "column_name": "status",
                  "dtype": "struct<id:bigint,name:string,extended_id:bigint,extended_name:string>",
                  "description": "Structured status information for the request including id and name."
                },
                {
                  "column_name": "product_request_group_number",
                  "dtype": "bigint",
                  "description": "Numeric grouping identifier for related product requests."
                },
                {
                  "column_name": "posted_at",
                  "dtype": "timestamp",
                  "description": "Timestamp when the product request was posted by the user."
                },
                {
                  "column_name": "event_uuid",
                  "dtype": "string",
                  "description": "UUID for the tracking event."
                },
                {
                  "column_name": "product_request_id",
                  "dtype": "bigint",
                  "description": "Internal numeric identifier for the product request."
                },
                {
                  "column_name": "email_confirmed_at",
                  "dtype": "timestamp",
                  "description": "Timestamp when the user's email was confirmed; indicates verification time."
                },
                {
                  "column_name": "given_answers",
                  "dtype": "array<struct<type:string,form_service_answer_uuid:string,form_service_answer_text:boolean,form_service_question_uuid:string,label:string,value:string,slug:string>>",
                  "description": "Array of answers provided in forms; answer values may include personal or sensitive information."
                }
              ]
            },
            {
              "table_name": "product_request_enriched",
              "column_info": [
                {
                  "column_name": "event_kafka_timestamp",
                  "dtype": "timestamp",
                  "description": "Timestamp when the event was ingested into Kafka."
                },
                {
                  "column_name": "event_uuid",
                  "dtype": "string",
                  "description": "Unique identifier for the event."
                },
                {
                  "column_name": "_meta",
                  "dtype": "struct<event_uuid:string,event_time:string,application:string,origin:string,experiments:array<struct<id:string,variant:string>>,client_info:struct<asn:string,country:string,region:string,city:string,postal_code:string,latitude:string,longitude:string,ja4_fingerprint:string,is_desktop_viewer:boolean,is_mobile_viewer:boolean,is_smarttv_viewer:boolean,is_tablet_viewer:boolean,is_android_viewer:boolean,is_ios_viewer:boolean>,user:struct<uuid:string,roles:array<string>>>",
                  "description": "Nested metadata including client_info (location and device), user (uuid and roles), experiments and origin; may contain PII such as location and user identifiers."
                },
                {
                  "column_name": "event_description",
                  "dtype": "string",
                  "description": "Short textual description or name of the event or action."
                },
                {
                  "column_name": "event_timestamp",
                  "dtype": "timestamp",
                  "description": "Original event occurrence timestamp recorded by the producer."
                },
                {
                  "column_name": "product_request_uuid",
                  "dtype": "string",
                  "description": "UUID that uniquely identifies the product request."
                }
              ]
            },
            {
              "table_name": "product_request_partner_availability_changed",
              "column_info": [
                {
                  "column_name": "_meta",
                  "dtype": "struct<event_uuid:string,event_time:string,application:string,origin:string,experiments:array<struct<id:string,variant:string>>,client_info:struct<asn:string,country:string,region:string,city:string,postal_code:string,latitude:string,longitude:string,ja4_fingerprint:string,is_desktop_viewer:boolean,is_mobile_viewer:boolean,is_smarttv_viewer:boolean,is_tablet_viewer:boolean,is_android_viewer:boolean,is_ios_viewer:boolean>,user:struct<uuid:string,roles:array<string>>>",
                  "description": "Event metadata including event identifiers, client info (location, device) and user information; may contain PII such as user UUID and postal code."
                },
                {
                  "column_name": "product_id",
                  "dtype": "bigint",
                  "description": "Identifier for the product referenced in the request."
                },
                {
                  "column_name": "product_request_uuid",
                  "dtype": "string",
                  "description": "Unique identifier for the product request event."
                },
                {
                  "column_name": "given_answer_uuids",
                  "dtype": "array<string>",
                  "description": "Array of UUIDs representing answers provided during matching or questionnaires."
                },
                {
                  "column_name": "event_kafka_timestamp",
                  "dtype": "timestamp",
                  "description": "Timestamp when the event was produced to Kafka."
                },
                {
                  "column_name": "assignment_terms_in_region",
                  "dtype": "array<struct<id:bigint,vendor_id:bigint,contingent:boolean,buys_dates:boolean,has_dates:boolean,accept_digital_matching:boolean,excluded_by_answers:array<string>>>",
                  "description": "Array of assignment term objects for vendors in the region, detailing vendor IDs and availability flags."
                },
                {
                  "column_name": "possible_matching_method",
                  "dtype": "string",
                  "description": "Suggested or detected method used for matching partners to the request."
                },
                {
                  "column_name": "match_status_reason",
                  "dtype": "string",
                  "description": "Reason or note explaining the partner matching status."
                },
                {
                  "column_name": "status",
                  "dtype": "struct<id:bigint,name:string,extended_id:bigint,extended_name:string>",
                  "description": "Structured object describing matching status with id, name and optional extended fields."
                },
                {
                  "column_name": "possible_leads",
                  "dtype": "bigint",
                  "description": "Estimated number of potential leads available for this request in the region."
                },
                {
                  "column_name": "event_uuid",
                  "dtype": "string",
                  "description": "Unique identifier for this specific event."
                },
                {
                  "column_name": "zip_code",
                  "dtype": "string",
                  "description": "Postal code associated with the request location; may be considered personally identifiable information in some contexts."
                },
                {
                  "column_name": "country_code",
                  "dtype": "string",
                  "description": "ISO country code where the product request originates or is targeted."
                },
                {
                  "column_name": "event_timestamp",
                  "dtype": "timestamp",
                  "description": "Canonical timestamp of when the event occurred."
                }
              ]
            },
            {
              "table_name": "product_request_question_answered",
              "column_info": [
                {
                  "column_name": "visitor_id",
                  "dtype": "string",
                  "description": "Identifier for the visitor or session; may be persistent or pseudonymous and can link activity to a user."
                },
                {
                  "column_name": "event_timestamp",
                  "dtype": "timestamp",
                  "description": "Timestamp when the event was recorded in the system."
                },
                {
                  "column_name": "is_internal",
                  "dtype": "boolean",
                  "description": "Boolean flag indicating whether the event originates from an internal system or user."
                },
                {
                  "column_name": "given_answers",
                  "dtype": "array<struct<type:string,form_service_answer_uuid:string,form_service_answer_text:boolean,form_service_question_uuid:string,label:string,value:string,slug:string>>",
                  "description": "Array of answers provided by the visitor; may include free-text responses or values that contain personal data."
                },
                {
                  "column_name": "device",
                  "dtype": "struct<user_agent:string,screen_width:int,screen_height:int,viewport_width:int,viewport_height:int,is_touch:boolean,connection_type:string,language_code:string>",
                  "description": "Client device and environment details: user agent, screen and viewport dimensions, touch capability, connection type and language code."
                },
                {
                  "column_name": "cms_data",
                  "dtype": "struct<experiment_id:int,variant_id:int,page_id:int,revision_id:int,targeting_preset_id:int,url_node_id:int,root_node_id:int,form_id:int,experiments:array<struct<id:string,name:string,version_id:string,version_name:string>>,variants:array<struct<id:string,name:string,version_id:string,version_name:string>>>",
                  "description": "Content management metadata such as experiment, variant, page and form identifiers and experiment/variant lists."
                },
                {
                  "column_name": "page",
                  "dtype": "struct<url:string,referer:string,type:string,language_code:string,country_code:string,product_id:string,ref:string,source:string>",
                  "description": "Page-level context including URL, referrer, page type, language and country codes, product id and traffic source."
                },
                {
                  "column_name": "google_analytics",
                  "dtype": "struct<_ga:string,_gid:string>",
                  "description": "Google Analytics identifiers (ga, _gid) associated with the session; may be pseudonymous identifiers."
                },
                {
                  "column_name": "product_request_uuid",
                  "dtype": "string",
                  "description": "Unique identifier of the product request associated with the answers."
                },
                {
                  "column_name": "client_timestamp",
                  "dtype": "timestamp",
                  "description": "Timestamp reported by the client when the action occurred."
                },
                {
                  "column_name": "_meta",
                  "dtype": "struct<event_uuid:string,event_time:string,application:string,origin:string,experiments:array<struct<id:string,variant:string>>,client_info:struct<asn:string,country:string,region:string,city:string,postal_code:string,latitude:string,longitude:string,ja4_fingerprint:string,is_desktop_viewer:boolean,is_mobile_viewer:boolean,is_smarttv_viewer:boolean,is_tablet_viewer:boolean,is_android_viewer:boolean,is_ios_viewer:boolean>,user:struct<uuid:string,roles:array<string>>>",
                  "description": "Nested metadata including event and client info, user object and location fields; may contain user identifiers and other sensitive attributes."
                },
                {
                  "column_name": "event_uuid",
                  "dtype": "string",
                  "description": "Unique identifier (UUID) for the event record."
                },
                {
                  "column_name": "event_kafka_timestamp",
                  "dtype": "timestamp",
                  "description": "Timestamp when the event was produced to Kafka."
                }
              ]
            },
            {
              "table_name": "product_request_question_seen",
              "column_info": [
                {
                  "column_name": "is_internal",
                  "dtype": "boolean",
                  "description": "Boolean flag indicating whether the event originated from an internal context."
                },
                {
                  "column_name": "slug",
                  "dtype": "string",
                  "description": "Page or content slug associated with the event."
                },
                {
                  "column_name": "device",
                  "dtype": "struct<user_agent:string,screen_width:int,screen_height:int,viewport_width:int,viewport_height:int,is_touch:boolean,connection_type:string,language_code:string>",
                  "description": "Struct describing the visitor's device characteristics and viewport dimensions."
                },
                {
                  "column_name": "number_of_transitions",
                  "dtype": "int",
                  "description": "Count of page or state transitions during the session or interaction."
                },
                {
                  "column_name": "client_timestamp",
                  "dtype": "timestamp",
                  "description": "Timestamp from the client when the event was generated."
                },
                {
                  "column_name": "google_analytics",
                  "dtype": "struct<_ga:string,_gid:string>",
                  "description": "Google Analytics identifiers (for example _ga and _gid) associated with the visitor session."
                },
                {
                  "column_name": "page",
                  "dtype": "struct<url:string,referer:string,type:string,language_code:string,country_code:string,product_id:string,ref:string,source:string>",
                  "description": "Struct containing page-level details such as URL, referer, product_id, and source."
                },
                {
                  "column_name": "event_timestamp",
                  "dtype": "timestamp",
                  "description": "Server-side timestamp when the event was recorded."
                },
                {
                  "column_name": "label",
                  "dtype": "string",
                  "description": "Human-readable label for the question or form field shown to the visitor."
                },
                {
                  "column_name": "visitor_id",
                  "dtype": "string",
                  "description": "Identifier representing the visitor used to link sessions and behavior (may be PII)."
                },
                {
                  "column_name": "_meta",
                  "dtype": "struct<event_uuid:string,event_time:string,application:string,origin:string,experiments:array<struct<id:string,variant:string>>,client_info:struct<asn:string,country:string,region:string,city:string,postal_code:string,latitude:string,longitude:string,ja4_fingerprint:string,is_desktop_viewer:boolean,is_mobile_viewer:boolean,is_smarttv_viewer:boolean,is_tablet_viewer:boolean,is_android_viewer:boolean,is_ios_viewer:boolean>,user:struct<uuid:string,roles:array<string>>>",
                  "description": "Nested metadata including client_info (location and device) and user identifiers; may contain PII."
                },
                {
                  "column_name": "product_request_uuid",
                  "dtype": "string",
                  "description": "Identifier linking the event to a specific product request entity."
                },
                {
                  "column_name": "form_service_question_uuid",
                  "dtype": "string",
                  "description": "Identifier for the question entity from the external form service."
                },
                {
                  "column_name": "event_uuid",
                  "dtype": "string",
                  "description": "Unique identifier for the captured event message."
                },
                {
                  "column_name": "type",
                  "dtype": "string",
                  "description": "Type of the question or form field (for example single-choice or boolean)."
                },
                {
                  "column_name": "answer_options",
                  "dtype": "array<struct<form_service_answer_uuid:string,form_service_answer_text:boolean,label:string,slug:string>>",
                  "description": "Array of objects representing available answer options, including option ids and labels."
                },
                {
                  "column_name": "cms_data",
                  "dtype": "struct<experiment_id:int,variant_id:int,page_id:int,revision_id:int,targeting_preset_id:int,url_node_id:int,root_node_id:int,form_id:int,experiments:array<struct<id:string,name:string,version_id:string,version_name:string>>,variants:array<struct<id:string,name:string,version_id:string,version_name:string>>>",
                  "description": "Struct with CMS and experiment metadata, including experiment and variant identifiers."
                },
                {
                  "column_name": "event_kafka_timestamp",
                  "dtype": "timestamp",
                  "description": "Timestamp assigned by Kafka when the event message was produced."
                }
              ]
            },
            {
              "table_name": "product_request_status_changed",
              "column_info": [
                {
                  "column_name": "draft_created_at",
                  "dtype": "timestamp",
                  "description": "Timestamp when the draft associated to the request was created."
                },
                {
                  "column_name": "product_uuid",
                  "dtype": "string",
                  "description": "String UUID that uniquely identifies the product."
                },
                {
                  "column_name": "product_request_id",
                  "dtype": "bigint",
                  "description": "Internal numeric identifier for the product request."
                },
                {
                  "column_name": "origin",
                  "dtype": "struct<partner:string>",
                  "description": "Struct indicating the originating partner or source of the request."
                },
                {
                  "column_name": "old_status",
                  "dtype": "struct<id:bigint,name:string,extended_id:bigint,extended_name:string>",
                  "description": "Struct describing the previous status (id, name, extended fields)."
                },
                {
                  "column_name": "lead_count",
                  "dtype": "bigint",
                  "description": "Count of leads associated with the product request."
                },
                {
                  "column_name": "appointment_time",
                  "dtype": "timestamp",
                  "description": "Scheduled appointment timestamp associated with the product request."
                },
                {
                  "column_name": "product_request_uuid",
                  "dtype": "string",
                  "description": "UUID identifying the product request."
                },
                {
                  "column_name": "changed_by",
                  "dtype": "struct<uuid:string,email:string,automated_process_name:string>",
                  "description": "Struct with actor details (uuid, email, automated process name) who performed the change."
                },
                {
                  "column_name": "posted_time",
                  "dtype": "timestamp",
                  "description": "Timestamp when the status change was posted."
                },
                {
                  "column_name": "new_status",
                  "dtype": "struct<id:bigint,name:string,extended_id:bigint,extended_name:string>",
                  "description": "Struct describing the new status after the change (id, name, extended fields)."
                },
                {
                  "column_name": "event_uuid",
                  "dtype": "string",
                  "description": "UUID identifying this specific event record."
                },
                {
                  "column_name": "offer_contact",
                  "dtype": "struct<salutation:string,company_name:string,postal_code:string,country_code:string>",
                  "description": "Contact information for the offer including salutation, company name, postal code and country; may contain personal contact data."
                },
                {
                  "column_name": "group_number",
                  "dtype": "bigint",
                  "description": "Numeric group identifier associated with the request."
                },
                {
                  "column_name": "event_kafka_timestamp",
                  "dtype": "timestamp",
                  "description": "Timestamp when the event was written to Kafka."
                },
                {
                  "column_name": "doi_time",
                  "dtype": "timestamp",
                  "description": "Timestamp related to date of installation or other DOI event."
                },
                {
                  "column_name": "installation_contact",
                  "dtype": "struct<salutation:string,company_name:string,postal_code:string,country_code:string,email:string,email_normalized:string>",
                  "description": "Contact details for installation including salutation, company, postal code and email addresses."
                },
                {
                  "column_name": "_meta",
                  "dtype": "struct<event_uuid:string,event_time:string,application:string,origin:string,experiments:array<struct<id:string,variant:string>>,client_info:struct<asn:string,country:string,region:string,city:string,postal_code:string,latitude:string,longitude:string,ja4_fingerprint:string,is_desktop_viewer:boolean,is_mobile_viewer:boolean,is_smarttv_viewer:boolean,is_tablet_viewer:boolean,is_android_viewer:boolean,is_ios_viewer:boolean>,user:struct<uuid:string,roles:array<string>>>",
                  "description": "Event metadata including identifiers, client info (location, device) and user info; may contain personally identifiable fields."
                },
                {
                  "column_name": "answers",
                  "dtype": "array<struct<uuid:string,free_text:string,question_uuid:string>>",
                  "description": "Array of answer objects containing uuids and free-text responses; may include user-provided personal data."
                },
                {
                  "column_name": "event_timestamp",
                  "dtype": "timestamp",
                  "description": "Original timestamp generated by the source system for the event."
                }
              ]
            },
            {
              "table_name": "product_request_submitted",
              "column_info": [
                {
                  "column_name": "consent_type",
                  "dtype": "string",
                  "description": "Type or method of consent provided by the user, if any."
                },
                {
                  "column_name": "trackings",
                  "dtype": "struct<referer:string,gclid:string,ag:string,ag_url:string,experiment_id:int,entrance_url:string,variant_id:int,subid:string,vertical:string,uid:string,partner:string,partner_clean:string,conversion_group:string,form_url:string,form_referer:string,aaaid:string,vendor_id:string,ad_id:string,campaign_id:string,adgroup_id:string,account_id:string,lead_id:string>",
                  "description": "Marketing and tracking metadata (uids, gclid, aaid, partner ids, lead id) that can link to users or devices."
                },
                {
                  "column_name": "cms_data",
                  "dtype": "struct<experiment_id:int,variant_id:int,page_id:int,revision_id:int,targeting_preset_id:int,url_node_id:int,root_node_id:int,form_id:int,experiments:array<struct<id:string,name:string,version_id:string,version_name:string>>,variants:array<struct<id:string,name:string,version_id:string,version_name:string>>>",
                  "description": "Content management metadata for the form or page variant, including experiment and variant identifiers."
                },
                {
                  "column_name": "contacts",
                  "dtype": "struct<international_area_code:string,company:string,email:string,city:string,zip_code:string,gender:string,hidden_spam_detection_field:string,callback_time:string,comment:string,language_code:string,country_code:string,email_normalized:string>",
                  "description": "Structured contact details provided by the requester (email, phone code, address fields, company); contains personal identifiers."
                },
                {
                  "column_name": "product_request_uuid",
                  "dtype": "string",
                  "description": "Unique identifier for the product request event."
                },
                {
                  "column_name": "visitor_id",
                  "dtype": "string",
                  "description": "Identifier for the visitor or session used to link behavior across events."
                },
                {
                  "column_name": "google_analytics",
                  "dtype": "struct<_ga:string,_gid:string>",
                  "description": "Google Analytics identifiers (_ga, _gid) associated with the session, which can act as device or user identifiers."
                },
                {
                  "column_name": "product_id",
                  "dtype": "string",
                  "description": "Identifier of the product referenced in the request."
                },
                {
                  "column_name": "draft_created_at",
                  "dtype": "timestamp",
                  "description": "Timestamp when a draft of the product request was created."
                },
                {
                  "column_name": "offer_uuid",
                  "dtype": "string",
                  "description": "UUID of an associated offer."
                },
                {
                  "column_name": "given_answers",
                  "dtype": "array<struct<type:string,form_service_answer_uuid:string,form_service_answer_text:boolean,form_service_question_uuid:string,label:string,value:string,slug:string>>",
                  "description": "Array of answers submitted in the form, each with question and answer details; may include user-provided text."
                },
                {
                  "column_name": "is_internal",
                  "dtype": "boolean",
                  "description": "Flag indicating whether the request was created by an internal user or process."
                },
                {
                  "column_name": "event_timestamp",
                  "dtype": "timestamp",
                  "description": "Ingestion timestamp when the event was recorded in the system."
                },
                {
                  "column_name": "privacy_policy_accepted",
                  "dtype": "boolean",
                  "description": "Boolean indicating whether the user accepted the privacy policy at submission."
                },
                {
                  "column_name": "device",
                  "dtype": "struct<user_agent:string,screen_width:int,screen_height:int,viewport_width:int,viewport_height:int,is_touch:boolean,connection_type:string,language_code:string>",
                  "description": "Device metadata including user agent, screen dimensions, connection type and language; may include fingerprinting attributes."
                },
                {
                  "column_name": "experiment_feature_flags",
                  "dtype": "array<string>",
                  "description": "List of experiment or feature flags active for the session or request."
                },
                {
                  "column_name": "page",
                  "dtype": "struct<url:string,referer:string,type:string,language_code:string,country_code:string,product_id:string,ref:string,source:string>",
                  "description": "Page context including URL, referer, product reference, language and country codes."
                },
                {
                  "column_name": "event_kafka_timestamp",
                  "dtype": "timestamp",
                  "description": "Timestamp when the event was written to Kafka."
                },
                {
                  "column_name": "_meta",
                  "dtype": "struct<event_uuid:string,event_time:string,application:string,origin:string,experiments:array<struct<id:string,variant:string>>,client_info:struct<asn:string,country:string,region:string,city:string,postal_code:string,latitude:string,longitude:string,ja4_fingerprint:string,is_desktop_viewer:boolean,is_mobile_viewer:boolean,is_smarttv_viewer:boolean,is_tablet_viewer:boolean,is_android_viewer:boolean,is_ios_viewer:boolean>,user:struct<uuid:string,roles:array<string>>>",
                  "description": "Event metadata including event UUID, client info, location, fingerprint and user UUID/roles; contains identifiable data."
                },
                {
                  "column_name": "client_timestamp",
                  "dtype": "timestamp",
                  "description": "Timestamp provided by the client indicating when the event occurred."
                },
                {
                  "column_name": "event_uuid",
                  "dtype": "string",
                  "description": "UUID of the event used to uniquely identify the recorded event."
                }
              ]
            },
            {
              "table_name": "questionnaire_flow_redirection",
              "column_info": [
                {
                  "column_name": "client_timestamp",
                  "dtype": "timestamp",
                  "description": "Client-side timestamp indicating when the event occurred on the client."
                },
                {
                  "column_name": "event_uuid",
                  "dtype": "string",
                  "description": "Unique identifier for the event."
                },
                {
                  "column_name": "minimum_dm_partners_for_dm_validation",
                  "dtype": "bigint",
                  "description": "Minimum number of DM partners required to validate direct messaging."
                },
                {
                  "column_name": "product_request_uuid",
                  "dtype": "string",
                  "description": "Identifier for the related product request."
                },
                {
                  "column_name": "total_partners",
                  "dtype": "bigint",
                  "description": "Total number of partners associated with the questionnaire session."
                },
                {
                  "column_name": "visitor_id",
                  "dtype": "string",
                  "description": "Identifier for the visitor or user session; may be pseudonymous and can identify an individual."
                },
                {
                  "column_name": "event_kafka_timestamp",
                  "dtype": "timestamp",
                  "description": "Timestamp assigned when the event was published to Kafka."
                },
                {
                  "column_name": "dm_partners",
                  "dtype": "bigint",
                  "description": "Number of DM partners involved in this session."
                },
                {
                  "column_name": "redirected_to",
                  "dtype": "string",
                  "description": "Target destination or route the user was redirected to."
                },
                {
                  "column_name": "_meta",
                  "dtype": "struct<event_uuid:string,event_time:string,application:string,origin:string,experiments:array<struct<id:string,variant:string>>,client_info:struct<asn:string,country:string,region:string,city:string,postal_code:string,latitude:string,longitude:string,ja4_fingerprint:string,is_desktop_viewer:boolean,is_mobile_viewer:boolean,is_smarttv_viewer:boolean,is_tablet_viewer:boolean,is_android_viewer:boolean,is_ios_viewer:boolean>,user:struct<uuid:string,roles:array<string>>>",
                  "description": "Nested metadata containing event, client, and user details; may include location, fingerprint, and user identifiers."
                },
                {
                  "column_name": "event_timestamp",
                  "dtype": "timestamp",
                  "description": "Timestamp when the event was recorded in the system."
                }
              ]
            },
            {
              "table_name": "s2s_upload_log",
              "column_info": [
                {
                  "column_name": "currency",
                  "dtype": "string",
                  "description": "ISO 4217 currency code used for the revenue value."
                },
                {
                  "column_name": "response_code",
                  "dtype": "int",
                  "description": "Numeric response code returned by the receiving endpoint (e.g., HTTP status)."
                },
                {
                  "column_name": "run_id",
                  "dtype": "int",
                  "description": "Identifier for the processing run or job that produced this record."
                },
                {
                  "column_name": "deduplication_key",
                  "dtype": "string",
                  "description": "Key used to deduplicate incoming events and avoid duplicates."
                },
                {
                  "column_name": "product_id",
                  "dtype": "bigint",
                  "description": "Identifier of the product associated with the event."
                },
                {
                  "column_name": "event_type",
                  "dtype": "string",
                  "description": "Type of event or action recorded (for example, create or update)."
                },
                {
                  "column_name": "sent_at",
                  "dtype": "timestamp",
                  "description": "Timestamp when the payload was sent to the external system."
                },
                {
                  "column_name": "event_timestamp",
                  "dtype": "timestamp",
                  "description": "Timestamp when the event occurred."
                },
                {
                  "column_name": "inquiry_uuid",
                  "dtype": "string",
                  "description": "UUID uniquely identifying the upload inquiry or transaction."
                },
                {
                  "column_name": "job_failed",
                  "dtype": "boolean",
                  "description": "Boolean flag indicating whether the upload job failed."
                },
                {
                  "column_name": "vendor_code",
                  "dtype": "string",
                  "description": "Partner or vendor identifier code for the source system."
                },
                {
                  "column_name": "response_message",
                  "dtype": "string",
                  "description": "Textual response or error message returned by the receiving endpoint."
                },
                {
                  "column_name": "click_id",
                  "dtype": "string",
                  "description": "Advertising or tracking click identifier associated with the event."
                },
                {
                  "column_name": "country_code",
                  "dtype": "string",
                  "description": "ISO country code representing where the event originated."
                },
                {
                  "column_name": "revenue",
                  "dtype": "double",
                  "description": "Monetary amount reported for the event."
                }
              ]
            },
            {
              "table_name": "taboola_performance_ads",
              "column_info": [
                {
                  "column_name": "cvr",
                  "dtype": "bigint",
                  "description": "Conversion rate, typically calculated as actions divided by clicks."
                },
                {
                  "column_name": "campaign_id",
                  "dtype": "bigint",
                  "description": "Numeric identifier for the advertising campaign."
                },
                {
                  "column_name": "clicks",
                  "dtype": "bigint",
                  "description": "Total number of clicks recorded for the ad."
                },
                {
                  "column_name": "cost",
                  "dtype": "double",
                  "description": "Total cost attributed to the ad for the aggregation period in the specified currency."
                },
                {
                  "column_name": "ctr",
                  "dtype": "double",
                  "description": "Click-through rate calculated as clicks divided by impressions."
                },
                {
                  "column_name": "cpc",
                  "dtype": "double",
                  "description": "Cost per click: average cost paid for each click."
                },
                {
                  "column_name": "vctr",
                  "dtype": "double",
                  "description": "Viewable click-through rate calculated as clicks divided by visible impressions."
                },
                {
                  "column_name": "impressions",
                  "dtype": "bigint",
                  "description": "Total number of times the ad was shown."
                },
                {
                  "column_name": "actions",
                  "dtype": "bigint",
                  "description": "Count of conversion actions attributed to the ad (e.g., purchases, sign-ups)."
                },
                {
                  "column_name": "vcpm",
                  "dtype": "double",
                  "description": "Viewable CPM — cost per thousand viewable impressions."
                },
                {
                  "column_name": "account_id",
                  "dtype": "bigint",
                  "description": "Numeric identifier for the Taboola account associated with the ad data."
                },
                {
                  "column_name": "aggregation_date",
                  "dtype": "date",
                  "description": "Date for which the performance metrics are reported."
                },
                {
                  "column_name": "ad_id",
                  "dtype": "string",
                  "description": "Identifier for the individual ad creative."
                },
                {
                  "column_name": "url",
                  "dtype": "string",
                  "description": "Landing page or destination URL associated with the ad."
                },
                {
                  "column_name": "currency",
                  "dtype": "string",
                  "description": "ISO currency code used for the cost metrics (e.g., USD, EUR)."
                },
                {
                  "column_name": "alt_account_id",
                  "dtype": "string",
                  "description": "Alternate or external account identifier used for cross-referencing."
                },
                {
                  "column_name": "cpa",
                  "dtype": "double",
                  "description": "Cost per acquisition: cost divided by number of actions (conversion cost)."
                },
                {
                  "column_name": "visible_impressions",
                  "dtype": "bigint",
                  "description": "Count of impressions considered viewable or visible."
                },
                {
                  "column_name": "thumbnail_url",
                  "dtype": "string",
                  "description": "URL pointing to the ad's thumbnail image."
                },
                {
                  "column_name": "cpm",
                  "dtype": "double",
                  "description": "Cost per thousand impressions, cost normalized per 1,000 impressions."
                }
              ]
            },
            {
              "table_name": "triple_a_performance",
              "column_info": [
                {
                  "column_name": "amount",
                  "dtype": "double",
                  "description": "Monetary amount for the order or credited value."
                },
                {
                  "column_name": "click_timestamp_berlin",
                  "dtype": "timestamp",
                  "description": "Timestamp of the click event in Berlin timezone."
                },
                {
                  "column_name": "hashed_order_id",
                  "dtype": "string",
                  "description": "Hashed representation of the order identifier for pseudonymized linkage."
                },
                {
                  "column_name": "product_callname",
                  "dtype": "string",
                  "description": "Short name or alias used to reference the product."
                },
                {
                  "column_name": "basket_items",
                  "dtype": "string",
                  "description": "Serialized list of items included in the purchase basket."
                },
                {
                  "column_name": "order_currency",
                  "dtype": "string",
                  "description": "Currency code for the source or order amount."
                },
                {
                  "column_name": "event_timestamp_berlin",
                  "dtype": "timestamp",
                  "description": "Specific event timestamp converted to Berlin timezone."
                },
                {
                  "column_name": "last_change_timestamp_berlin",
                  "dtype": "timestamp",
                  "description": "Timestamp of the last change to the record in Berlin timezone."
                },
                {
                  "column_name": "status",
                  "dtype": "string",
                  "description": "Current processing status of the order or event (e.g., confirmed, cancelled)."
                },
                {
                  "column_name": "project_title",
                  "dtype": "string",
                  "description": "Title of the project or product related to the campaign."
                },
                {
                  "column_name": "status_change_timestamp_berlin",
                  "dtype": "timestamp",
                  "description": "Status change timestamp normalized to Berlin timezone."
                },
                {
                  "column_name": "click_timestamp_utc",
                  "dtype": "timestamp",
                  "description": "Timestamp of the click event in UTC."
                },
                {
                  "column_name": "payout_date",
                  "dtype": "string",
                  "description": "Date when payout for the transaction is scheduled or executed."
                },
                {
                  "column_name": "publisher_id",
                  "dtype": "string",
                  "description": "Identifier for the publisher associated with the event."
                },
                {
                  "column_name": "commission_group_id",
                  "dtype": "string",
                  "description": "Identifier for the commission grouping applied to this transaction."
                },
                {
                  "column_name": "delivered_tag_code_count",
                  "dtype": "bigint",
                  "description": "Count of tag codes delivered for this record."
                },
                {
                  "column_name": "order_id",
                  "dtype": "string",
                  "description": "Unique identifier for the order or transaction."
                },
                {
                  "column_name": "country_code",
                  "dtype": "string",
                  "description": "ISO country code associated with the event or user location."
                },
                {
                  "column_name": "inquiry_uuid",
                  "dtype": "string",
                  "description": "UUID referencing the original inquiry related to the event."
                },
                {
                  "column_name": "aaaid",
                  "dtype": "string",
                  "description": "Affiliate or traffic source identifier used for attribution."
                },
                {
                  "column_name": "external_sources_entity_id",
                  "dtype": "bigint",
                  "description": "External source system entity identifier for cross-referencing."
                },
                {
                  "column_name": "project_id",
                  "dtype": "string",
                  "description": "Identifier for the project tied to the campaign or order."
                },
                {
                  "column_name": "campaign_id",
                  "dtype": "string",
                  "description": "Identifier of the marketing campaign associated with the event."
                },
                {
                  "column_name": "commission",
                  "dtype": "double",
                  "description": "Monetary commission amount associated with the transaction."
                },
                {
                  "column_name": "source_amount",
                  "dtype": "double",
                  "description": "Monetary amount as reported by the source system."
                },
                {
                  "column_name": "timestamp_utc",
                  "dtype": "timestamp",
                  "description": "Event timestamp recorded in UTC."
                },
                {
                  "column_name": "advertiser_id",
                  "dtype": "string",
                  "description": "Identifier for the advertiser associated with the campaign or order."
                },
                {
                  "column_name": "last_change",
                  "dtype": "timestamp",
                  "description": "Timestamp of the most recent change to the record (UTC)."
                },
                {
                  "column_name": "order_click_id",
                  "dtype": "string",
                  "description": "Identifier linking the order to the originating click event."
                },
                {
                  "column_name": "source",
                  "dtype": "string",
                  "description": "Origin system or data source for the event."
                },
                {
                  "column_name": "publisher_first_name",
                  "dtype": "string",
                  "description": "Publisher's first name, used for contact or reporting."
                },
                {
                  "column_name": "description",
                  "dtype": "string",
                  "description": "Free-text description providing additional context for the record."
                },
                {
                  "column_name": "timestamp",
                  "dtype": "timestamp",
                  "description": "General event timestamp (system ingestion or event time)."
                },
                {
                  "column_name": "campaign_title",
                  "dtype": "string",
                  "description": "Human-readable title of the campaign."
                },
                {
                  "column_name": "cancel_reason",
                  "dtype": "string",
                  "description": "Reason provided for order cancellation, if applicable."
                },
                {
                  "column_name": "qualified_at_utc",
                  "dtype": "timestamp",
                  "description": "UTC timestamp when the event was marked as qualified."
                },
                {
                  "column_name": "action_timestamp",
                  "dtype": "timestamp",
                  "description": "Timestamp for the specific action related to this event."
                },
                {
                  "column_name": "salary_id",
                  "dtype": "double",
                  "description": "Numeric identifier related to salary or payout records."
                },
                {
                  "column_name": "transaction_type",
                  "dtype": "string",
                  "description": "Categorization of the transaction event type."
                },
                {
                  "column_name": "timestamp_berlin",
                  "dtype": "timestamp",
                  "description": "Event timestamp converted to Berlin timezone."
                },
                {
                  "column_name": "delivered_tag_code_server_sided_url",
                  "dtype": "bigint",
                  "description": "Server-side tracking URL used for tag delivery."
                },
                {
                  "column_name": "click_id",
                  "dtype": "double",
                  "description": "Numeric identifier for the click event recorded by tracking systems."
                },
                {
                  "column_name": "publisher_search_title",
                  "dtype": "string",
                  "description": "Searchable title or label for the publisher used in UI and reporting."
                },
                {
                  "column_name": "sub_id",
                  "dtype": "string",
                  "description": "Optional sub-identifier for additional segmentation or publisher sub-account."
                },
                {
                  "column_name": "trigger_type",
                  "dtype": "string",
                  "description": "Type of trigger that generated the event (e.g., conversion, click)."
                },
                {
                  "column_name": "publisher_last_name",
                  "dtype": "string",
                  "description": "Publisher's last name, used for contact or reporting."
                },
                {
                  "column_name": "trigger_value",
                  "dtype": "string",
                  "description": "Value associated with the trigger, used for scoring or segmentation."
                },
                {
                  "column_name": "ad_id",
                  "dtype": "string",
                  "description": "Identifier for the specific advertisement creative or placement."
                },
                {
                  "column_name": "user_agent",
                  "dtype": "string",
                  "description": "HTTP user agent string from the client; can be used for device fingerprinting."
                },
                {
                  "column_name": "qualified_at_berlin",
                  "dtype": "timestamp",
                  "description": "Timestamp when the event was marked as qualified, in Berlin timezone."
                },
                {
                  "column_name": "event_timestamp_utc",
                  "dtype": "timestamp",
                  "description": "Specific event timestamp in UTC representing the original event occurrence."
                },
                {
                  "column_name": "campaign_group_title",
                  "dtype": "string",
                  "description": "Title representing the campaign group for aggregation and organization."
                },
                {
                  "column_name": "referer",
                  "dtype": "string",
                  "description": "Referring URL that redirected the user to the tracked page."
                },
                {
                  "column_name": "partner_id",
                  "dtype": "bigint",
                  "description": "Identifier for the partner or affiliate connected to the transaction."
                },
                {
                  "column_name": "status_change_date",
                  "dtype": "timestamp",
                  "description": "Timestamp when the order status was last changed."
                },
                {
                  "column_name": "order_timestamp",
                  "dtype": "timestamp",
                  "description": "Timestamp when the order was placed."
                },
                {
                  "column_name": "product_id",
                  "dtype": "bigint",
                  "description": "Identifier for the product involved in the order or event."
                }
              ]
            },
            {
              "table_name": "two_factor_authentication",
              "column_info": [
                {
                  "column_name": "action",
                  "dtype": "string",
                  "description": "Action performed in the authentication flow (for example 'send' or 'verify')."
                },
                {
                  "column_name": "resource_type",
                  "dtype": "string",
                  "description": "Type of the resource referenced (for example 'user' or 'device')."
                },
                {
                  "column_name": "channel",
                  "dtype": "string",
                  "description": "Communication channel used for verification delivery (e.g., sms, voice)."
                },
                {
                  "column_name": "event_timestamp",
                  "dtype": "timestamp",
                  "description": "Timestamp when the event occurred in the application or service."
                },
                {
                  "column_name": "verification_id",
                  "dtype": "string",
                  "description": "Identifier for the verification attempt or code used to correlate attempts; may be sensitive."
                },
                {
                  "column_name": "contacted_twilio",
                  "dtype": "boolean",
                  "description": "Boolean indicating whether Twilio was contacted to send the verification message."
                },
                {
                  "column_name": "resource_id",
                  "dtype": "string",
                  "description": "Identifier of the target resource or user account involved in the authentication attempt."
                },
                {
                  "column_name": "event_kafka_timestamp",
                  "dtype": "timestamp",
                  "description": "Timestamp when the event was published to Kafka."
                },
                {
                  "column_name": "line_type",
                  "dtype": "string",
                  "description": "Type of contact line used to deliver the code (such as mobile or landline)."
                },
                {
                  "column_name": "valid",
                  "dtype": "boolean",
                  "description": "Boolean indicating whether the verification attempt was valid/successful."
                },
                {
                  "column_name": "event_uuid",
                  "dtype": "string",
                  "description": "Globally unique identifier for the event record."
                },
                {
                  "column_name": "status",
                  "dtype": "string",
                  "description": "Status of the two-factor operation (e.g., sent, failed, delivered)."
                },
                {
                  "column_name": "_meta",
                  "dtype": "struct<event_uuid:string,event_time:string,application:string,origin:string,experiments:array<struct<id:string,variant:string>>,client_info:struct<asn:string,country:string,region:string,city:string,postal_code:string,latitude:string,longitude:string,ja4_fingerprint:string,is_desktop_viewer:boolean,is_mobile_viewer:boolean,is_smarttv_viewer:boolean,is_tablet_viewer:boolean,is_android_viewer:boolean,is_ios_viewer:boolean>,user:struct<uuid:string,roles:array<string>>>",
                  "description": "Structured event metadata including user details, client_info (location, device) and experiments; may contain PII such as user UUID and location."
                }
              ]
            },
            {
              "table_name": "user_attached_to_draft",
              "column_info": [
                {
                  "column_name": "event_kafka_timestamp",
                  "dtype": "timestamp",
                  "description": "Timestamp when the event was recorded in Kafka."
                },
                {
                  "column_name": "event_timestamp",
                  "dtype": "timestamp",
                  "description": "Timestamp when the user action occurred."
                },
                {
                  "column_name": "product_request_uuid",
                  "dtype": "string",
                  "description": "Identifier for the related product request."
                },
                {
                  "column_name": "_meta",
                  "dtype": "struct<event_uuid:string,event_time:string,application:string,origin:string,experiments:array<struct<id:string,variant:string>>,client_info:struct<asn:string,country:string,region:string,city:string,postal_code:string,latitude:string,longitude:string,ja4_fingerprint:string,is_desktop_viewer:boolean,is_mobile_viewer:boolean,is_smarttv_viewer:boolean,is_tablet_viewer:boolean,is_android_viewer:boolean,is_ios_viewer:boolean>,user:struct<uuid:string,roles:array<string>>>",
                  "description": "Nested event metadata including client details, location, device fingerprints, experiments, and a user sub-structure; may contain identifiers and location data."
                },
                {
                  "column_name": "user_uuid",
                  "dtype": "string",
                  "description": "Unique identifier for the user associated with the event."
                },
                {
                  "column_name": "event_uuid",
                  "dtype": "string",
                  "description": "Unique identifier for the event record."
                }
              ]
            },
            {
              "table_name": "user_clicked",
              "column_info": [
                {
                  "column_name": "value",
                  "dtype": "string",
                  "description": "Associated value or payload for the labeled event field."
                },
                {
                  "column_name": "page",
                  "dtype": "struct<url:string,referer:string,type:string,language_code:string,country_code:string,product_id:string,ref:string,source:string>",
                  "description": "Page-level details such as page URL, referer, content type, language and product context."
                },
                {
                  "column_name": "position",
                  "dtype": "string",
                  "description": "Position or index of the element within the page or component."
                },
                {
                  "column_name": "label",
                  "dtype": "string",
                  "description": "Categorical label for the event or element used for business classification."
                },
                {
                  "column_name": "client_timestamp",
                  "dtype": "timestamp",
                  "description": "Timestamp recorded by the client when the event occurred."
                },
                {
                  "column_name": "user_data",
                  "dtype": "struct<uuid:string,roles:array<string>>",
                  "description": "User identity struct containing uuid and roles; primary user identifier associated with the event."
                },
                {
                  "column_name": "is_internal",
                  "dtype": "boolean",
                  "description": "Boolean flag indicating whether the event originates from an internal user or system."
                },
                {
                  "column_name": "element_id",
                  "dtype": "string",
                  "description": "Identifier of the clicked element on the page."
                },
                {
                  "column_name": "event_kafka_timestamp",
                  "dtype": "timestamp",
                  "description": "Ingest timestamp from Kafka indicating when the event was produced."
                },
                {
                  "column_name": "cockpit_data",
                  "dtype": "struct<vendor_uuid:string,modified_user_role:string>",
                  "description": "Vendor-specific metadata such as vendor UUID and modified user role; may contain vendor-linked identifiers."
                },
                {
                  "column_name": "element_section",
                  "dtype": "string",
                  "description": "Section or area of the page where the element is located."
                },
                {
                  "column_name": "event_timestamp",
                  "dtype": "timestamp",
                  "description": "Canonical event timestamp recorded by the ingestion or processing pipeline."
                },
                {
                  "column_name": "_meta",
                  "dtype": "struct<event_uuid:string,event_time:string,application:string,origin:string,experiments:array<struct<id:string,variant:string>>,client_info:struct<asn:string,country:string,region:string,city:string,postal_code:string,latitude:string,longitude:string,ja4_fingerprint:string,is_desktop_viewer:boolean,is_mobile_viewer:boolean,is_smarttv_viewer:boolean,is_tablet_viewer:boolean,is_android_viewer:boolean,is_ios_viewer:boolean>,user:struct<uuid:string,roles:array<string>>>",
                  "description": "Nested event metadata including event UUID, event time, application, origin, experiments, client_info (geo, device flags, ja4_fingerprint) and user (uuid and roles). Contains user and device identifiers that can be PIIs."
                },
                {
                  "column_name": "type",
                  "dtype": "string",
                  "description": "Event type or action name describing the user interaction."
                },
                {
                  "column_name": "cms_data",
                  "dtype": "struct<experiment_id:int,variant_id:int,page_id:int,revision_id:int,targeting_preset_id:int,url_node_id:int,root_node_id:int,form_id:int,experiments:array<struct<id:string,name:string,version_id:string,version_name:string>>,variants:array<struct<id:string,name:string,version_id:string,version_name:string>>>",
                  "description": "CMS and experiment metadata including experiment and variant IDs, page and form identifiers."
                },
                {
                  "column_name": "event_uuid",
                  "dtype": "string",
                  "description": "Unique identifier for the event record."
                },
                {
                  "column_name": "device",
                  "dtype": "struct<user_agent:string,screen_width:int,screen_height:int,viewport_width:int,viewport_height:int,is_touch:boolean,connection_type:string,language_code:string>",
                  "description": "Device details including user agent, screen and viewport dimensions, touch capability, connection type and language."
                },
                {
                  "column_name": "visitor_id",
                  "dtype": "string",
                  "description": "Client-side visitor identifier (cookie or fingerprint) used to track sessions across visits and considered PII."
                },
                {
                  "column_name": "google_analytics",
                  "dtype": "struct<_ga:string,_gid:string>",
                  "description": "Google Analytics identifiers (such as _ga and _gid) associated with the session; considered PII-like tracking identifiers."
                }
              ]
            },
            {
              "table_name": "user_cookie_consent",
              "column_info": [
                {
                  "column_name": "event_uuid",
                  "dtype": "string",
                  "description": "Unique identifier for the consent event."
                },
                {
                  "column_name": "event_timestamp",
                  "dtype": "timestamp",
                  "description": "Canonical timestamp indicating when the event was generated or logged."
                },
                {
                  "column_name": "device",
                  "dtype": "struct<user_agent:string,screen_width:int,screen_height:int,viewport_width:int,viewport_height:int,is_touch:boolean,connection_type:string,language_code:string>",
                  "description": "Device and client details such as user_agent, screen and viewport dimensions, and connection type."
                },
                {
                  "column_name": "client_timestamp",
                  "dtype": "timestamp",
                  "description": "Timestamp recorded by the client when the user action occurred."
                },
                {
                  "column_name": "visitor_id",
                  "dtype": "string",
                  "description": "Visitor identifier (cookie or device-based id) used to track the visitor across sessions."
                },
                {
                  "column_name": "_meta",
                  "dtype": "struct<event_uuid:string,event_time:string,application:string,origin:string,experiments:array<struct<id:string,variant:string>>,client_info:struct<asn:string,country:string,region:string,city:string,postal_code:string,latitude:string,longitude:string,ja4_fingerprint:string,is_desktop_viewer:boolean,is_mobile_viewer:boolean,is_smarttv_viewer:boolean,is_tablet_viewer:boolean,is_android_viewer:boolean,is_ios_viewer:boolean>,user:struct<uuid:string,roles:array<string>>>",
                  "description": "Nested event metadata including user identifiers and client_info (may contain location fields like city, postal_code, latitude/longitude)."
                },
                {
                  "column_name": "page",
                  "dtype": "struct<url:string,referer:string,type:string,language_code:string,country_code:string,product_id:string,ref:string,source:string>",
                  "description": "Struct containing page-level data such as url, referer, language and product context."
                },
                {
                  "column_name": "event_kafka_timestamp",
                  "dtype": "timestamp",
                  "description": "Timestamp when the event was ingested from Kafka."
                },
                {
                  "column_name": "user_data",
                  "dtype": "struct<uuid:string,roles:array<string>>",
                  "description": "Struct containing user uuid and roles; uuid is a user identifier and is considered PII."
                },
                {
                  "column_name": "is_internal",
                  "dtype": "boolean",
                  "description": "Boolean flag indicating whether the event originated from an internal source."
                },
                {
                  "column_name": "services",
                  "dtype": "array<struct<category:string,service_id:string,name:string,description:string,status:boolean>>",
                  "description": "Array of service consent entries with service_id, name, category, description and consent status."
                }
              ]
            },
            {
              "table_name": "user_logged_in",
              "column_info": [
                {
                  "column_name": "cms_data",
                  "dtype": "struct<experiment_id:int,variant_id:int,page_id:int,revision_id:int,targeting_preset_id:int,url_node_id:int,root_node_id:int,form_id:int,experiments:array<struct<id:string,name:string,version_id:string,version_name:string>>,variants:array<struct<id:string,name:string,version_id:string,version_name:string>>>",
                  "description": "Content management metadata about experiments, variants and page identifiers."
                },
                {
                  "column_name": "visitor_id",
                  "dtype": "string",
                  "description": "Identifier assigned to the visitor (device or browser-level id) used for tracking sessions and behavior."
                },
                {
                  "column_name": "is_internal",
                  "dtype": "boolean",
                  "description": "Flag indicating whether the event originated from an internal user or system."
                },
                {
                  "column_name": "page",
                  "dtype": "struct<url:string,referer:string,type:string,language_code:string,country_code:string,product_id:string,ref:string,source:string>",
                  "description": "Structured page context including URL, referer, type, language and product or source references."
                },
                {
                  "column_name": "_meta",
                  "dtype": "struct<event_uuid:string,event_time:string,application:string,origin:string,experiments:array<struct<id:string,variant:string>>,client_info:struct<asn:string,country:string,region:string,city:string,postal_code:string,latitude:string,longitude:string,ja4_fingerprint:string,is_desktop_viewer:boolean,is_mobile_viewer:boolean,is_smarttv_viewer:boolean,is_tablet_viewer:boolean,is_android_viewer:boolean,is_ios_viewer:boolean>,user:struct<uuid:string,roles:array<string>>>",
                  "description": "Rich event metadata including event UUID, origin, client geographic and fingerprint data, and nested user info; may contain personal or sensitive identifiers."
                },
                {
                  "column_name": "login_provider",
                  "dtype": "string",
                  "description": "Authentication provider used for the login (e.g., email, Google, SSO)."
                },
                {
                  "column_name": "event_kafka_timestamp",
                  "dtype": "timestamp",
                  "description": "Timestamp when the event was produced to Kafka."
                },
                {
                  "column_name": "client_timestamp",
                  "dtype": "timestamp",
                  "description": "Timestamp generated by the client when the event occurred."
                },
                {
                  "column_name": "event_uuid",
                  "dtype": "string",
                  "description": "Unique identifier for the recorded event."
                },
                {
                  "column_name": "event_timestamp",
                  "dtype": "timestamp",
                  "description": "Canonical timestamp for when the event was recorded or normalized."
                },
                {
                  "column_name": "device",
                  "dtype": "struct<user_agent:string,screen_width:int,screen_height:int,viewport_width:int,viewport_height:int,is_touch:boolean,connection_type:string,language_code:string>",
                  "description": "Structured device information: user agent, screen and viewport dimensions, touch capability, connection type and language."
                },
                {
                  "column_name": "stay_logged_in",
                  "dtype": "boolean",
                  "description": "Indicates whether the user opted to remain logged in."
                },
                {
                  "column_name": "user_data",
                  "dtype": "struct<uuid:string,roles:array<string>>",
                  "description": "Structured user information such as user UUID and roles; contains identifiers that can identify an individual."
                },
                {
                  "column_name": "google_analytics",
                  "dtype": "struct<_ga:string,_gid:string>",
                  "description": "Google Analytics identifiers (e.g., _ga, _gid) used for tracking; these values can be tied to user sessions or devices."
                }
              ]
            },
            {
              "table_name": "user_registered",
              "column_info": [
                {
                  "column_name": "visitor_id",
                  "dtype": "string",
                  "description": "Analytics visitor identifier that links events to a specific visitor."
                },
                {
                  "column_name": "event_uuid",
                  "dtype": "string",
                  "description": "Unique identifier for the event message."
                },
                {
                  "column_name": "registration_trigger",
                  "dtype": "string",
                  "description": "Source or type of the registration action (e.g., form_submit, oauth)."
                },
                {
                  "column_name": "event_timestamp",
                  "dtype": "timestamp",
                  "description": "Timestamp when the event occurred, as reported in the event payload."
                },
                {
                  "column_name": "_meta",
                  "dtype": "struct<event_uuid:string,event_time:string,application:string,origin:string,experiments:array<struct<id:string,variant:string>>,client_info:struct<asn:string,country:string,region:string,city:string,postal_code:string,latitude:string,longitude:string,ja4_fingerprint:string,is_desktop_viewer:boolean,is_mobile_viewer:boolean,is_smarttv_viewer:boolean,is_tablet_viewer:boolean,is_android_viewer:boolean,is_ios_viewer:boolean>,user:struct<uuid:string,roles:array<string>>>",
                  "description": "Event metadata containing event identifiers, client geolocation/fingerprint and nested user info."
                },
                {
                  "column_name": "google_analytics",
                  "dtype": "struct<_ga:string,_gid:string>",
                  "description": "Google Analytics identifiers (ga and _gid) associated with the visitor."
                },
                {
                  "column_name": "event_kafka_timestamp",
                  "dtype": "timestamp",
                  "description": "Timestamp when the event was produced to Kafka or ingested into the pipeline."
                },
                {
                  "column_name": "user_data",
                  "dtype": "struct<uuid:string,roles:array<string>>",
                  "description": "Nested user information including uuid and roles; uuid maps to the user identity."
                },
                {
                  "column_name": "client_timestamp",
                  "dtype": "timestamp",
                  "description": "Timestamp captured on the client device at the moment of the event."
                },
                {
                  "column_name": "device",
                  "dtype": "struct<user_agent:string,screen_width:int,screen_height:int,viewport_width:int,viewport_height:int,is_touch:boolean,connection_type:string,language_code:string>",
                  "description": "Device and browser attributes such as user agent, screen dimensions, connection type, and language."
                },
                {
                  "column_name": "page",
                  "dtype": "struct<url:string,referer:string,type:string,language_code:string,country_code:string,product_id:string,ref:string,source:string>",
                  "description": "Page context for the event, including URL, referer, type, language and product identifiers."
                },
                {
                  "column_name": "is_internal",
                  "dtype": "boolean",
                  "description": "Boolean flag indicating whether the registration was initiated by an internal system or user."
                },
                {
                  "column_name": "cms_data",
                  "dtype": "struct<experiment_id:int,variant_id:int,page_id:int,revision_id:int,targeting_preset_id:int,url_node_id:int,root_node_id:int,form_id:int,experiments:array<struct<id:string,name:string,version_id:string,version_name:string>>,variants:array<struct<id:string,name:string,version_id:string,version_name:string>>>",
                  "description": "CMS and experimentation metadata (experiment/variant/page identifiers and related fields)."
                }
              ]
            },
            {
              "table_name": "webmatch_identified",
              "column_info": [
                {
                  "column_name": "event_timestamp",
                  "dtype": "timestamp",
                  "description": "Canonical timestamp when the event was recorded in the system."
                },
                {
                  "column_name": "notes",
                  "dtype": "array<string>",
                  "description": "Free-text notes attached to the event; may contain user-provided or sensitive information."
                },
                {
                  "column_name": "event_uuid",
                  "dtype": "string",
                  "description": "Unique identifier for the event."
                },
                {
                  "column_name": "event_kafka_timestamp",
                  "dtype": "timestamp",
                  "description": "Timestamp when the event was published to Kafka or ingested."
                },
                {
                  "column_name": "given_answers",
                  "dtype": "array<struct<type:string,form_service_answer_uuid:string,form_service_answer_text:boolean,form_service_question_uuid:string,label:string,value:string,slug:string>>",
                  "description": "Array of form answers submitted by the visitor, including question and answer identifiers, labels and values."
                },
                {
                  "column_name": "matched_assignment_terms",
                  "dtype": "array<string>",
                  "description": "List of assignment or matching terms associated with the event."
                },
                {
                  "column_name": "cms_data",
                  "dtype": "struct<experiment_id:int,variant_id:int,page_id:int,revision_id:int,targeting_preset_id:int,url_node_id:int,root_node_id:int,form_id:int,experiments:array<struct<id:string,name:string,version_id:string,version_name:string>>,variants:array<struct<id:string,name:string,version_id:string,version_name:string>>>",
                  "description": "Content management system fields describing experiments, variants and page/form identifiers."
                },
                {
                  "column_name": "page",
                  "dtype": "struct<url:string,referer:string,type:string,language_code:string,country_code:string,product_id:string,ref:string,source:string>",
                  "description": "Page-level context such as URL, referrer, language and source."
                },
                {
                  "column_name": "match_status",
                  "dtype": "string",
                  "description": "Status describing the result of the matching process for this event."
                },
                {
                  "column_name": "visitor_id",
                  "dtype": "string",
                  "description": "Identifier assigned to the visitor for tracking and linking sessions."
                },
                {
                  "column_name": "google_analytics",
                  "dtype": "struct<_ga:string,_gid:string>",
                  "description": "Google Analytics identifiers (e.g. _ga, _gid) captured from the visitor's browser."
                },
                {
                  "column_name": "_meta",
                  "dtype": "struct<event_uuid:string,event_time:string,application:string,origin:string,experiments:array<struct<id:string,variant:string>>,client_info:struct<asn:string,country:string,region:string,city:string,postal_code:string,latitude:string,longitude:string,ja4_fingerprint:string,is_desktop_viewer:boolean,is_mobile_viewer:boolean,is_smarttv_viewer:boolean,is_tablet_viewer:boolean,is_android_viewer:boolean,is_ios_viewer:boolean>,user:struct<uuid:string,roles:array<string>>>",
                  "description": "Nested event metadata including identifiers, client_info (location, fingerprint) and user details."
                },
                {
                  "column_name": "device",
                  "dtype": "struct<user_agent:string,screen_width:int,screen_height:int,viewport_width:int,viewport_height:int,is_touch:boolean,connection_type:string,language_code:string>",
                  "description": "Device and browser characteristics including user agent, screen and viewport dimensions."
                },
                {
                  "column_name": "product_id",
                  "dtype": "bigint",
                  "description": "Identifier of the product associated with the event, if applicable."
                },
                {
                  "column_name": "trackings",
                  "dtype": "struct<referer:string,gclid:string,ag:string,ag_url:string,experiment_id:int,entrance_url:string,variant_id:int,subid:string,vertical:string,uid:string,partner:string,partner_clean:string,conversion_group:string,form_url:string,form_referer:string,aaaid:string,vendor_id:string,ad_id:string,campaign_id:string,adgroup_id:string,account_id:string,lead_id:string>",
                  "description": "Tracking and attribution identifiers such as gclid, uid, vendor/ad IDs and campaign metadata."
                },
                {
                  "column_name": "client_timestamp",
                  "dtype": "timestamp",
                  "description": "Timestamp recorded by the client when the event occurred."
                },
                {
                  "column_name": "postal_code",
                  "dtype": "string",
                  "description": "Postal code associated with the event or the visitor's location."
                },
                {
                  "column_name": "is_internal",
                  "dtype": "boolean",
                  "description": "Boolean flag indicating whether the event originated from an internal user or environment."
                }
              ]
            },
            {
              "table_name": "zenloop_answers",
              "column_info": [
                {
                  "column_name": "additional_answers",
                  "dtype": "array<struct<additional_question_id:string,answer:array<string>,inserted_at:timestamp>>",
                  "description": "Array of additional answer objects with question id, answers array and insertion timestamp; may contain free-text that can include PII."
                },
                {
                  "column_name": "email",
                  "dtype": "string",
                  "description": "Respondent's email address."
                },
                {
                  "column_name": "metatags",
                  "dtype": "map<string,string>",
                  "description": "Map of metadata key/value pairs attached to the answer."
                },
                {
                  "column_name": "score_type",
                  "dtype": "string",
                  "description": "Type or scale of the score (e.g., nps, rating)."
                },
                {
                  "column_name": "sentiment",
                  "dtype": "string",
                  "description": "Overall sentiment label derived from the response (e.g., positive, neutral, negative)."
                },
                {
                  "column_name": "identity",
                  "dtype": "string",
                  "description": "Identifier linking the answer to a user (e.g., username or customer id)."
                },
                {
                  "column_name": "property_ids",
                  "dtype": "array<string>",
                  "description": "Array of property identifiers related to the answer (locations or business units)."
                },
                {
                  "column_name": "id",
                  "dtype": "string",
                  "description": "Unique identifier for the answer record."
                },
                {
                  "column_name": "identity_type",
                  "dtype": "string",
                  "description": "Type of identity provided (e.g., email, anonymous, user_id)."
                },
                {
                  "column_name": "labels",
                  "dtype": "array<string>",
                  "description": "Array of labels or tags associated with the answer."
                },
                {
                  "column_name": "event_timestamp",
                  "dtype": "timestamp",
                  "description": "Timestamp when the answer/event was recorded."
                },
                {
                  "column_name": "sentiment_per_label_name",
                  "dtype": "map<string,string>",
                  "description": "Map of sentiment classifications broken down by label name."
                },
                {
                  "column_name": "survey_id",
                  "dtype": "string",
                  "description": "Identifier for the survey this answer belongs to."
                },
                {
                  "column_name": "labels_with_keywords",
                  "dtype": "map<string,array<string>>",
                  "description": "Map of label names to arrays of extracted keywords related to each label."
                },
                {
                  "column_name": "additional_questions",
                  "dtype": "map<string,array<string>>",
                  "description": "Map of additional question identifiers to their possible answers."
                },
                {
                  "column_name": "recipient_id",
                  "dtype": "string",
                  "description": "Identifier of the recipient/respondent who received the survey."
                },
                {
                  "column_name": "comment",
                  "dtype": "string",
                  "description": "Free-text comment from the respondent; may contain personal or sensitive information."
                },
                {
                  "column_name": "score",
                  "dtype": "bigint",
                  "description": "Numeric score provided by the respondent (e.g., NPS or rating)."
                }
              ]
            }
          ]
        }
      ]
    }
  ]